getHttpConnection ( arg ) . close ( arg ) ;
getHttpConnection ( arg ) . close ( arg ) ;
Path modFile = basehome . getPath ( arg ) ;
Path base = FS . toPath ( arg ) ;
File homePath = MavenTestingUtils . getTestResourceDir ( arg ) . getAbsoluteFile ( arg ) ;
if ( request . getInputStream ( arg ) . isReady ( arg ) ) onDataAvailable ( arg ) ;
Assert . assertThat ( arg ) ;
FS . ensureEmpty ( arg ) ;
ClassLoadingObjectInputStream ois = new ClassLoadingObjectInputStream ( arg ) ;
Class < ? > reflect = Loader . loadClass ( arg ) ;
Class < ? > caller = ( Class < ? > ) getCallerClass . invoke ( arg ) ;
Class < ? > jspUtil = Loader . loadClass ( arg ) ;
Class < ? > jspUtil = Loader . loadClass ( arg ) ;
_baseUri = _testServer . getBaseUri ( arg ) ;
_baseUri = _testServer . getBaseUri ( arg ) ;
if ( proxyServlet . _log . isDebugEnabled ( arg ) ) proxyServlet . _log . debug ( arg ) ;
lease . insert ( arg ) ;
if ( remoteStreamCount . compareAndSet ( arg ) ) break ;
if ( frame . isEndStream ( arg ) ) prepareLatch . countDown ( arg ) ;
Callback callback2 = callbackRef3 . getAndSet ( arg ) ;
final CountDownLatch warmupLatch = new CountDownLatch ( arg ) ;
warmupLatch . countDown ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
if ( ! _interestState . compareAndSet ( arg ) ) break ;
HttpParser . RequestHandler handler = new Handler ( arg ) ;
_committedMetaData = info ;
return _committedMetaData ;
List < AsyncChunk > chunks = new ArrayList <> ( arg ) ;
return Objects . equals ( arg ) ;
if ( suspended || getEndPoint ( arg ) . getConnection ( arg ) != this || handling ) break ;
