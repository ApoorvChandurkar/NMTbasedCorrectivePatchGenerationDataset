body = batchRequestEntity . getRequestBodyAsString ( arg ) ;
startDate = DateUtils . convertToDate ( arg ) ;
endDate = DateUtils . convertToDate ( arg ) ;
jobDetail = newJob ( arg ) . withIdentity ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . storeDurably ( arg ) . build ( arg ) ;
batchRequestResponse = executionScheduleManager . getBatchRequestResponse ( arg ) ;
return taskCounts . get ( arg ) > batchSettings . getTaskFailureToleranceLimit ( arg ) ;
module = new InMemoryDefaultTestModule ( arg ) ;
return resourceProviders . keySet ( arg ) ;
ViewSubResourceDefinition resourceDefinition = new ViewSubResourceDefinition ( arg ) ;
ViewSubResourceDefinition definition = createNiceMock ( arg ) ;
return getViewDefinition ( arg ) ;
PassiveState oldPassive = psh . getEffectiveState ( arg ) ;
module = new GuiceModule ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
URI uriMock = PowerMock . createMock ( arg ) ;
rpCapture . getValue ( arg ) ;
map = rpCapture . getValue ( arg ) ;
map = rpCapture . getValue ( arg ) ;
return instances == null ? Collections . < InstanceConfig > emptyList ( arg ) : instances ;
return parameters == null ? Collections . < ParameterConfig > emptyList ( arg ) : parameters ;
PassiveStateHelper . createRequests ( arg ) ;
PassiveStateHelper . createRequests ( arg ) ;
PassiveStateHelper . createRequests ( arg ) ;
MaintenanceStateHelper psh = injector . getInstance ( arg ) ;
sch . setMaintenanceState ( arg ) ;
sch . setMaintenanceState ( arg ) ;
r . setMaintenanceState ( arg ) ;
r . setMaintenanceState ( arg ) ;
sch . setMaintenanceState ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
serviceComponentHostRequest . setMaintenanceState ( arg ) ;
r . setMaintenanceState ( arg ) ;
h . setMaintenanceState ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
s . setMaintenanceState ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
r . setMaintenanceState ( arg ) ;
hdfs . getServiceComponent ( arg ) . getServiceComponentHost ( arg ) . setMaintenanceState ( arg ) ;
hdfs . getServiceComponent ( arg ) . getServiceComponentHost ( arg ) . setMaintenanceState ( arg ) ;
service2 . setMaintenanceState ( arg ) ;
service2 . setMaintenanceState ( arg ) ;
h1 . setMaintenanceState ( arg ) ;
h1 . setMaintenanceState ( arg ) ;
service2 . setMaintenanceState ( arg ) ;
customCommandExecutionHelper . addExecutionCommandsToStage ( arg ) ;
AmbariMetaInfo ambariMetaInfo = amc . getAmbariMetaInfo ( arg ) ;
Map < String , Map < String , String >> configTags = amc . findConfigurationTagsWithOverrides ( arg ) ;
customCommandExecutionHelper . validateCustomCommand ( arg ) ;
actionExecContext = actionExecutionHelper . validateCustomAction ( arg ) ;
customCommandExecutionHelper . addAction ( arg ) ;
actionExecutionHelper . addAction ( arg ) ;
DatabaseLogin login = new DatabaseLogin ( arg ) ;
AmbariMetaInfo ambariMetaInfo = managementController . getAmbariMetaInfo ( arg ) ;
Map < String , Map < String , String >> configTags = managementController . findConfigurationTagsWithOverrides ( arg ) ;
customCommandExecutionHelper . validateAction ( arg ) ;
actionExecutionHelper . validateAction ( arg ) ;
customCommandExecutionHelper . addExecutionCommandsToStage ( arg ) ;
actionExecutionHelper . addExecutionCommandsToStage ( arg ) ;
createHostAction ( arg ) ;
resultSet = dbAccessor . executeSelect ( arg ) ;
return hasMaster ? masterState == null ? State . STARTED : masterState : hasOther ? otherState : hasClient ? clientState == null ? State . INSTALLED : clientState : hasDisabled ? State . DISABLED : State . UNKNOWN ;
final String clusterName = clusterPropertyValue . toString ( arg ) ;
return inputs != null ? new String ( arg ) : null ;
this . inputs = inputs != null ? inputs . getBytes ( arg ) : null ;
Set < Map < String , String >> maintenanceSCHs = maintenanceStateHelper . getMaintenanceHostComponents ( arg ) ;
maintenanceStateHelper . createRequests ( arg ) ;
maintenanceStateHelper . createRequests ( arg ) ;
maintenanceStateHelper . createRequests ( arg ) ;
Map < Long , ConfigGroup > configGroupMap ;
maintenanceStateHelper . createRequests ( arg ) ;
maintenanceStateHelper . createRequests ( arg ) ;
maintenanceStateHelper . createRequests ( arg ) ;
ViewInstanceEntity instanceDefinition = ViewRegistry . getInstance ( arg ) . getInstanceDefinition ( arg ) ;
return viewInstanceEntity . getViewEntity ( arg ) . getAmbariProperty ( arg ) ;
return viewInstanceEntity . getName ( arg ) ;
return Collections . unmodifiableMap ( arg ) ;
return viewInstanceEntity . getResourceProvider ( arg ) ;
return viewInstanceEntity . getViewName ( arg ) ;
Set < ViewInstanceEntity > instanceDefinitions = new HashSet < ViewInstanceEntity > ( arg ) ;
Collection < ViewInstanceEntity > viewInstanceDefinitions = viewDefinition . getInstances ( arg ) ;
Map < String , ViewInstanceEntity > viewInstanceDefinitionMap = viewInstanceDefinitions . get ( arg ) ;
ViewEntity definition = getDefinition ( arg ) ;
addDefinition ( arg ) ;
Set < ViewInstanceEntity > instanceDefinitions = new HashSet < ViewInstanceEntity > ( arg ) ;
Set < ViewInstanceEntity > instanceDefinitions = new HashSet < ViewInstanceEntity > ( arg ) ;
Collection < ViewInstanceEntity > viewInstanceDefinitions = viewDefinition . getInstances ( arg ) ;
ViewInstanceEntity definition = ViewInstanceEntityTest . getViewInstanceEntity ( arg ) ;
ViewEntity viewDefinition = ViewEntityTest . getViewEntity ( arg ) ;
Collection < ViewEntity > viewDefinitions = registry . getDefinitions ( arg ) ;
Collection < ViewInstanceEntity > viewInstanceDefinitions = registry . getInstanceDefinitions ( arg ) ;
ViewEntity viewDefinition = ViewEntityTest . getViewEntity ( arg ) ;
ViewEntity viewDefinition = ViewEntityTest . getViewEntity ( arg ) ;
upgradeCatalog . upgradeData ( arg ) ;
setOsFamily ( arg ) ;
createBlueprintConfigEntities ( arg ) ;
createBlueprintConfigEntities ( arg ) ;
ResourceProvider componentProvider = getResourceProvider ( arg ) ;
getResourceProvider ( arg ) . createResources ( arg ) ;
( ( ConfigGroupResourceProvider ) getResourceProvider ( arg ) ) . createResources ( arg ) ;
return autoDeploy ;
return name ;
return scope ;
this . scope = scope ;
return FileUtils . readFileToString ( arg ) . trim ( arg ) ;
persistenceProperties . setProperty ( arg ) ;
persistenceProperties . setProperty ( arg ) ;
persistenceProperties . setProperty ( arg ) ;
installViewInstance ( arg ) ;
installViewInstance ( arg ) ;
installViewInstance ( arg ) ;
BlueprintEntity blueprint = toBlueprintEntity ( arg ) ;
BlueprintEntity blueprintEntity = createEntity ( arg ) ;
BlueprintEntity entity = createEntity ( arg ) ;
BlueprintEntity entity = createEntity ( arg ) ;
return new ViewVersionService ( arg ) ;
return viewInstanceEntity . getViewEntity ( arg ) . getCommonName ( arg ) ;
ClusterResourceProvider . init ( arg ) ;
ClusterResourceProvider . init ( arg ) ;
hdfsApi = api ;
hostIndex = hostsList . indexOf ( arg ) ;
LOG . warn ( arg ) ;
Set < String > possibleTypes = OsFamily . findTypes ( arg ) ;
String family = OsFamily . find ( arg ) ;
Map < String , String > mapHostProperties = ( Map < String , String > ) oHost ;
UpgradeCatalog160upgradeCatalog = createMockBuilder ( arg ) . addMockedMethod ( arg ) . createMock ( arg ) ;
State provisioningState = State . valueOf ( arg ) ;
dao . removeByName ( arg ) ;
Map < String , String > globalConfig = ambariClient . getConfiguration ( arg ) ;
requestEntity . setClusterId ( arg ) ;
return createSliderAppObject ( arg ) ;
List < ApplicationReport > yarnApps = sliderClient . listSliderInstances ( arg ) ;
Set < ViewInstanceEntity > allInstanceDefinitions = new HashSet < ViewInstanceEntity > ( arg ) ;
removeUndeployedViews ( arg ) ;
return allInstanceDefinitions ;
if ( null != cluster ) execCmd . setClusterHostInfo ( arg ) ;
if ( ( arg ) || ( arg ) ) resourceMap . put ( arg ) ;
return viewInstanceEntity == null ? null : viewInstanceEntity . getViewEntity ( arg ) . getAmbariProperty ( arg ) ;
return viewInstanceEntity == null ? null : viewInstanceEntity . getInstanceDataMap ( arg ) . get ( arg ) ;
return viewInstanceEntity == null ? null : viewInstanceEntity . getName ( arg ) ;
return viewInstanceEntity == null ? null : viewInstanceEntity . getResourceProvider ( arg ) ;
return viewEntity . getCommonName ( arg ) ;
Map < String , Metric > metrics = new HashMap < String , Metric > ( arg ) ;
SliderAppJmxHelper . addJmxPropertiesFromBeans ( arg ) ;
return this . viewName . equals ( arg ) && this . viewInstanceName . equals ( arg ) && this . name . equals ( arg ) && this . user . equals ( arg ) ;
return 31 * viewName . hashCode ( arg ) + viewInstanceName . hashCode ( arg ) + name . hashCode ( arg ) + user . hashCode ( arg ) ;
removeProperty ( arg ) ;
Collections . addAll ( arg ) ;
Collections . addAll ( arg ) ;
blueprintDAO . removeByName ( arg ) ;
BlueprintEntity entity = blueprintDAO . findByName ( arg ) ;
results = blueprintDAO . findAll ( arg ) ;
blueprintDAO = dao ;
BlueprintEntity blueprint = getExistingBlueprint ( arg ) ;
instanceDAO . merge ( arg ) ;
syncView ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
return results ;
return results ;
throw new MisconfigurationFormattedException ( arg ) ;
api = connectToTempletonApi ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
throw new MisconfigurationFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
return name . equals ( arg ) && user . equals ( arg ) && viewInstanceId . equals ( arg ) ;
return restartRequired == 0 ? false : true ;
this . restartRequired = ( restartRequired == false ? 0 : 1 ) ;
return viewInstanceEntity != null ? viewInstanceEntity . getUsername ( arg ) : null ;
Map < String , String > evaluatedProperties = null ;
return getPageResponse ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
Iterable < Resource > iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
Iterable < Resource > iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
offset = Integer . valueOf ( arg ) ;
offset = Integer . valueOf ( arg ) ;
Integer repeat = Integer . valueOf ( arg ) - 1 ;
Map < String , String > evalutedProperties = null ;
return getResources ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
Iterable < Resource > iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
Iterable < Resource > iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
offset = Integer . parseInt ( arg ) ;
offset = Integer . parseInt ( arg ) ;
Map < String , String > evaluatedProperties = null ;
String trueValue = postProcessPropertyValue ( arg ) ;
ViewInstanceEntity viewInstanceDefinition = createMockBuilder ( arg ) . addMockedMethod ( arg ) . addMockedMethod ( arg ) . addMockedMethod ( arg ) . withConstructor ( arg ) . createMock ( arg ) ;
final RequestResourceFilter resourceFilter ;
Map < String , ServiceComponentHost > components = cluster . getService ( arg ) . getServiceComponent ( arg ) . getServiceComponentHosts ( arg ) ;
RoleGraph rg ;
MaintenanceState maintenanceState = getEffectiveState ( arg ) ;
return enabled == 0 ? false : true ;
AlertDefinitionEntity result = mockDAO . findById ( arg ) ;
List < AlertDefinitionEntity > entities = mockDAO . findAll ( arg ) ;
AlertDefinitionEntity result = mockDAO . findByName ( arg ) ;
dao = createStrictMock ( arg ) ;
FailsafeHandlerList handlerList = new FailsafeHandlerList ( arg ) ;
handlerList . addFailsafeHandler ( arg ) ;
List < Map < String , Map < String , Object >>> listConfigurations = new ArrayList < Map < String , Map < String , Object >>> ( arg ) ;
Integer interval = Integer . valueOf ( arg ) ;
dao . create ( arg ) ;
List < AlertDefinitionEntity > definitions = dao . findAll ( arg ) ;
AlertDefinitionEntity retrieved = dao . findById ( arg ) ;
List < AlertDefinitionEntity > definitions = dao . findAll ( arg ) ;
List < AlertDefinitionEntity > definitions = dao . findAll ( arg ) ;
AlertDefinitionEntity retrieved = dao . findByName ( arg ) ;
dao . create ( arg ) ;
dao . create ( arg ) ;
definitionDao . create ( arg ) ;
List < AlertDefinitionEntity > definitions = definitionDao . findAll ( arg ) ;
List < AlertHistoryEntity > alerts = dao . findAll ( arg ) ;
dao . create ( arg ) ;
List < String > configDependencies = serviceInfo . getConfigDependenciesWithComponents ( arg ) ;
stale = componentInfo != null && componentInfo . hasConfigType ( arg ) ;
stale = serviceInfo . hasConfigType ( arg ) || componentInfo . hasConfigType ( arg ) ;
group . addAlertTarget ( arg ) ;
group . addAlertTarget ( arg ) ;
Process process = builder . start ( arg ) ;
Map < String , Map < String , ConfigProperty >> mapServiceConfig = new HashMap < String , Map < String , ConfigProperty >> ( arg ) ;
Map < String , ConfigProperty > mapTypeConfig = mapServiceConfig . get ( arg ) ;
mapTypeConfig = new HashMap < String , ConfigProperty > ( arg ) ;
String propertyIsFinal = ( String ) resource . getPropertyValue ( arg ) ;
config . setTag ( arg ) ;
clusterConfigMappingEntity . setTag ( arg ) ;
config1 . setTag ( arg ) ;
config2 . setTag ( arg ) ;
c1 . setTag ( arg ) ;
config1 . setTag ( arg ) ;
config2 . setTag ( arg ) ;
config1 . setTag ( arg ) ;
config2 . setTag ( arg ) ;
config1 . setTag ( arg ) ;
config2 . setTag ( arg ) ;
config . setTag ( arg ) ;
String version = config . getTag ( arg ) ;
version = config . getTag ( arg ) ;
StackAdvisorResourceProvider . init ( arg ) ;
StackAdvisorRequest recommendationRequest = prepareStackAdvisorRequest ( arg ) ;
Set < PrivilegeEntity > entitySet = new HashSet < PrivilegeEntity > ( arg ) ;
entitySet . add ( arg ) ;
return ! ( id != null ? ! id . equals ( arg ) : that . id != null ) &&! ( resourceType != null ? ! resourceType . equals ( arg ) : that . resourceType != null ) ;
PrivilegeResourceProvider . init ( arg ) ;
String userSearchBase = ldapServerProperties . get ( arg ) . getUserSearchBase ( arg ) ;
String dbName = configuration . getServerJDBCPostgresSchemaName ( arg ) ;
return cardinality ;
injector . getInstance ( arg ) . addServiceCheckAction ( arg ) ;
injector . getInstance ( arg ) . addServiceCheckAction ( arg ) ;
List < DBColumnInfo > columns ;
DBColumnInfo clusterConfigAttributesColumn = new DBColumnInfo ( arg ) ;
clusterGlobalLock . writeLock ( arg ) . unlock ( arg ) ;
LOG . debug ( arg ) ;
Map < String , HostGroupImpl > mapHostGroups = new HashMap < String , HostGroupImpl > ( arg ) ;
Map < String , HostGroupImpl > blueprintHostGroups = parseBlueprintHostGroups ( arg ) ;
ClusterBlueprintRenderer renderer = new TestBlueprintRenderer ( arg ) ;
ServiceComponentHostOpFailedEvent failedEvent = new ServiceComponentHostOpFailedEvent ( arg ) ;
String groupName = null ;
response = saHelper . recommend ( arg ) ;
StackAdvisorRequest saRequest = StackAdvisorRequestBuilder . forStack ( arg ) . ofType ( arg ) . forHosts ( arg ) . forServices ( arg ) . withComponentHostsMap ( arg ) . build ( arg ) ;
response = saHelper . validate ( arg ) ;
String serviceId = null ;
ComponentInfo parentComponent = parentService . getComponentByName ( arg ) ;
ComponentInfo componentInfo = serviceInfo . getComponentByName ( arg ) ;
return securityHelper . getCurrentUserName ( arg ) ;
PermissionEntity permissionEntity = createNiceMock ( arg ) ;
securityHelper . setUser ( arg ) ;
securityHelper . setUser ( arg ) ;
dbAccessor . insertRow ( arg ) ;
dbAccessor . insertRow ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
throw new ServiceFormattedException ( arg ) ;
throw new NotFoundFormattedException ( arg ) ;
source = alertSource ;
mi . injector = injector ;
Root < HostRoleCommandEntity > hrc = createNiceMock ( arg ) ;
String zkPort = zkConfigs . get ( arg ) ;
return ( arg ) ||! configuration . getApiAuthentication ( arg ) || checkPermission ( arg ) ;
resourceTypeEntity = resourceType ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
final AlertDefinitionEntity entity = alertDefinitionDAO . findById ( arg ) ;
invalidatedHosts . addAll ( arg ) ;
invalidatedHosts . addAll ( arg ) ;
invalidatedHosts . addAll ( arg ) ;
clusterMapping . put ( arg ) ;
Set < AlertDefinitionEntity > definitions = getAlertDefinitionEntities ( arg ) ;
List < AlertDefinition > definitions = m_hash . getAlertDefinitions ( arg ) ;
Class < ? extends Source > clazz = null ;
return ! configuration . getApiAuthentication ( arg ) || ( resourceEntity == null && readOnly ) || checkAuthorization ( arg ) ;
ViewRegistry . initInstance ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
String cmd = ambari-python-wrap  + commandScriptAbsolute +  generate_configs  + jsonFileName . getAbsolutePath ( arg ) +   + packageFolderAbsolute +   + TMP_PATH + File . separator + structured-out.json +  INFO  + TMP_PATH ;
alertDefinitionHash . enqueueAgentCommands ( arg ) ;
alertDefinitionHash . enqueueAgentCommands ( arg ) ;
alertDefinitionHash . enqueueAgentCommands ( arg ) ;
return provisioningState ;
handlerList . addViewInstance ( arg ) ;
final int requestId = 2 ;
hostParamsStage = createDefaultHostParams ( arg ) ;
Map < String , String > hostParams = new TreeMap < String , String > ( arg ) ;
List < ConfigurationResponse > configurationResponses = new LinkedList < ConfigurationResponse > ( arg ) ;
configurationResponses . add ( arg ) ;
Set < StackConfigurationResponse > serviceConfigs = ambariManagementController . getStackConfigurations ( arg ) ;
return service_config_versions ;
return service_config_version ;
serviceConfigVersionResponse = cluster . setServiceConfigVersion ( arg ) ;
Map < String , Collection < ServiceConfigVersionResponse >> serviceConfigVersions = updateResults . getDesiredServiceConfigVersions ( arg ) ;
Map < String , Collection < ServiceConfigVersionResponse >> map = new HashMap < String , Collection < ServiceConfigVersionResponse >> ( arg ) ;
ServiceConfigVersionResponse serviceConfigVersionResponse = applyServiceConfigVersion ( arg ) ;
Map < String , Collection < ServiceConfigVersionResponse >> activeServiceConfigVersions = c1 . getActiveServiceConfigVersions ( arg ) ;
ServiceConfigVersionResponse mapredResponse = activeServiceConfigVersions . get ( arg ) . iterator ( arg ) . next ( arg ) ;
mapredResponse = activeServiceConfigVersions . get ( arg ) . iterator ( arg ) . next ( arg ) ;
mapredResponse = activeServiceConfigVersions . get ( arg ) . iterator ( arg ) . next ( arg ) ;
Map < String , Collection < ServiceConfigVersionResponse >> activeServiceConfigVersions = c1 . getActiveServiceConfigVersions ( arg ) ;
List < AlertDefinitionCommand > alertDefinitionCommands = getRegistrationAlertDefinitionCommands ( arg ) ;
Set < Listener > listeners = this . listeners . get ( arg ) ;
Set < Listener > listeners = this . listeners . get ( arg ) ;
listeners = Sets . newSetFromMap ( arg ) ;
group . addAlertDefinition ( arg ) ;
String maintenanceCluster = null ;
maintenanceCluster = sch . getClusterName ( arg ) ;
String maintenanceCluster = null ;
maintenanceCluster = c . getClusterName ( arg ) ;
String maintenanceCluster = null ;
maintenanceCluster = cluster . getClusterName ( arg ) ;
BigDecimal progress = client . getRequestProgress ( arg ) ;
return propertyTypes ;
return alerts ;
return alert ;
throw new StackAdvisorRequestException ( arg ) ;
throw new StackAdvisorRequestException ( arg ) ;
doThrow ( arg ) . when ( arg ) . runScript ( arg ) ;
doThrow ( arg ) . when ( arg ) . runScript ( arg ) ;
create ( arg ) ;
create ( arg ) ;
return hasMaster ? masterState == null ? State . STARTED : masterState : hasOther ? otherState == null ? State . STARTED : otherState : hasClient ? clientState == null ? State . INSTALLED : clientState : hasDisabled ? State . DISABLED : hasMM ? maxMMState : State . UNKNOWN ;
tmpDirectory . mkdirs ( arg ) ;
result = prime * result + ( ( m_uri == null ) ? 0 : m_uri . hashCode ( arg ) ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
return view . isDeployed ( arg ) ? Collections . singletonMap ( arg ) : Collections . < Long , ViewInstanceEntity > emptyMap ( arg ) ;
return view . isDeployed ( arg ) ? viewInstanceEntity . getResource ( arg ) . getId ( arg ) : null ;
final ApplicationId appId = getApplicationId ( arg ) ;
installArgs . packageURI = getAppsFolderPath ( arg ) +/+ configs . get ( arg ) . getAsString ( arg ) ;
m_eventBus . post ( arg ) ;
m_eventBus . register ( arg ) ;
return viewContext . getUsername ( arg ) ;
m_alertsDispatchDao . create ( arg ) ;
String type = ( String ) requestMap . get ( arg ) ;
return enabled == Integer . valueOf ( arg ) ? false : true ;
this . enabled = enabled ? Integer . valueOf ( arg ) : Integer . valueOf ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
Map < String , Object > normalizedMap = new HashMap < String , Object > ( arg ) ;
normalizedMap . put ( arg ) ;
current = m_alertsDao . merge ( arg ) ;
AlertDefinition def = m_aggregateMapping . getAggregateDefinition ( arg ) ;
m_aggregateMapping . registerAggregate ( arg ) ;
return Collections . unmodifiableSet ( arg ) ;
aggregateMapping . registerAggregate ( arg ) ;
String jsonString = new GsonBuilder ( arg ) . setPrettyPrinting ( arg ) . create ( arg ) . toJson ( arg ) ;
final String queueName = json . has ( arg ) ? json . get ( arg ) . getAsString ( arg ) : null ;
return Collections . emptySet ( arg ) ;
String user = getViewParameterValue ( arg ) ;
JMXPropertyProviderTest . TestJMXHostProvider hostProvider = new JMXPropertyProviderTest . TestJMXHostProvider ( arg ) ;
return m_history ;
m_definitionDao . create ( arg ) ;
List < AlertDefinitionEntity > definitions = m_definitionDao . findAll ( arg ) ;
m_dao . create ( arg ) ;
List < AlertHistoryEntity > alerts = m_dao . findAll ( arg ) ;
m_dao . create ( arg ) ;
m_definitionDao . create ( arg ) ;
m_dao . merge ( arg ) ;
AlertCurrentEntity c = m_dao . findCurrentByHostAndName ( arg ) ;
summary = m_dao . findAggregateCounts ( arg ) ;
List < AlertHistoryEntity > alerts = m_dao . findAll ( arg ) ;
List < AlertCurrentEntity > currentAlerts = m_dao . findCurrent ( arg ) ;
List < AlertHistoryEntity > history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
List < AlertHistoryEntity > history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
history = m_dao . findAll ( arg ) ;
m_definitionDao . create ( arg ) ;
currentAlerts = m_dao . findCurrentByHost ( arg ) ;
AlertCurrentEntity entity = m_dao . findCurrentByHostAndName ( arg ) ;
entity = m_dao . findCurrentByHostAndName ( arg ) ;
List < AlertCurrentEntity > currentAlerts = m_dao . findCurrent ( arg ) ;
currentAlerts = m_dao . findCurrentByService ( arg ) ;
currentAlerts = m_dao . findCurrentByService ( arg ) ;
AlertSummaryDTO summary = m_dao . findCurrentCounts ( arg ) ;
m_dao . merge ( arg ) ;
m_dao . merge ( arg ) ;
m_dao . merge ( arg ) ;
summary = m_dao . findCurrentCounts ( arg ) ;
summary = m_dao . findCurrentCounts ( arg ) ;
summary = m_dao . findCurrentCounts ( arg ) ;
summary = m_dao . findCurrentCounts ( arg ) ;
List < AlertCurrentEntity > currents = m_dao . findCurrent ( arg ) ;
m_dao . create ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
UserEntity userEntity = userDAO . findUserByName ( arg ) ;
setViewInstanceProperties ( arg ) ;
setViewInstanceProperties ( arg ) ;
setViewInstanceProperties ( arg ) ;
Map < String , String > instanceProperties = new HashMap < String , String > ( arg ) ;
Map < String , String > props = captureProperties . getValue ( arg ) ;
LOG . debug ( arg ) ;
String family = os_family . find ( arg ) ;
Set < String > possibleTypes = os_family . findTypes ( arg ) ;
String family = os_family . find ( arg ) ;
m_definitionDao . create ( arg ) ;
List < AlertDefinitionEntity > alertDefinitions = m_definitionDao . findAll ( arg ) ;
m_dao . create ( arg ) ;
m_dao . create ( arg ) ;
AlertTargetEntity target = m_helper . createAlertTarget ( arg ) ;
AlertTargetEntity target = m_helper . createAlertTarget ( arg ) ;
AlertGroupEntity group = m_helper . createAlertGroup ( arg ) ;
group = m_dao . findGroupById ( arg ) ;
target = m_dao . findTargetById ( arg ) ;
List < AlertGroupEntity > groups = m_dao . findAllGroups ( arg ) ;
List < AlertTargetEntity > targets = m_dao . findAllTargets ( arg ) ;
List < AlertGroupEntity > groups = m_dao . findAllGroups ( arg ) ;
AlertGroupEntity actual = m_dao . findGroupByName ( arg ) ;
List < AlertGroupEntity > groups = m_dao . findGroupsByDefinition ( arg ) ;
List < AlertTargetEntity > targets = m_dao . findAllTargets ( arg ) ;
AlertTargetEntity actual = m_dao . findTargetByName ( arg ) ;
List < AlertTargetEntity > targets = m_dao . findAllTargets ( arg ) ;
targets = m_dao . findTargetsById ( arg ) ;
group = m_dao . findGroupByName ( arg ) ;
AlertTargetEntity target = m_helper . createAlertTarget ( arg ) ;
List < AlertHistoryEntity > histories = m_dao . findAll ( arg ) ;
removePrivilegeEntity ( arg ) ;
throw createRuntimeException ( arg ) ;
throw createRuntimeException ( arg ) ;
throw createRuntimeException ( arg ) ;
return uri ;
result = prime * result + ( ( uri == null ) ? 0 : uri . hashCode ( arg ) ) ;
Map < String , Map < String , List < AlertDefinition >>> serviceDefinitionMap = null ;
Assert . assertEquals ( arg ) ;
connection = spec . startsWith ( arg ) ? getSSLConnection ( arg ) : getConnection ( arg ) ;
return getAlertDefinitions ( arg ) ;
final List < ActionInstallKeytabArgs > installKeytabActions = new ArrayList < ActionInstallKeytabArgs > ( arg ) ;
MetricSource actualSource = gson . fromJson ( arg ) ;
LOG . error ( arg ) ;
updateOozieConfigs ( arg ) ;
Map < File , JarInputStream > jarFiles = new HashMap < File , JarInputStream > ( arg ) ;
Map < File , JarInputStream > jarFiles = new HashMap < File , JarInputStream > ( arg ) ;
Map < File , JarInputStream > jarFiles = new HashMap < File , JarInputStream > ( arg ) ;
Map < File , JarInputStream > jarFiles = new HashMap < File , JarInputStream > ( arg ) ;
inputStream = new FileInputStream ( arg ) ;
bindByAnnotation ( arg ) ;
commandTimeout = String . valueOf ( arg ) ;
scriptCommandTimeout = String . valueOf ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStack ( arg ) ;
Collection < ServiceInfo > serviceInfos = getServices ( arg ) . values ( arg ) ;
Collection < ServiceInfo > services ;
stack = getStack ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStack ( arg ) ;
ComponentInfo compInfo = ambariMetaInfo . getService ( arg ) . getClientComponent ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStack ( arg ) ;
Collection < StackInfo > supportedStacks = ambariMetaInfo . getStacks ( arg ) ;
Collection < String > monitoringServices = ambariMetaInfo . getMonitoringServiceNames ( arg ) ;
packageFolder = managementController . getAmbariMetaInfo ( arg ) . getService ( arg ) . getServicePackageFolder ( arg ) ;
serviceInfo = managementController . getAmbariMetaInfo ( arg ) . getService ( arg ) ;
stale = serviceInfo . hasConfigDependency ( arg ) || componentInfo . hasConfigType ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
Set < PropertyInfo > stackProperties = ambariMetaInfo . getServiceProperties ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
StackInfo stack = ambariMetaInfo . getStack ( arg ) ;
TestAmbariMetaInfo ambariMetaInfo = setupTempAmbariMetaInfo ( arg ) ;
TestAmbariMetaInfo ambariMetaInfo = setupTempAmbariMetaInfo ( arg ) ;
StackInfo stackInfo = metaInfo . getStack ( arg ) ;
stackInfo = metaInfo . getStack ( arg ) ;
stackInfo = metaInfo . getStack ( arg ) ;
provider . addObserver ( arg ) ;
String fakeMonitoringService = FAKENAGIOS ;
String fakeServer = FAKE_MONITORING_SERVER ;
users . processLdapSync ( arg ) ;
Cluster cluster = s_clusters . get ( arg ) . getCluster ( arg ) ;
serviceComponents . put ( arg ) ;
Cluster cluster = m_clusters . get ( arg ) . getCluster ( arg ) ;
Cluster cluster = m_clusters . get ( arg ) . getClusterById ( arg ) ;
Cluster cluster = m_clusters . get ( arg ) . getCluster ( arg ) ;
hosts = m_clusters . get ( arg ) . getHostsForCluster ( arg ) ;
Set < Cluster > clusters = m_clusters . get ( arg ) . getClustersForHost ( arg ) ;
cluster = m_clusters . get ( arg ) . getClusterById ( arg ) ;
ServiceComponentHost monitoringServiceComponentHost = null ;
monitoringServiceComponentHost = sch ;
assertNotNull ( arg ) ;
Assert . assertNotNull ( arg ) ;
Assert . assertNotNull ( arg ) ;
Assert . assertNotNull ( arg ) ;
RepositoryVersionService repositoryVersionService ;
String cmd = pythonCmd +   + commandScriptAbsolute +  generate_configs  + jsonFileName . getAbsolutePath ( arg ) +   + packageFolderAbsolute +   + TMP_PATH + File . separator + structured-out.json +  INFO  + TMP_PATH ;
processAlerts ( arg ) ;
getDummyCluster ( arg ) ;
List < UpgradeEntity > upgrades = m_upgradeDAO . findUpgrades ( arg ) ;
return upgradeId ;
return upgradeItemEntities ;
upgradeId = id ;
return upgradeItemId ;
return state ;
upgradeItemId = id ;
this . state = state ;
return type ;
return type ;
return type ;
entity . setClusterId ( arg ) ;
String commands [ ] = new String [ 12 ] ;
throw new ObjectNotFoundException ( arg ) ;
return resourceProviderFactory . getRepositoryVersionResourceProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionResourceProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionResourceProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionResourceProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionResourceProvider ( arg ) ;
final RepositoryVersionResourceProvider provider = ( RepositoryVersionResourceProvider ) injector . getInstance ( arg ) . getRepositoryVersionResourceProvider ( arg ) ;
RepositoryVersionState desiredState = null ;
desiredState = RepositoryVersionState . INSTALLED ;
desiredState = RepositoryVersionState . UPGRADING ;
desiredState = RepositoryVersionState . UPGRADE_FAILED ;
List < Class < ? extends Annotation >> classes = Arrays . asList ( arg ) ;
MimeMessage message = new MimeMessage ( arg ) ;
QueryResponse queryResponse = doQuery ( arg ) ;
Set < Resource > queryResources = subResource . doQuery ( arg ) . getResources ( arg ) ;
item . setStageId ( arg ) ;
item . setStageId ( arg ) ;
storage = StorageUtil . getInstance ( arg ) . getStorage ( arg ) ;
HdfsApi api = HdfsApi . connectToHDFSApi ( arg ) ;
FSDataOutputStream stream = HdfsApi . getInstance ( arg ) . create ( arg ) ;
FSDataOutputStream stream = HdfsApi . getInstance ( arg ) . create ( arg ) ;
FSDataOutputStream stream = HdfsApi . getInstance ( arg ) . create ( arg ) ;
return status . equals ( arg ) || status . equals ( arg ) || status . equals ( arg ) ;
job = resourceManager . read ( arg ) ;
resourceManager . retrieveJobStatus ( arg ) ;
FSDataOutputStream stream = HdfsApi . getInstance ( arg ) . create ( arg ) ;
storage = StorageUtil . getInstance ( arg ) . getStorage ( arg ) ;
DataStoreStorage . storageSmokeTest ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . setInstance ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
HdfsApi . dropAllConnections ( arg ) ;
if ( nodeName != null ? ! nodeName . equalsIgnoreCase ( arg ) : that . nodeName != null ) return false ;
result = 31 * result + ( nodeName != null ? nodeName . toLowerCase ( arg ) . hashCode ( arg ) : 0 ) ;
String propertyValue = configHelper . getPropertyValueFromStackDefinitions ( arg ) ;
RequestStatusResponse rsr = updateHostComponents ( arg ) ;
Cluster cluster = m_helper . buildNewCluster ( arg ) ;
Cluster cluster = m_helper . buildNewCluster ( arg ) ;
Cluster cluster = m_helper . buildNewCluster ( arg ) ;
List < ServiceComponentHost > schs = m_cluster . getServiceComponentHosts ( arg ) ;
m_definitionDao . create ( arg ) ;
List < AlertCurrentEntity > allCurrent = m_dao . findCurrent ( arg ) ;
AlertDefinitionEntity definition = m_definitionDao . findByName ( arg ) ;
allCurrent = m_dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = m_dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = m_dao . findCurrent ( arg ) ;
allCurrent = m_dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = m_dao . findCurrent ( arg ) ;
allCurrent = m_dao . findCurrent ( arg ) ;
m_definitionDao . create ( arg ) ;
m_definitionDao . create ( arg ) ;
m_definitionDao . create ( arg ) ;
m_dao . create ( arg ) ;
m_dao . merge ( arg ) ;
AlertEventPublisher publisher = m_injector . getInstance ( arg ) ;
AlertAggregateListener listener = m_injector . getInstance ( arg ) ;
AggregateDefinitionMapping aggregateMapping = m_injector . getInstance ( arg ) ;
AlertCurrentEntity current = m_dao . findCurrentByHostAndName ( arg ) ;
m_dao . merge ( arg ) ;
current = m_dao . findCurrentByHostAndName ( arg ) ;
m_dao . merge ( arg ) ;
current = m_dao . findCurrentByHostAndName ( arg ) ;
m_dao . merge ( arg ) ;
List < AlertNoticeEntity > notices = m_dispatchDao . findAllNotices ( arg ) ;
List < AlertDefinitionEntity > definitions = m_definitionDao . findAll ( arg ) ;
AlertGroupEntity group = m_helper . createAlertGroup ( arg ) ;
m_dispatchDao . merge ( arg ) ;
notices = m_dispatchDao . findAllNotices ( arg ) ;
List < AlertCurrentEntity > allCurrent = m_dao . findCurrentByService ( arg ) ;
List < AlertHistoryEntity > allHistory = m_dao . findAll ( arg ) ;
AlertCurrentEntity current = m_dao . findCurrentByHostAndName ( arg ) ;
current = m_dao . findCurrentByHostAndName ( arg ) ;
allCurrent = m_dao . findCurrentByService ( arg ) ;
allHistory = m_dao . findAll ( arg ) ;
current = m_dao . findCurrentByHostAndName ( arg ) ;
allCurrent = m_dao . findCurrentByService ( arg ) ;
allHistory = m_dao . findAll ( arg ) ;
resourceDefinition = new SimpleResourceDefinition ( arg ) ;
UpgradeItemEntity upgradeItem = group . getItems ( arg ) . get ( arg ) ;
upgradeCatalogHelper . addComponent ( arg ) ;
ClusterEntity clusterEntity = upgradeCatalogHelper . createCluster ( arg ) ;
gpp = createMetricsComponentPropertyProvider ( arg ) ;
gpp = createMetricsHostComponentPropertyProvider ( arg ) ;
JMXPropertyProviderTest . TestMetricHostProvider metricsHostProvider = new JMXPropertyProviderTest . TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
TestMetricHostProvider metricsHostProvider = new TestMetricHostProvider ( arg ) ;
if ( operatingSystems != null ? ! operatingSystems . equals ( arg ) : that . operatingSystems != null ) return false ;
result = 31 * result + ( operatingSystems != null ? operatingSystems . hashCode ( arg ) : 0 ) ;
final RepositoryVersionResourceDefinition resourceDefinition = new RepositoryVersionResourceDefinition ( arg ) ;
repoVersionEntity . setOperatingSystems ( arg ) ;
entity . setOperatingSystems ( arg ) ;
entity . setOperatingSystems ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) . toString ( arg ) . replace ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) . toString ( arg ) . replace ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) . toString ( arg ) . replace ( arg ) ;
return ImmutableSet . copyOf ( arg ) ;
executeAlertDDLUpdates ( arg ) ;
PropertyProvider propertyProvider = MetricsPropertyProvider . createInstance ( arg ) ;
validateViewConfiguration ( arg ) ;
UpgradeEntity upgrade = m_upgradeDAO . findUpgradeByRequestId ( arg ) ;
return configTypes != null && configTypes . containsKey ( arg ) &&! excludedConfigTypes . contains ( arg ) ;
Set < RepositoryVersionState > allowedStates = new HashSet < RepositoryVersionState > ( arg ) ;
configs = configRequests ;
serviceName = getServiceName ( arg ) ;
LOG . error ( arg ) ;
parseOperatingSystems ( arg ) ;
return RepositoryVersionResourceProvider . parseOperatingSystems ( arg ) ;
final String desiredRepoVersion ;
final String desiredRepoVersion ;
return counters . get ( arg ) > 0 ? StageStatus . FAILED : counters . get ( arg ) > 0 ? StageStatus . ABORTED : counters . get ( arg ) > 0 ? StageStatus . TIMEDOUT : counters . get ( arg ) > 0 ? StageStatus . IN_PROGRESS : counters . get ( arg ) == totalTasks ? StageStatus . COMPLETED : StageStatus . PENDING ;
dropAllTables ( arg ) ;
Map < Long , Double > metricRecords = new TreeMap < Long , Double > ( arg ) ;
Condition condition = new LikeCondition ( arg ) ;
File file = folder . newFile ( arg ) ;
return injector . getInstance ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . translate ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . valueOf ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . translate ( arg ) ;
Reporting reporting = aggregateSource . getReporting ( arg ) ;
int denominator = totalCount ;
Set < String > hosts = m_cluster . getHosts ( arg ) ;
return counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . ABORTED : counters . get ( arg ) > 0 ? HostRoleStatus . TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . IN_PROGRESS : counters . get ( arg ) == totalTasks ? HostRoleStatus . COMPLETED : HostRoleStatus . PENDING ;
HostRoleStatus desiredStatus = HostRoleStatus . valueOf ( arg ) ;
HostRoleStatus desiredStatus = HostRoleStatus . valueOf ( arg ) ;
result = 31 * result + ( endTime != null ? endTime . hashCode ( arg ) : 0 ) ;
ServiceDirectory serviceDirectory = new CommonServiceDirectory ( arg ) ;
List < StageWrapper > execwrappers = new ArrayList < StageWrapper > ( arg ) ;
m_masterHostResolver = EasyMock . createMock ( arg ) ;
KerberosActionDataFileReader reader = null ;
throw new MetricsSystemInitializationException ( arg ) ;
throw new MetricsSystemInitializationException ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getAMSUriBuilder ( arg ) ;
URIBuilder uriBuilder2 = AMSPropertyProvider . getAMSUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getAMSUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getAMSUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getAMSUriBuilder ( arg ) ;
return checkpoint != null && ( ( clock . getTime ( arg ) - checkpoint - checkpointDelayMillis ) > getCheckpointCutOffIntervalMillis ( arg ) ) ;
Cluster cluster = setupClusterWithHosts ( arg ) ;
return new MultiHomedBuilder ( arg ) ;
return this == RESTART || this == SERVICE_CHECK ;
Map < String , HostVersionEntity > existingHostToHostVersionEntity = new HashMap < String , HostVersionEntity > ( arg ) ;
existingHostToHostVersionEntity . put ( arg ) ;
return this == MANUAL || this == CONFIGURE || this == SERVER_ACTION ;
Set < Map < String , Object >> resourceFilters ;
return counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . ABORTED : counters . get ( arg ) > 0 ? HostRoleStatus . TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . IN_PROGRESS : counters . get ( arg ) == total ? HostRoleStatus . COMPLETED : HostRoleStatus . PENDING ;
return new HBaseTimelineMetricStore ( arg ) ;
String bindAddress = metricConfiguration . getWebappAddress ( arg ) ;
collectorPort = getPortString ( arg ) ;
newConfigTypes = findConfigTypesByPropertyName ( arg ) ;
InetSocketAddress address = NetUtils . createSocketAddr ( arg ) ;
return defaultRpcAddress ;
Collection < HostGroup > resultGroups = new LinkedHashSet < HostGroup > ( arg ) ;
return isNameNodeHAEnabled ( arg ) ;
Map < String , HostGroup > mapOfHostGroups = new LinkedHashMap < String , HostGroup > ( arg ) ;
TypedQuery < Number > query = entityManagerProvider . get ( arg ) . createQuery ( arg ) ;
Map < String , String > configtypePropsVal = configurations . get ( arg ) ;
configurations . put ( arg ) ;
return ( arg ) mapper . readValue ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition queryCondition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
File file = folder . newFile ( arg ) ;
File file = folder . newFile ( arg ) ;
File file = folder . newFile ( arg ) ;
return mapper . readValue ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition queryCondition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
int okCount = summary . getOkCount ( arg ) + summary . getMaintenanceCount ( arg ) ;
worstState = getWorstState ( arg ) ;
return ( arg ) mapper . readValue ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition queryCondition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
