body = batchRequestEntity . getRequestBody ( arg ) ;
DateUtils . convertToDate ( arg ) ;
DateUtils . convertToDate ( arg ) ;
jobDetail = newJob ( arg ) . withIdentity ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . usingJobData ( arg ) . storeDurably ( arg ) . build ( arg ) ;
BatchRequestResponse batchRequestResponse = executionScheduleManager . getBatchRequestResponse ( arg ) ;
return percentageFailed > batchSettings . getTaskFailureToleranceLimit ( arg ) ;
InMemoryDefaultTestModule module = new InMemoryDefaultTestModule ( arg ) ;
return resourceConfigurations . keySet ( arg ) ;
BaseResourceDefinition resourceDefinition = new ViewSubResourceDefinition ( arg ) ;
BaseResourceDefinition definition = createNiceMock ( arg ) ;
return new ViewDefinition ( arg ) ;
PassiveState oldPassive = getEffectivePassiveState ( arg ) ;
module = new InMemoryDefaultTestModule ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
MultivaluedMap < String , String > queryParams = new MultivaluedMapImpl ( arg ) ;
Map < String , String > map = rpCapture . getValue ( arg ) ;
Map < String , String > map = rpCapture . getValue ( arg ) ;
Map < String , String > map = rpCapture . getValue ( arg ) ;
return instances ;
return parameters ;
PassiveStateHelper . createRequest ( arg ) ;
PassiveStateHelper . createRequest ( arg ) ;
PassiveStateHelper . createRequest ( arg ) ;
PassiveStateHelper psh = injector . getInstance ( arg ) ;
sch . setPassiveState ( arg ) ;
sch . setPassiveState ( arg ) ;
r . setPassiveState ( arg ) ;
r . setPassiveState ( arg ) ;
sch . setPassiveState ( arg ) ;
PassiveStateHelper . createRequests ( arg ) ;
serviceComponentHostRequest . setPassiveState ( arg ) ;
r . setPassiveState ( arg ) ;
h . setPassiveState ( arg ) ;
PassiveStateHelper . createRequests ( arg ) ;
s . setPassiveState ( arg ) ;
PassiveStateHelper . createRequests ( arg ) ;
r . setPassiveState ( arg ) ;
hdfs . getServiceComponent ( arg ) . getServiceComponentHost ( arg ) . setPassiveState ( arg ) ;
hdfs . getServiceComponent ( arg ) . getServiceComponentHost ( arg ) . setPassiveState ( arg ) ;
service2 . setPassiveState ( arg ) ;
service2 . setPassiveState ( arg ) ;
h1 . setPassiveState ( arg ) ;
h1 . setPassiveState ( arg ) ;
service2 . setPassiveState ( arg ) ;
customCommandExecutionHelper . addAction ( arg ) ;
AmbariMetaInfo ambariMetaInfo = managementController . getAmbariMetaInfo ( arg ) ;
Map < String , Map < String , String >> configTags = managementController . findConfigurationTagsWithOverrides ( arg ) ;
customCommandExecutionHelper . validateAction ( arg ) ;
actionExecutionHelper . validateAction ( arg ) ;
customCommandExecutionHelper . addExecutionCommandsToStage ( arg ) ;
actionExecutionHelper . addExecutionCommandsToStage ( arg ) ;
Login login = new DatabaseLogin ( arg ) ;
AmbariMetaInfo ambariMetaInfo = amc . getAmbariMetaInfo ( arg ) ;
Map < String , Map < String , String >> configTags = amc . findConfigurationTagsWithOverrides ( arg ) ;
customCommandExecutionHelper . validateCustomCommand ( arg ) ;
actionExecContext = actionExecutionHelper . validateCustomAction ( arg ) ;
customCommandExecutionHelper . addAction ( arg ) ;
actionExecutionHelper . addAction ( arg ) ;
customCommandExecutionHelper . createHostAction ( arg ) ;
ResultSet resultSet = dbAccessor . executeSelect ( arg ) ;
return hasMaster ? serviceState == null ? State . STARTED : serviceState : hasOther ? serviceState : hasClient ? serviceState == null ? State . INSTALLED : serviceState : hasDisabled ? State . DISABLED : State . UNKNOWN ;
String clusterName = clusterPropertyValue . toString ( arg ) ;
return inputs ;
this . inputs = inputs ;
Set < Map < String , String >> maintenanceSCHs = MaintenanceStateHelper . getMaintenanceHostComponents ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
Map < Long , ConfigGroup > configGroupMap = null ;
MaintenanceStateHelper . createRequests ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
MaintenanceStateHelper . createRequests ( arg ) ;
ViewInstanceDefinition instanceDefinition = ViewRegistry . getInstance ( arg ) . getInstanceDefinition ( arg ) ;
return viewInstanceDefinition . getViewDefinition ( arg ) . getAmbariProperty ( arg ) ;
return viewInstanceDefinition . getName ( arg ) ;
return viewInstanceDefinition . getProperties ( arg ) ;
return viewInstanceDefinition . getResourceProvider ( arg ) ;
return viewInstanceDefinition . getViewDefinition ( arg ) . getName ( arg ) ;
Set < ViewInstanceDefinition > instanceDefinitions = new HashSet < ViewInstanceDefinition > ( arg ) ;
Collection < ViewInstanceDefinition > viewInstanceDefinitions = viewDefinition . getInstanceDefinitions ( arg ) ;
Map < String , ViewInstanceDefinition > viewInstanceDefinitionMap = viewInstanceDefinitions . get ( arg ) ;
ViewDefinition definition = getDefinition ( arg ) ;
ViewRegistry . getInstance ( arg ) . addDefinition ( arg ) ;
Set < ViewInstanceDefinition > instanceDefinitions = new HashSet < ViewInstanceDefinition > ( arg ) ;
Set < ViewInstanceDefinition > instanceDefinitions = new HashSet < ViewInstanceDefinition > ( arg ) ;
Collection < ViewInstanceDefinition > viewInstanceDefinitions = viewDefinition . getInstanceDefinitions ( arg ) ;
ViewInstanceDefinition definition = ViewInstanceDefinitionTest . getViewInstanceDefinition ( arg ) ;
ViewDefinition viewDefinition = ViewDefinitionTest . getViewDefinition ( arg ) ;
Collection < ViewDefinition > viewDefinitions = registry . getDefinitions ( arg ) ;
Collection < ViewInstanceDefinition > viewInstanceDefinitions = registry . getInstanceDefinitions ( arg ) ;
ViewDefinition viewDefinition = ViewDefinitionTest . getViewDefinition ( arg ) ;
ViewDefinition viewDefinition = ViewDefinitionTest . getViewDefinition ( arg ) ;
upgradeCatalog . executeDMLUpdates ( arg ) ;
clusters . getHost ( arg ) . setOsType ( arg ) ;
blueprint . setConfigurations ( arg ) ;
entity . setConfigurations ( arg ) ;
ResourceProvider componentProvider = getResourceProviderByType ( arg ) ;
getResourceProviderByType ( arg ) . createResources ( arg ) ;
( ( ConfigGroupResourceProvider ) getResourceProviderByType ( arg ) ) . createResources ( arg ) ;
return m_autoDeploy ;
return m_name ;
return m_scope ;
m_scope = scope ;
return FileUtils . readFileToString ( arg ) ;
properties . setProperty ( arg ) ;
properties . setProperty ( arg ) ;
properties . setProperty ( arg ) ;
_installViewInstance ( arg ) ;
_installViewInstance ( arg ) ;
_installViewInstance ( arg ) ;
BlueprintEntity blueprint = toEntity ( arg ) ;
BlueprintEntity blueprintEntity = ( ( BlueprintResourceProvider ) provider ) . toEntity ( arg ) ;
BlueprintEntity entity = ( ( BlueprintResourceProvider ) provider ) . toEntity ( arg ) ;
BlueprintEntity entity = ( ( BlueprintResourceProvider ) provider ) . toEntity ( arg ) ;
return new ViewInstanceService ( arg ) ;
return viewInstanceEntity . getViewName ( arg ) ;
ClusterResourceProvider . injectBlueprintDAO ( arg ) ;
ClusterResourceProvider . injectBlueprintDAO ( arg ) ;
return hdfsApi = api ;
int hostIndex = hostsList . indexOf ( arg ) ;
repoInfo = gson . toJson ( arg ) ;
String [ ] possibleTypes = OsFamily . findTypes ( arg ) ;
OsFamily family = OsFamily . find ( arg ) ;
@ SuppressWarnings ( arg ) Map < String , String > mapHostProperties = ( Map < String , String > ) oHost ;
UpgradeCatalog161upgradeCatalog = createMockBuilder ( arg ) . addMockedMethod ( arg ) . createMock ( arg ) ;
provisioningState = State . valueOf ( arg ) ;
dao . remove ( arg ) ;
Map < String , String > globalConfig = client . getConfiguration ( arg ) ;
requestEntity . setCluster ( arg ) ;
return populateSliderApp ( arg ) ;
List < ApplicationReport > yarnApps = sliderClient . getApplications ( arg ) ;
Set < ViewInstanceEntity > instanceDefinitions = new HashSet < ViewInstanceEntity > ( arg ) ;
instanceDefinitions . addAll ( arg ) ;
return instanceDefinitions ;
execCmd . setClusterHostInfo ( arg ) ;
resourceMap . put ( arg ) ;
return viewInstanceEntity . getViewEntity ( arg ) . getAmbariProperty ( arg ) ;
return viewInstanceEntity . getInstanceDataMap ( arg ) . get ( arg ) ;
return viewInstanceEntity . getName ( arg ) ;
return viewInstanceEntity . getResourceProvider ( arg ) ;
return viewInstanceEntity . getViewEntity ( arg ) . getCommonName ( arg ) ;
Map < String , Metric > relevantMetric = new HashMap < String , Metric > ( arg ) ;
client . addJmxProperties ( arg ) ;
return this . viewName . equals ( arg ) && this . viewInstanceName . equals ( arg ) && this . name . equals ( arg ) ;
return 31 * viewName . hashCode ( arg ) + viewInstanceName . hashCode ( arg ) + name . hashCode ( arg ) ;
removeInstanceData ( arg ) ;
for ( String str : ignores . split ( arg ) ) IGNORABLE_FOR_SERVICES . add ( arg ) ;
for ( String str : ignores . split ( arg ) ) IGNORABLE_FOR_HOSTS . add ( arg ) ;
dao . removeByName ( arg ) ;
BlueprintEntity entity = dao . findByName ( arg ) ;
results = dao . findAll ( arg ) ;
dao = blueprintDAO ;
BlueprintEntity blueprint = getBlueprint ( arg ) ;
instanceDAO . create ( arg ) ;
instanceDefinitions . addAll ( arg ) ;
viewInstanceDAO . create ( arg ) ;
vDAO . create ( arg ) ;
viewInstanceDAO . create ( arg ) ;
viewInstanceDAO . create ( arg ) ;
return new ArrayList < NagiosAlert > ( arg ) ;
return alerts . alerts ;
throw new WebServiceException ( arg ) ;
api = new TempletonApi ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
return Response . status ( arg ) . build ( arg ) ;
return Response . ok ( arg ) . status ( arg ) . build ( arg ) ;
return Response . status ( arg ) . build ( arg ) ;
return Response . status ( arg ) . build ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
throw new WebServiceException ( arg ) ;
return this . viewName . equals ( arg ) && this . viewInstanceName . equals ( arg ) && this . name . equals ( arg ) && this . user . equals ( arg ) ;
return restartRequired ;
this . restartRequired = restartRequired ;
return viewInstanceEntity . getUsername ( arg ) ;
Map < String , String > evalutedProperties = null ;
return getResources ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
Iterable < Resource > iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
Iterable < Resource > iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
iterable = controller . getResources ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getResources ( arg ) ;
pageResponse = controller . getResources ( arg ) ;
offset = Integer . parseInt ( arg ) ;
offset = Integer . parseInt ( arg ) ;
int repeat = Integer . parseInt ( arg ) - 1 ;
Map < String , String > evaluatedProperties = null ;
return getPageResponse ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
Iterable < Resource > iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
Iterable < Resource > iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
iterable = controller . getPageResponse ( arg ) . getIterable ( arg ) ;
PageResponse pageResponse = controller . getPageResponse ( arg ) ;
pageResponse = controller . getPageResponse ( arg ) ;
offset = Integer . valueOf ( arg ) ;
offset = Integer . valueOf ( arg ) ;
Map < String , String > evalutedProperties = null ;
String trueValue = ( String ) postProcessPropertyValue ( arg ) ;
ViewInstanceEntity viewInstanceDefinition = createMockBuilder ( arg ) . addMockedMethod ( arg ) . addMockedMethod ( arg ) . withConstructor ( arg ) . createMock ( arg ) ;
RequestResourceFilter resourceFilter = new RequestResourceFilter ( arg ) ;
Map < String , ServiceComponentHost > components = clusters . getCluster ( arg ) . getService ( arg ) . getServiceComponent ( arg ) . getServiceComponentHosts ( arg ) ;
RoleGraph rg = null ;
MaintenanceState maintenanceState = sch . getMaintenanceState ( arg ) ;
return enabled ;
AlertDefinitionEntity result = dao . findById ( arg ) ;
List < AlertDefinitionEntity > entities = dao . findAll ( arg ) ;
AlertDefinitionEntity result = dao . findByName ( arg ) ;
dao = EasyMock . createStrictMock ( arg ) ;
HandlerList handlerList = new HandlerList ( arg ) ;
handlerList . addHandler ( arg ) ;
List < Map < String , Object >> listConfigurations = new ArrayList < Map < String , Object >> ( arg ) ;
Long interval = Long . valueOf ( arg ) ;
alertDefinitionDAO . create ( arg ) ;
List < AlertDefinitionEntity > definitions = realDAO . findAll ( arg ) ;
AlertDefinitionEntity retrieved = realDAO . findById ( arg ) ;
List < AlertDefinitionEntity > definitions = realDAO . findAll ( arg ) ;
List < AlertDefinitionEntity > definitions = realDAO . findAll ( arg ) ;
AlertDefinitionEntity retrieved = realDAO . findByName ( arg ) ;
alertDispatchDAO . create ( arg ) ;
alertDispatchDAO . create ( arg ) ;
alertDefinitionDAO . create ( arg ) ;
List < AlertDefinitionEntity > definitions = alertDefinitionDAO . findAll ( arg ) ;
List < AlertHistoryEntity > alerts = alertDAO . findAll ( arg ) ;
alertDAO . create ( arg ) ;
List < String > configDependencies = serviceInfo . getConfigDependencies ( arg ) ;
stale = false ;
stale = serviceInfo . hasConfigType ( arg ) ;
group . setAlertTargets ( arg ) ;
group . getAlertTargets ( arg ) . add ( arg ) ;
Process process = Runtime . getRuntime ( arg ) . exec ( arg ) ;
Map < String , Map < String , String >> mapServiceConfig = new HashMap < String , Map < String , String >> ( arg ) ;
Map < String , String > mapTypeConfig = mapServiceConfig . get ( arg ) ;
mapTypeConfig = new HashMap < String , String > ( arg ) ;
Boolean propertyIsFinal = ( Boolean ) resource . getPropertyValue ( arg ) ;
config . setVersionTag ( arg ) ;
clusterConfigMappingEntity . setVersion ( arg ) ;
config1 . setVersionTag ( arg ) ;
config2 . setVersionTag ( arg ) ;
c1 . setVersionTag ( arg ) ;
config1 . setVersionTag ( arg ) ;
config2 . setVersionTag ( arg ) ;
config1 . setVersionTag ( arg ) ;
config2 . setVersionTag ( arg ) ;
config1 . setVersionTag ( arg ) ;
config2 . setVersionTag ( arg ) ;
config . setVersionTag ( arg ) ;
String version = config . getVersionTag ( arg ) ;
version = config . getVersionTag ( arg ) ;
RecommendationResourceProvider . init ( arg ) ;
RecommendationRequest recommendationRequest = prepareRecommendationRequest ( arg ) ;
Map < Long , PrivilegeEntity > entityMap = new HashMap < Long , PrivilegeEntity > ( arg ) ;
entityMap . put ( arg ) ;
return id . equals ( arg ) &&! ( resourceType != null ? ! resourceType . equals ( arg ) : that . resourceType != null ) ;
AmbariPrivilegeResourceProvider . init ( arg ) ;
String userSearchBase = ldapServerProperties . get ( arg ) . getUserBase ( arg ) ;
String dbName = configuration . getServerJDBCSchemaName ( arg ) ;
return this . cardinality ;
this . injector . getInstance ( arg ) . addServiceCheckAction ( arg ) ;
this . injector . getInstance ( arg ) . addServiceCheckAction ( arg ) ;
List < DBAccessor . DBColumnInfo > columns ;
DBAccessor . DBColumnInfo clusterConfigAttributesColumn = new DBAccessor . DBColumnInfo ( arg ) ;
clusterGlobalLock . readLock ( arg ) . unlock ( arg ) ;
LOG . warn ( arg ) ;
Map < String , HostGroup > mapHostGroups = new HashMap < String , HostGroup > ( arg ) ;
Map < String , HostGroup > blueprintHostGroups = parseBlueprintHostGroups ( arg ) ;
ClusterBlueprintRenderer renderer = new ClusterBlueprintRenderer ( arg ) ;
ServiceComponentHostOpFailedEvent timeoutEvent = new ServiceComponentHostOpFailedEvent ( arg ) ;
final Map < String , List < String >> membersPerGroup = new HashMap < String , List < String >> ( arg ) ;
response = saHelper . getComponentLayoutRecommnedation ( arg ) ;
StackAdvisorRequest saRequest = StackAdvisorRequestBuilder . forStack ( arg ) . forHosts ( arg ) . forServices ( arg ) . withComponentHostsMap ( arg ) . build ( arg ) ;
response = saHelper . getComponentLayoutValidation ( arg ) ;
String serviceId = serviceId ;
ComponentInfo parentComponent = getComponent ( arg ) ;
ComponentInfo componentInfo = getComponentInfo ( arg ) ;
return userNameProvider . getUsername ( arg ) ;
PrivilegeResourceProvider provider = new ClusterPrivilegeResourceProvider ( arg ) ;
userNameProvider . setUser ( arg ) ;
userNameProvider . setUser ( arg ) ;
dbAccessor . executeQuery ( arg ) ;
dbAccessor . executeQuery ( arg ) ;
return Response . ok ( arg ) . entity ( arg ) . build ( arg ) ;
return Response . ok ( arg ) . entity ( arg ) . build ( arg ) ;
return Response . ok ( arg ) . entity ( arg ) . build ( arg ) ;
this . source = alertSource ;
mi . injector = this . injector ;
Root < HostRoleCommandEntity > hrc = ( Root < HostRoleCommandEntity > ) createNiceMock ( arg ) ;
String zkPort = globalConfigs . get ( arg ) ;
return ( arg ) || checkPermission ( arg ) ;
resourceTypeEntity = view . getResourceType ( arg ) ;
StackInfo stack = this . ambariMetaInfo . getStackInfo ( arg ) ;
final AlertDefinitionEntity ad = alertDefinitionDAO . findById ( arg ) ;
alertDefinitionHash . invalidateHosts ( arg ) ;
alertDefinitionHash . invalidateHosts ( arg ) ;
alertDefinitionHash . invalidateHosts ( arg ) ;
m_hashes . put ( arg ) ;
Set < AlertDefinitionEntity > definitions = getAlertDefinitions ( arg ) ;
Set < AlertDefinitionEntity > definitions = m_hash . getAlertDefinitions ( arg ) ;
Class < ? extends Source > cls = null ;
return ( arg ) || checkAuthorization ( arg ) ;
ViewRegistryTest . clear ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry viewRegistry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry viewRegistry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry viewRegistry = ViewRegistry . getInstance ( arg ) ;
ViewRegistry registry = ViewRegistry . getInstance ( arg ) ;
String cmd = python  + commandScriptAbsolute +  generate_configs  + jsonFileName . getAbsolutePath ( arg ) +   + packageFolderAbsolute +   + TMP_PATH + File . separator + structured-out.json +  INFO  + TMP_PATH ;
enqueueAgentCommands ( arg ) ;
enqueueAgentCommands ( arg ) ;
enqueueAgentCommands ( arg ) ;
return this . provisioningState ;
handlerList . addFailsafeHandler ( arg ) ;
final int requestId = 0 ;
params = createDefaultHostParams ( arg ) ;
Map < String , String > hostParams = createDefaultHostParams ( arg ) ;
ConfigurationResponse configurationResponse = null ;
configurationResponse = createConfiguration ( arg ) ;
Set < StackConfigurationResponse > serviceConfigs = getManagementController ( arg ) . getStackConfigurations ( arg ) ;
return serviceconfigversions ;
return serviceconfigversion ;
cluster . setServiceConfigVersion ( arg ) ;
Map < String , ServiceConfigVersionResponse > serviceConfigVersions = updateResults . getDesiredServiceConfigVersions ( arg ) ;
Map < String , ServiceConfigVersionResponse > result = new HashMap < String , ServiceConfigVersionResponse > ( arg ) ;
applyServiceConfigVersion ( arg ) ;
Map < String , ServiceConfigVersionResponse > activeServiceConfigVersions = c1 . getActiveServiceConfigVersions ( arg ) ;
ServiceConfigVersionResponse mapredResponse = activeServiceConfigVersions . get ( arg ) ;
mapredResponse = activeServiceConfigVersions . get ( arg ) ;
mapredResponse = activeServiceConfigVersions . get ( arg ) ;
Map < String , ServiceConfigVersionResponse > activeServiceConfigVersions = c1 . getActiveServiceConfigVersions ( arg ) ;
List < AlertDefinitionCommand > alertDefinitionCommands = getAlertDefinitionCommands ( arg ) ;
List < Listener > listeners = this . listeners . get ( arg ) ;
List < Listener > listeners = this . listeners . get ( arg ) ;
listeners = new LinkedList < Listener > ( arg ) ;
group . getAlertDefinitions ( arg ) . add ( arg ) ;
Set < String > maintenanceClusters = new HashSet < String > ( arg ) ;
maintenanceClusters . add ( arg ) ;
Set < String > maintenanceClusters = new HashSet < String > ( arg ) ;
maintenanceClusters . add ( arg ) ;
Set < String > maintenanceClusters = new HashSet < String > ( arg ) ;
maintenanceClusters . add ( arg ) ;
BigDecimal progress = client . getInstallProgress ( arg ) ;
return propertyType ;
return alerts_data ;
return alert_data ;
throw new StackAdvisorException ( arg ) ;
throw new StackAdvisorException ( arg ) ;
when ( arg ) . thenReturn ( arg ) ;
when ( arg ) . thenReturn ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
return hasMaster ? masterState == null ? State . STARTED : masterState : hasOther ? otherState == null ? State . STARTED : otherState : hasClient ? clientState == null ? State . INSTALLED : clientState : hasDisabled ? State . DISABLED : State . UNKNOWN ;
tmpDirectory . mkdir ( arg ) ;
result = prime * result + ( ( host == null ) ? 0 : host . hashCode ( arg ) ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry viewRegistry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
ViewRegistry registry = getRegistry ( arg ) ;
return view . isLoaded ( arg ) ? Collections . singletonMap ( arg ) : Collections . < Long , ViewInstanceEntity > emptyMap ( arg ) ;
return view . isLoaded ( arg ) ? viewInstanceEntity . getResource ( arg ) . getId ( arg ) : null ;
ApplicationId appId = getApplicationId ( arg ) ;
installArgs . packageURI = getAppsFolderPath ( arg ) + configs . get ( arg ) . getAsString ( arg ) ;
s_eventBus . post ( arg ) ;
s_eventBus . register ( arg ) ;
return yarn ;
m_alertsDispatchDao . merge ( arg ) ;
String sourceType = ( String ) requestMap . get ( arg ) ;
return enabled == 0 ? false : true ;
this . enabled = enabled ? 1 : 0 ;
EasyMock . expect ( arg ) . andReturn ( arg ) ;
JsonObject jsonObject = new JsonObject ( arg ) ;
jsonObject . addProperty ( arg ) ;
m_alertsDao . merge ( arg ) ;
AlertDefinition def = getAggregateDefinition ( arg ) ;
m_aggregateMapping . addAggregateType ( arg ) ;
return alertGroups ;
aggregateMapping . addAggregateType ( arg ) ;
String jsonString = new Gson ( arg ) . toJson ( arg ) ;
final String queueName = json . get ( arg ) . getAsString ( arg ) ;
return invalidatedHosts ;
String user = viewContext . getProperties ( arg ) . get ( arg ) ;
TestJMXHostProvider hostProvider = new TestJMXHostProvider ( arg ) ;
return m_newEntity ;
definitionDao . create ( arg ) ;
List < AlertDefinitionEntity > definitions = definitionDao . findAll ( arg ) ;
dao . create ( arg ) ;
List < AlertHistoryEntity > alerts = dao . findAll ( arg ) ;
dao . create ( arg ) ;
definitionDao . create ( arg ) ;
dao . merge ( arg ) ;
AlertCurrentEntity c = dao . findCurrentByHostAndName ( arg ) ;
summary = dao . findAggregateCounts ( arg ) ;
List < AlertHistoryEntity > alerts = dao . findAll ( arg ) ;
List < AlertCurrentEntity > currentAlerts = dao . findCurrent ( arg ) ;
List < AlertHistoryEntity > history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
List < AlertHistoryEntity > history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
history = dao . findAll ( arg ) ;
definitionDao . create ( arg ) ;
currentAlerts = dao . findCurrentByHost ( arg ) ;
AlertCurrentEntity entity = dao . findCurrentByHostAndName ( arg ) ;
entity = dao . findCurrentByHostAndName ( arg ) ;
List < AlertCurrentEntity > currentAlerts = dao . findCurrent ( arg ) ;
currentAlerts = dao . findCurrentByService ( arg ) ;
currentAlerts = dao . findCurrentByService ( arg ) ;
AlertSummaryDTO summary = dao . findCurrentCounts ( arg ) ;
dao . merge ( arg ) ;
dao . merge ( arg ) ;
dao . merge ( arg ) ;
summary = dao . findCurrentCounts ( arg ) ;
summary = dao . findCurrentCounts ( arg ) ;
summary = dao . findCurrentCounts ( arg ) ;
summary = dao . findCurrentCounts ( arg ) ;
List < AlertCurrentEntity > currents = dao . findCurrent ( arg ) ;
dao . create ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
UserEntity userEntity = userDAO . findLocalUserByName ( arg ) ;
SetViewInstanceProperties ( arg ) ;
SetViewInstanceProperties ( arg ) ;
SetViewInstanceProperties ( arg ) ;
Collection < ViewInstancePropertyEntity > instanceProperties = new HashSet < ViewInstancePropertyEntity > ( arg ) ;
Map < String , String > props = viewInstanceEntity . getPropertyMap ( arg ) ;
LOG . warn ( arg ) ;
String family = OsFamily . find ( arg ) ;
Set < String > possibleTypes = OsFamily . findTypes ( arg ) ;
String family = OsFamily . find ( arg ) ;
definitionDao . create ( arg ) ;
List < AlertDefinitionEntity > alertDefinitions = definitionDao . findAll ( arg ) ;
dao . create ( arg ) ;
dao . create ( arg ) ;
AlertTargetEntity target = helper . createAlertTarget ( arg ) ;
AlertTargetEntity target = helper . createAlertTarget ( arg ) ;
AlertGroupEntity group = helper . createAlertGroup ( arg ) ;
group = dao . findGroupById ( arg ) ;
target = dao . findTargetById ( arg ) ;
List < AlertGroupEntity > groups = dao . findAllGroups ( arg ) ;
List < AlertTargetEntity > targets = dao . findAllTargets ( arg ) ;
List < AlertGroupEntity > groups = dao . findAllGroups ( arg ) ;
AlertGroupEntity actual = dao . findGroupByName ( arg ) ;
List < AlertGroupEntity > groups = dao . findGroupsByDefinition ( arg ) ;
List < AlertTargetEntity > targets = dao . findAllTargets ( arg ) ;
AlertTargetEntity actual = dao . findTargetByName ( arg ) ;
List < AlertTargetEntity > targets = dao . findAllTargets ( arg ) ;
targets = dao . findTargetsById ( arg ) ;
group = dao . findGroupByName ( arg ) ;
AlertTargetEntity target = helper . createAlertTarget ( arg ) ;
histories = m_dao . findAll ( arg ) ;
privilegeDAO . remove ( arg ) ;
throw new RuntimeException ( arg ) ;
throw new RuntimeException ( arg ) ;
throw new RuntimeException ( arg ) ;
return m_uri ;
result = prime * result + ( ( m_uri == null ) ? 0 : m_uri . hashCode ( arg ) ) ;
Map < String , List < AlertDefinition >> definitionMap = null ;
scheduler . stop ( arg ) ;
connection = spec . startsWith ( arg ) ? ( HttpURLConnection ) getSSLConnection ( arg ) : ( HttpURLConnection ) getConnection ( arg ) ;
serviceDefinitionMap = m_gson . fromJson ( arg ) ;
final ActionInstallKeytabArgs keytabArgs = new ActionInstallKeytabArgs ( arg ) ;
Source actualSource = gson . fromJson ( arg ) ;
LOG . warn ( arg ) ;
updateOozieConfigLog4j ( arg ) ;
Map < File , JarFile > jarFiles = new HashMap < File , JarFile > ( arg ) ;
Map < File , JarFile > jarFiles = new HashMap < File , JarFile > ( arg ) ;
Map < File , JarFile > jarFiles = new HashMap < File , JarFile > ( arg ) ;
Map < File , JarFile > jarFiles = new HashMap < File , JarFile > ( arg ) ;
FileInputStream inputStream = new FileInputStream ( arg ) ;
bindEagerSingletons ( arg ) ;
scriptCommandTimeout = String . valueOf ( arg ) ;
commandTimeout = String . valueOf ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStackInfo ( arg ) ;
List < ServiceInfo > serviceInfos = getSupportedServices ( arg ) ;
List < ServiceInfo > services ;
stack = getStackInfo ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStackInfo ( arg ) ;
ComponentInfo compInfo = ambariMetaInfo . getServiceInfo ( arg ) . getClientComponent ( arg ) ;
StackInfo stackInfo = ambariMetaInfo . getStackInfo ( arg ) ;
Set < org . apache . ambari . server . state . Stack > supportedStackNames = ambariMetaInfo . getStackNames ( arg ) ;
List < String > monitoringServices = ambariMetaInfo . getMonitoringServiceNames ( arg ) ;
packageFolder = managementController . getAmbariMetaInfo ( arg ) . getServiceInfo ( arg ) . getServicePackageFolder ( arg ) ;
serviceInfo = managementController . getAmbariMetaInfo ( arg ) . getServiceInfo ( arg ) ;
stale = serviceInfo . hasConfigType ( arg ) || componentInfo . hasConfigType ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
Set < PropertyInfo > stackProperties = ambariMetaInfo . getProperties ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
StackInfo stack = ambariMetaInfo . getStackInfo ( arg ) ;
AmbariMetaInfo ambariMetaInfo = setupTempAmbariMetaInfo ( arg ) ;
AmbariMetaInfo ambariMetaInfo = setupTempAmbariMetaInfo ( arg ) ;
StackInfo stackInfo = metaInfo . getStackInfo ( arg ) ;
stackInfo = metaInfo . getStackInfo ( arg ) ;
stackInfo = metaInfo . getStackInfo ( arg ) ;
( ( ObservableResourceProvider ) provider ) . addObserver ( arg ) ;
String nagiosService = NAGIOS ;
String nagiosServer = NAGIOS_SERVER ;
this . users . processLdapSync ( arg ) ;
Cluster cluster = s_clusters . getCluster ( arg ) ;
this . serviceComponents . put ( arg ) ;
Cluster cluster = m_clusters . getCluster ( arg ) ;
Cluster cluster = m_clusters . getClusterById ( arg ) ;
Cluster cluster = m_clusters . getCluster ( arg ) ;
hosts = m_clusters . getHostsForCluster ( arg ) ;
Set < Cluster > clusters = m_clusters . getClustersForHost ( arg ) ;
cluster = m_clusters . getClusterById ( arg ) ;
ServiceComponentHost nagiosSch = null ;
nagiosSch = sch ;
AlertGroupResourceProvider . init ( arg ) ;
AlertHistoryResourceProvider . init ( arg ) ;
AlertNoticeResourceProvider . init ( arg ) ;
AlertTargetResourceProvider . init ( arg ) ;
RepositoryVersionService RepositoryVersionService ;
String cmd = ambari-python-wrap  + commandScriptAbsolute +  generate_configs  + jsonFileName . getAbsolutePath ( arg ) +   + packageFolderAbsolute +   + TMP_PATH + File . separator + structured-out.json +  INFO  + TMP_PATH ;
calculateHostAlerts ( arg ) ;
this . getDummyCluster ( arg ) ;
List < UpgradeEntity > upgrades = m_dao . findUpgrades ( arg ) ;
return m_id ;
return m_items ;
m_id = id ;
return m_id ;
return m_state ;
m_id = id ;
m_state = state ;
return Task . Type . CONFIGURE ;
return Task . Type . EXECUTE ;
return Task . Type . MANUAL ;
dao . create ( arg ) ;
String commands [ ] = new String [ 11 ] ;
throw new NoSuchResourceException ( arg ) ;
return resourceProviderFactory . getRepositoryVersionProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionProvider ( arg ) ;
final ResourceProvider provider = injector . getInstance ( arg ) . getRepositoryVersionProvider ( arg ) ;
final RepositoryVersionResourceProvider provider = ( RepositoryVersionResourceProvider ) injector . getInstance ( arg ) . getRepositoryVersionProvider ( arg ) ;
UpgradeState desiredState = UpgradeState . NONE ;
desiredState = UpgradeState . PENDING ;
desiredState = UpgradeState . IN_PROGRESS ;
desiredState = UpgradeState . FAILED ;
@ SuppressWarnings ( arg ) List < Class < ? extends Annotation >> classes = Arrays . asList ( arg ) ;
Message message = new MimeMessage ( arg ) ;
Set < Resource > queryResources = doQuery ( arg ) ;
Set < Resource > queryResources = subResource . doQuery ( arg ) ;
item . setUpgradeEntity ( arg ) ;
item . setUpgradeEntity ( arg ) ;
storage = StorageUtil . getStorage ( arg ) ;
HdfsApi api = connectToHDFSApi ( arg ) ;
FSDataOutputStream stream = BaseService . getHdfsApi ( arg ) . create ( arg ) ;
FSDataOutputStream stream = BaseService . getHdfsApi ( arg ) . create ( arg ) ;
FSDataOutputStream stream = BaseService . getHdfsApi ( arg ) . create ( arg ) ;
return status == Status . SUBMITTED || status == Status . SUBMITTING || status == Status . RUNNING ;
job = getResourceManager ( arg ) . read ( arg ) ;
getResourceManager ( arg ) . retrieveJobStatus ( arg ) ;
FSDataOutputStream stream = BaseService . getHdfsApi ( arg ) . create ( arg ) ;
storage = StorageUtil . getStorage ( arg ) ;
InstanceKeyValueStorage . storageSmokeTest ( arg ) ;
FileService . setHdfsApi ( arg ) ;
FileService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
JobService . setHdfsApi ( arg ) ;
FileService . setHdfsApi ( arg ) ;
FileService . setHdfsApi ( arg ) ;
FileService . setHdfsApi ( arg ) ;
if ( nodeName != null ? ! nodeName . equals ( arg ) : that . nodeName != null ) return false ;
result = 31 * result + ( nodeName != null ? nodeName . hashCode ( arg ) : 0 ) ;
String propertyValue = configHelper . getPropertyValueFromStackDefenitions ( arg ) ;
RequestStatusResponse rsr = controller . updateHostComponents ( arg ) ;
Cluster cluster = initializeNewCluster ( arg ) ;
Cluster cluster = initializeNewCluster ( arg ) ;
Cluster cluster = initializeNewCluster ( arg ) ;
List < ServiceComponentHost > schs = cluster . getServiceComponentHosts ( arg ) ;
definitionDao . create ( arg ) ;
List < AlertCurrentEntity > allCurrent = dao . findCurrent ( arg ) ;
AlertDefinitionEntity definition = definitionDao . findByName ( arg ) ;
allCurrent = dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = dao . findCurrent ( arg ) ;
allCurrent = dao . findCurrent ( arg ) ;
List < AlertCurrentEntity > allCurrent = dao . findCurrent ( arg ) ;
allCurrent = dao . findCurrent ( arg ) ;
definitionDao . create ( arg ) ;
definitionDao . create ( arg ) ;
definitionDao . create ( arg ) ;
dao . create ( arg ) ;
dao . merge ( arg ) ;
AlertEventPublisher publisher = injector . getInstance ( arg ) ;
AlertAggregateListener listener = injector . getInstance ( arg ) ;
AggregateDefinitionMapping aggregateMapping = injector . getInstance ( arg ) ;
AlertCurrentEntity current = dao . findCurrentByHostAndName ( arg ) ;
dao . merge ( arg ) ;
current = dao . findCurrentByHostAndName ( arg ) ;
dao . merge ( arg ) ;
current = dao . findCurrentByHostAndName ( arg ) ;
dao . merge ( arg ) ;
List < AlertNoticeEntity > notices = dispatchDao . findAllNotices ( arg ) ;
List < AlertDefinitionEntity > definitions = definitionDao . findAll ( arg ) ;
AlertGroupEntity group = helper . createAlertGroup ( arg ) ;
dispatchDao . merge ( arg ) ;
notices = dispatchDao . findAllNotices ( arg ) ;
List < AlertCurrentEntity > allCurrent = dao . findCurrentByService ( arg ) ;
List < AlertHistoryEntity > allHistory = dao . findAll ( arg ) ;
AlertCurrentEntity current = dao . findCurrentByHostAndName ( arg ) ;
current = dao . findCurrentByHostAndName ( arg ) ;
allCurrent = dao . findCurrentByService ( arg ) ;
allHistory = dao . findAll ( arg ) ;
current = dao . findCurrentByHostAndName ( arg ) ;
allCurrent = dao . findCurrentByService ( arg ) ;
allHistory = dao . findAll ( arg ) ;
resourceDefinition = new UpgradeItemResourceDefinition ( arg ) ;
UpgradeItemEntity upgradeItem = entity . getUpgradeItems ( arg ) . get ( arg ) ;
addComponent ( arg ) ;
ClusterEntity clusterEntity = createCluster ( arg ) ;
gpp = createGangliaComponentPropertyProvider ( arg ) ;
gpp = createGangliaHostComponentPropertyProvider ( arg ) ;
JMXPropertyProviderTest . TestMetricsHostProvider metricsHostProvider = new JMXPropertyProviderTest . TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
TestMetricsHostProvider metricsHostProvider = new TestMetricsHostProvider ( arg ) ;
if ( repositories != null ? ! repositories . equals ( arg ) : that . repositories != null ) return false ;
result = 31 * result + ( repositories != null ? repositories . hashCode ( arg ) : 0 ) ;
RepositoryVersionResourceDefinition resourceDefinition = new RepositoryVersionResourceDefinition ( arg ) ;
repoVersionEntity . setRepositories ( arg ) ;
entity . setRepositories ( arg ) ;
entity . setRepositories ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) ;
Object o = new JsonSerializer ( arg ) . serialize ( arg ) ;
return Collections . unmodifiableSet ( arg ) ;
dbAccessor . addColumn ( arg ) ;
MetricsPropertyProvider propertyProvider = MetricsPropertyProvider . createInstance ( arg ) ;
validateConfig ( arg ) ;
UpgradeEntity upgrade = m_upgradeDAO . findUpgrade ( arg ) ;
return configTypes != null && configTypes . containsKey ( arg ) ;
RepositoryVersionState allowedState ;
configs = configRequest ;
serviceName = getFirstConfigPrefix ( arg ) ;
LOG . warn ( arg ) ;
parseRepositories ( arg ) ;
return RepositoryVersionResourceProvider . parseRepositories ( arg ) ;
String desiredRepoVersion ;
String desiredRepoVersion ;
return counters . get ( arg ) > 0 ? HostRoleStatus . FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . ABORTED : counters . get ( arg ) > 0 ? HostRoleStatus . TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . IN_PROGRESS : counters . get ( arg ) == totalTasks ? HostRoleStatus . COMPLETED : HostRoleStatus . PENDING ;
dropNonSystemTables ( arg ) ;
Map < Long , Double > metricRecords = new HashMap < Long , Double > ( arg ) ;
Condition condition = new Condition ( arg ) ;
File file = File . createTempFile ( arg ) ;
return serverActionClass . newInstance ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . valueOf ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . translate ( arg ) ;
return ( arg ) ? KDCType . MIT_KDC : KDCType . valueOf ( arg ) ;
Reporting reporting = as . getReporting ( arg ) ;
int denominator = summary . getOkCount ( arg ) ;
Set < String > hosts = m_helper . getClusterHosts ( arg ) ;
return counters . get ( arg ) > 0 ? StageStatus . FAILED : counters . get ( arg ) > 0 ? StageStatus . ABORTED : counters . get ( arg ) > 0 ? StageStatus . TIMEDOUT : counters . get ( arg ) > 0 ? StageStatus . IN_PROGRESS : counters . get ( arg ) == totalTasks ? StageStatus . COMPLETED : StageStatus . PENDING ;
StageStatus desiredStatus = StageStatus . valueOf ( arg ) ;
StageStatus desiredStatus = StageStatus . valueOf ( arg ) ;
result = 31 * result + ( endTime != null ? stack . hashCode ( arg ) : 0 ) ;
ServiceDirectory serviceDirectory = new ServiceDirectory ( arg ) ;
StageWrapper execwrapper = null ;
m_masterHostResolver = mock ( arg ) ;
handler . open ( arg ) ;
throw new MetricsInitializationException ( arg ) ;
throw new MetricsInitializationException ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getUriBuilder ( arg ) ;
URIBuilder uriBuilder2 = AMSPropertyProvider . getUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getUriBuilder ( arg ) ;
URIBuilder uriBuilder = AMSPropertyProvider . getUriBuilder ( arg ) ;
return checkpoint != null && ( ( System . currentTimeMillis ( arg ) - checkpoint ) > getCheckpointCutOffIntervalMillis ( arg ) ) ;
setupClusterWithHosts ( arg ) ;
return new MultiHomedHolder ( arg ) ;
return this == RESTART ;
Set < String > existingHostsWithClusterStackAndVersion = new HashSet < String > ( arg ) ;
existingHostsWithClusterStackAndVersion . add ( arg ) ;
return this == MANUAL || this == CONFIGURE ;
Set < Map < String , Object >> resourceFilters = null ;
return counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . HOLDING_TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . FAILED : counters . get ( arg ) > 0 ? HostRoleStatus . ABORTED : counters . get ( arg ) > 0 ? HostRoleStatus . TIMEDOUT : counters . get ( arg ) > 0 ? HostRoleStatus . IN_PROGRESS : counters . get ( arg ) == totalTasks ? HostRoleStatus . COMPLETED : HostRoleStatus . PENDING ;
return ReflectionUtils . newInstance ( arg ) ;
String bindAddress = WebAppUtils . getAHSWebAppURLWithoutScheme ( arg ) ;
return getPortString ( arg ) ;
newConfigTypes = this . findConfigTypesByPropertyName ( arg ) ;
InetSocketAddress address = conf . getSocketAddr ( arg ) ;
return defaultHttpAddress ;
Collection < HostGroup > resultGroups = new HashSet < HostGroup > ( arg ) ;
return properties . containsKey ( arg ) && properties . get ( arg ) . containsKey ( arg ) ;
Map < String , HostGroup > mapOfHostGroups = new HashMap < String , HostGroup > ( arg ) ;
TypedQuery < Integer > query = entityManagerProvider . get ( arg ) . createQuery ( arg ) ;
Map < String , String > configtypePropsVal = configtypesPropsVal . get ( arg ) ;
configtypesPropsVal . put ( arg ) ;
return mapper . readValue ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition queryCondition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
File file = File . createTempFile ( arg ) ;
File file = File . createTempFile ( arg ) ;
File file = File . createTempFile ( arg ) ;
return ( arg ) mapper . readValue ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
Condition queryCondition = new DefaultCondition ( arg ) ;
Condition condition = new DefaultCondition ( arg ) ;
int okCount = summary . getOkCount ( arg ) ;
worstState = RepositoryVersionState . INSTALL_FAILED ;
return mapper . readValue ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
Condition queryCondition = new Condition ( arg ) ;
Condition condition = new Condition ( arg ) ;
