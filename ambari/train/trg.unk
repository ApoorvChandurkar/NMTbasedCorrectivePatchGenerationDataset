HostComponentResourceProvider provider = new HostComponentResourceProvider ( arg ) ;
AbstractResourceProvider provider = ( AbstractResourceProvider ) AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
AbstractResourceProvider provider = ( AbstractResourceProvider ) AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
AbstractResourceProvider provider = ( AbstractResourceProvider ) AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
AbstractResourceProvider provider = ( AbstractResourceProvider ) AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
AbstractResourceProvider provider = ( AbstractResourceProvider ) AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
<unk> db = <unk> ( arg ) ;
ActionDBAccessor db = injector . getInstance ( arg ) ;
ActionDBAccessor db = new <unk> ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
ActionManager am = getMockActionManager ( arg ) ;
<unk> = injector . getInstance ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertFalse ( arg ) ;
Assert . assertFalse ( arg ) ;
Predicate [ ] predicates = <unk> . getPredicates ( arg ) ;
Predicate [ ] predicates = predicate . getPredicates ( arg ) ;
Predicate internalPredicate = <unk> ( arg ) ;
Predicate predicate ;
Predicate predicate = predicates . get ( arg ) ;
AmbariLdapBindAuthenticator <unk> = new AmbariLdapBindAuthenticator ( arg ) ;
Stack bp = ( Stack ) <unk> . <unk> ( arg ) ;
Stack bp = Blueprints . getInstance ( arg ) . getStack ( arg ) ;
Stack bp = context . getStack ( arg ) ;
Stack bp = new Stack ( arg ) ;
<unk> bp = this . <unk> ( arg ) ;
Stack bp = this . <unk> ( arg ) ;
Stack bpx = this . getStack ( arg ) ;
return Blueprints . getInstance ( arg ) . <unk> ( arg ) ;
return Blueprints . getInstance ( arg ) . <unk> ( arg ) ;
Boolean <unk> = false ;
<unk> = new BufferedReader ( arg ) ;
Class < ? > <unk> = Class . <unk> ( arg ) ;
<unk> response = service . path ( arg ) . queryParam ( arg ) . accept ( arg ) . type ( arg ) . put ( arg ) ;
Cluster c = Clusters . getInstance ( arg ) . getClusterByName ( arg ) ;
Cluster c = Clusters . getInstance ( arg ) . getClusterByName ( arg ) ;
Cluster c = Clusters . getInstance ( arg ) . getClusterByID ( arg ) ;
Cluster cls = clusterFactory . create ( arg ) ;
Cluster cls = clusterFactory . create ( arg ) ;
Cluster cluster = Clusters . getInstance ( arg ) . getClusterByName ( arg ) ;
Cluster cluster = Clusters . getInstance ( arg ) . getClusterByID ( arg ) ;
clusters . getCluster ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterControllerImpl controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterController controller = new ClusterControllerImpl ( arg ) ;
ClusterDefinition c = Clusters . getInstance ( arg ) . operational_clusters . get ( arg ) . getLatestClusterDefinition ( arg ) ;
ClusterDefinition c = Clusters . getInstance ( arg ) . operational_clusters . get ( arg ) . getClusterDefinition ( arg ) ;
ClusterFSM clusterFsm = <unk> . <unk> ( arg ) ;
ClusterFSM <unk> = fsmDriver . <unk> ( arg ) ;
ClusterNameAndRev <unk> = new ClusterNameAndRev ( arg ) ;
Cluster cluster = getCluster ( arg ) ;
final <unk> <unk> = <unk> ( arg ) ;
clusters . deleteCluster ( arg ) ;
clusters . <unk> ( arg ) ;
Clusters <unk> = Clusters . getInstance ( arg ) ;
clusters = injector . getInstance ( arg ) ;
Clusters fsm = clusters ;
Clusters fsm = clusters ;
Clusters fsm = injector . getInstance ( arg ) ;
Clusters fsm = injector . getInstance ( arg ) ;
BufferedReader <unk> = null ;
line = parser . parse ( arg ) ;
ConcurrentHashMap < Integer , Stack > <unk> = this . stacks . get ( arg ) ;
ConcurrentHashMap < String , Node > all_nodes = nodes . getNodes ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = cluster . getConfig ( arg ) ;
Config config = clusters . getCluster ( arg ) . getConfig ( arg ) ;
Config config = clusters . <unk> ( arg ) . getConfig ( arg ) ;
Config config = service . getCluster ( arg ) . getConfig ( arg ) ;
<unk> <unk> = <unk> . get ( arg ) ;
ServletContextHandler <unk> = new ServletContextHandler ( arg ) ;
<unk> controller = injector . getInstance ( arg ) ;
<unk> <unk> = <unk> ( arg ) ;
<unk> cmd = s . <unk> ( arg ) . get ( arg ) . <unk> ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
configHelper . applyCustomConfig ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> <unk> = new <unk> ( arg ) ;
<unk> plugin = cluster . <unk> ( arg ) ;
<unk> heartBeatResponse ;
final Host host = clusters . <unk> ( arg ) . get ( arg ) ;
HostHeartbeatLostEvent e = new HostHeartbeatLostEvent ( arg ) ;
HostResponse gangliaCollectorHost ;
injector = Guice . createInjector ( arg ) ;
injector = Guice . createInjector ( arg ) ;
InstalledOrStartedComponents componentStates = new InstalledOrStartedComponents ( arg ) ;
ComponentAndRoleStates componentStates = new ComponentAndRoleStates ( arg ) ;
Integer <unk> = Integer . valueOf ( arg ) <unk> 1 ;
Iterable < Resource > iterable = controller . getResourceIterable ( arg ) ;
Iterable < Resource > iterable = controller . getResourceIterable ( arg ) ;
Iterable < Resource > iterable = controller . getResourceIterable ( arg ) ;
Iterable < Resource > iterable = controller . getResourceIterable ( arg ) ;
Iterable < Resource > resources = getResourceIterable ( arg ) ;
<unk> < Map . Entry < String , Object >> <unk> = map . entrySet ( arg ) . iterator ( arg ) ;
List < <unk> > list ;
if ( gangliaCollectorHost == null ) return false ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
<unk> = <unk> ( arg ) ;
List < Predicate > <unk> = new LinkedList < Predicate > ( arg ) ;
List < Predicate > <unk> = new LinkedList < Predicate > ( arg ) ;
List < Predicate > predicates = <unk> . <unk> ( arg ) ;
List < StackInformation > list ;
List < StackInformation > list = Blueprints . getInstance ( arg ) . <unk> ( arg ) ;
List < Cluster > clusters = clusterFsm . getClustersForHost ( arg ) ;
Set < Cluster > clusters = clusterFsm . getClustersForHost ( arg ) ;
List < <unk> > searchResults = null ;
List < <unk> > <unk> = heartbeat . <unk> ( arg ) ;
List < ExecutionCommandWrapper > execCmdList = this . commandsToSend . get ( arg ) ;
Set < GrantedAuthority > <unk> = new HashSet < GrantedAuthority > ( arg ) ;
List < Host > allHosts = fsm . getHosts ( arg ) ;
List < Host > allHosts = clusters . getHosts ( arg ) ;
List < Node > list = clusters . <unk> ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
Set < Resource > resourceSet = Collections . singleton ( arg ) ;
List < <unk> > <unk> = heartbeat . <unk> ( arg ) ;
List < ServiceComponentHost > <unk> = <unk> . <unk> ( arg ) ;
List < ServiceComponentHost > <unk> = new ArrayList < ServiceComponentHost > ( arg ) ;
<unk> < ServiceConfigEntity > list = <unk> . <unk> ( arg ) ;
List < StackInformation > list = stacks . <unk> ( arg ) ;
List < Stage > stages = actionDB . getAllStages ( arg ) ;
List < Stage > stages = db . <unk> ( arg ) ;
List < Stage > stages = db . <unk> ( arg ) ;
stages = <unk> . <unk> ( arg ) ;
List < Host > allHosts = fsm . <unk> ( arg ) ;
List < DesiredConfig . HostOverride > hosts = Arrays . <unk> ( arg ) ;
List < DesiredConfig . HostOverride > hosts = new ArrayList < DesiredConfig . HostOverride > ( arg ) ;
String <unk> = clsDef . getNodes ( arg ) ;
List < String > nodeRoles = nodes . getNode ( arg ) . getNodeState ( arg ) . getNodeRoleNames ( arg ) ;
List < String > nodeRoles = nodes . <unk> ( arg ) ;
LOG . debug ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
final Map . Entry < Resource . Type , Set < Map < String , Object <unk> entry = mapProperties . entrySet ( arg ) . iterator ( arg ) . next ( arg ) ;
Map < PropertyId , String > mapProperties = new HashMap < PropertyId , String > ( arg ) ;
Map < PropertyId , String > <unk> = parser . parse ( arg ) ;
Map < String , Object > properties = new HashMap < String , Object > ( arg ) ;
Map < String , Object > properties = new LinkedHashMap < String , Object > ( arg ) ;
Map < PropertyId , String > resourceProperties = new HashMap < PropertyId , String > ( arg ) ;
Map < PropertyId , String > resourceProperties = new HashMap < PropertyId , String > ( arg ) ;
Map < PropertyId , String > resourceProperties = new HashMap < PropertyId , String > ( arg ) ;
Map < String , String > <unk> = new HashMap < String , String > ( arg ) ;
Map < PropertyId , Object > mapProperties = new HashMap < PropertyId , Object > ( arg ) ;
Map < PropertyId , Object > mapProperties = new HashMap < PropertyId , Object > ( arg ) ;
Map < String , PropertyInfo > <unk> = <unk> . get ( arg ) ;
Map < PropertyId , Object > properties = new LinkedHashMap < PropertyId , Object > ( arg ) ;
Map < PropertyId , Object > properties = new LinkedHashMap < PropertyId , Object > ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Set < Map < PropertyId , Object >> setResourceProperties = new HashSet < Map < PropertyId , Object >> ( arg ) ;
Map < String , TemporalInfo > <unk> = request . <unk> ( arg ) ;
Map < String , TemporalInfo > mapProperties ;
Map < Resource . Type , String > <unk> = <unk> ( arg ) ;
Map < Resource . Type , String > mapResourceIds = resource . getKeyValueMap ( arg ) ;
Map < Resource . Type , String > mapResourceIds = resource . getKeyValueMap ( arg ) ;
Set < ServiceComponentHostRequest > <unk> = new HashSet < ServiceComponentHostRequest > ( arg ) ;
Map < String , Config > configs = cluster . getConfigsByType ( arg ) ;
Map < String , Config > configs = cluster . getConfigsByType ( arg ) ;
<unk> ( arg ) ;
Map < String , HostConfig > actual = sch . getActualConfigs ( arg ) ;
Map < String , HostConfig > <unk> = sch . getActualConfigs ( arg ) ;
Map < String , Set < String >> clusterHostInfo = StageUtils . getClusterHostInfo ( arg ) ;
Map < String , Set < String >> clusterHostInfo = StageUtils . getClusterHostInfo ( arg ) ;
Map < String , Set < String >> clusterHostInfo = <unk> . <unk> ( arg ) ;
Map < String , Map < String , Object >> categories = resource . <unk> ( arg ) ;
Map < String , Map < String , String >> configTags = findConfigurationTagsWithOverrides ( arg ) ;
Map < String , Map < String , String >> configTags = findConfigurationTagsWithOverrides ( arg ) ;
Map < String , Map < String , String >> configTags = findConfigurationTagsWithOverrides ( arg ) ;
Map < String , Object > map = PredicateHelper . <unk> ( arg ) ;
Map < Resource . Type , PropertyId > <unk> = <unk> . getKeyPropertyIds ( arg ) ;
Map < String , PropertyInfo > <unk> = <unk> ( arg ) . get ( arg ) ;
Map < String , <unk> > <unk> = <unk> ( arg ) ;
Map < String , Set < String >> categories = schema . <unk> ( arg ) ;
Map < String , String > mergedConfig = configHelper . getMergedConfig ( arg ) ;
Map < String , String > mergedConfig = configHelper . getMergedConfig ( arg ) ;
Map < String , String > mergedConfig = configHelper . getMergedConfig ( arg ) ;
Map < String , Object > properties = categories . get ( arg ) ;
Map < String , Object > properties = categories . get ( arg ) ;
NodeHealthStatus <unk> = new NodeHealthStatus ( arg ) ;
HostInfo info = new HostInfo ( arg ) ;
HostInfo info = new HostInfo ( arg ) ;
nodes . checkAndUpdateNode ( arg ) ;
nodes . getNodes ( arg ) . get ( arg ) . getNodeState ( arg ) . getNodeRoleNames ( arg ) . add ( arg ) ;
getNodes ( arg ) . put ( arg ) ;
Nodes . getInstance ( arg ) . checkAndUpdateNode ( arg ) ;
<unk> <unk> = <unk> . create ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
PredicateHelper . visit ( arg ) ;
Predicate internalPredicate = pb . property ( arg ) . equals ( arg ) . and ( arg ) . property ( arg ) . equals ( arg ) . toPredicate ( arg ) ;
Predicate <unk> = <unk> ( arg ) ;
Predicate predicate = new PredicateBuilder ( arg ) . property ( arg ) . equals ( arg ) . and ( arg ) . property ( arg ) . equals ( arg ) . toPredicate ( arg ) ;
Predicate predicate = pb . property ( arg ) . equals ( arg ) . and ( arg ) . property ( arg ) . equals ( arg ) . toPredicate ( arg ) ;
PredicateBuilder . PredicateBuilderWithPredicate pbWithPredicate = null ;
PredicateBuilder . PredicateBuilderPredicate pbPredicate = null ;
String category4 = category4 ;
String finalProp = finalProp ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
String p1 = PropertyHelper . getPropertyId ( arg ) ;
PropertyId <unk> = PropertyHelper . getPropertyId ( arg ) ;
String prop = prop ;
String <unk> = PropertyHelper . getPropertyId ( arg ) ;
String <unk> = PropertyHelper . getPropertyId ( arg ) ;
String prop3 = prop3 ;
PropertyId propertyId = PropertyHelper . getPropertyId ( arg ) ;
String propertyId = PropertyHelper . getPropertyId ( arg ) ;
String subResource = PropertyHelper . getPropertyId ( arg ) ;
String propertyId = PropertyHelper . getPropertyId ( arg ) ;
<unk> query = getEntityManager ( arg ) . createQuery ( arg ) ;
<unk> = <unk> ( arg ) ;
TemporalInfo <unk> = request . <unk> ( arg ) ;
Request request = PropertyHelper . getReadRequest ( arg ) ;
Request request = PropertyHelper . getReadRequest ( arg ) ;
Request request = PropertyHelper . getReadRequest ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
RequestBody body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
<unk> <unk> = null ;
RequestStatusResponse resp = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse resp = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse resp = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse resp = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse response = controller . createAction ( arg ) ;
RequestStatusResponse response = controller . createAction ( arg ) ;
RequestStatusResponse response = controller . createAction ( arg ) ;
RequestStatusResponse trackAction = controller . updateClusters ( arg ) ;
RequestStatusResponse trackAction = ComponentResourceProviderTest . updateComponents ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
RequestStatusResponse trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
ResourceInstance r = entry . getValue ( arg ) ;
ResourceInstance resource = createMock ( arg ) ;
ResourceInstance resource = createMock ( arg ) ;
ResourceInstance resource = createMock ( arg ) ;
ResourceInstance resource = createMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resourceDef = createStrictMock ( arg ) ;
ResourceInstance resource = createStrictMock ( arg ) ;
ResourceInstance subResource = m_resource . <unk> ( arg ) . get ( arg ) ;
ResourceInstance instance = new TestQuery ( arg ) ;
ResourceInstance instance = new TestQuery ( arg ) ;
ResourceInstance instance = new ResourceInstanceImpl ( arg ) ;
ResourceInstance instance = new ResourceInstanceImpl ( arg ) ;
<unk> subResource = <unk> ( arg ) . get ( arg ) ;
ResourceProvider provider = <unk> ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
ResourceProvider provider = ensureResourceProvider ( arg ) ;
ResourceProvider provider = ensureResourceProvider ( arg ) ;
ResourceProvider provider = ensureResourceProvider ( arg ) ;
Result <unk> = createNiceMock ( arg ) ;
Result result = new <unk> ( arg ) ;
Result result = new TestCreateHandler ( arg ) . handleRequest ( arg ) ;
Result result = new TestCreateHandler ( arg ) . handleRequest ( arg ) ;
Result result = new TestDeleteHandler ( arg ) . handleRequest ( arg ) ;
Result result = new TestDeleteHandler ( arg ) . handleRequest ( arg ) ;
Result result = new TestUpdateHandler ( arg ) . handleRequest ( arg ) ;
Result result = new TestUpdateHandler ( arg ) . handleRequest ( arg ) ;
RoleFSM firstRole = operand . getFirstRole ( arg ) ;
RoleFSM firstRole = operand . getFirstRole ( arg ) ;
Role firstRole = operand . getFirstRole ( arg ) ;
RoleFSM role = operand . getNextRole ( arg ) ;
RoleFSM role = operand . getNextRole ( arg ) ;
RoleCommandOrder rco = injector . getInstance ( arg ) ;
RoleCommandOrder rco = injector . getInstance ( arg ) ;
RoleCommandOrder rco = injector . getInstance ( arg ) ;
RoleCommandOrder rco = injector . getInstance ( arg ) ;
RoleCommandOrder rco = <unk> ( arg ) ;
List < RoleToNodes > <unk> = new ArrayList < RoleToNodes > ( arg ) ;
RoleToNodes e = new RoleToNodes ( arg ) ;
<unk> schema = clusterController . getSchema ( arg ) ;
Service s = serviceFactory . createNew ( arg ) ;
Service s = serviceFactory . createNew ( arg ) ;
ServiceFSM service = operand . getAssociatedService ( arg ) ;
ServiceFSM service = operand . getAssociatedService ( arg ) ;
ServiceFSM service = operand . getAssociatedService ( arg ) ;
Service service = operand . getFirstService ( arg ) ;
Service service = operand . getFirstService ( arg ) ;
RoleCommand roleCommand ;
RoleCommand roleCommand ;
RoleCommand roleCommand ;
<unk> <unk> = <unk> ( arg ) ;
ServiceComponentHostOpFailedEvent <unk> = new ServiceComponentHostOpFailedEvent ( arg ) ;
ServiceComponentHostImpl impl = ( ServiceComponentHostImpl ) createNewServiceComponentHost ( arg ) ;
ServiceComponentHostImpl impl = ( ServiceComponentHostImpl ) createNewServiceComponentHost ( arg ) ;
<unk> <unk> ;
State actual = <unk> . <unk> ( arg ) ;
State oldState = getState ( arg ) ;
ServiceFSM service = operand . <unk> ( arg ) ;
Service service = operand . getAssociatedService ( arg ) ;
Set < Predicate > setPredicates = new HashSet < Predicate > ( arg ) ;
final Set < HostRequest > requests = new HashSet < HostRequest > ( arg ) ;
Set < HostResponse > resps = HostResourceProviderTest . getHosts ( arg ) ;
Set < Map < String , Object >> setProps = parser . parse ( arg ) ;
Set < Map < String , Object >> setProps = parser . parse ( arg ) ;
Set < Map < String , Object >> setProps = parser . parse ( arg ) ;
Set < Map < String , Object >> setProps = parser . parse ( arg ) ;
Set < Map < String , Object >> setResourceProperties = new HashSet < Map < String , Object >> ( arg ) ;
RequestBody body = new RequestBody ( arg ) ;
Set < NamedPropertySet > <unk> = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProperties = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProperties = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > setProps2 = body . getNamedPropertySets ( arg ) ;
Set < NamedPropertySet > <unk> = request . getBody ( arg ) . getNamedPropertySets ( arg ) ;
Set < <unk> > response ;
Set < BasePredicate > setPredicates = new HashSet < BasePredicate > ( arg ) ;
Set < BasePredicate > setPredicates = new HashSet < BasePredicate > ( arg ) ;
Set < String > ids = <unk> . getPropertyIds ( arg ) ;
Set < String > ids = <unk> . getPropertyIds ( arg ) ;
Set < String > propertyIds = new HashSet < String > ( arg ) ;
Set < String > propertyIds = new HashSet < String > ( arg ) ;
Set < String > propertyIds = new HashSet < String > ( arg ) ;
Set < String > <unk> = new HashSet < String > ( arg ) ;
Set < String > requestedIds = PropertyHelper . getRequestPropertyIds ( arg ) ;
Set < PropertyId > requestedIds = PropertyHelper . getRequestPropertyIds ( arg ) ;
Set < PropertyId > requestedIds = PropertyHelper . getRequestPropertyIds ( arg ) ;
Set < PropertyId > requestedIds = PropertyHelper . getRequestPropertyIds ( arg ) ;
Set < PropertyId > requestedIds = PropertyHelper . getRequestPropertyIds ( arg ) ;
Set < Resource > <unk> ;
<unk> < Resource > <unk> = new <unk> < Resource > ( arg ) ;
Set < Resource > <unk> = <unk> ( arg ) ;
List < Resource > listResources = Collections . singletonList ( arg ) ;
List < Resource > listResources = Collections . singletonList ( arg ) ;
List < Resource > listResources = Collections . singletonList ( arg ) ;
List < Resource > listResources = Collections . singletonList ( arg ) ;
resources = new HashSet < Resource > ( arg ) ;
Set < ServiceComponentResponse > response = ComponentResourceProviderTest . getComponents ( arg ) ;
Set < ServiceComponentResponse > resps = ComponentResourceProviderTest . getComponents ( arg ) ;
Set < ServiceComponentResponse > resps = ComponentResourceProviderTest . getComponents ( arg ) ;
Set < ServiceResponse > r = ServiceResourceProviderTest . getServices ( arg ) ;
Set < ServiceResponse > resp = ServiceResourceProviderTest . getServices ( arg ) ;
Set < ServiceResponse > response = ServiceResourceProviderTest . getServices ( arg ) ;
Set < <unk> > response ;
Set < <unk> > response ;
Set < <unk> > response ;
Set < <unk> > response ;
Set < String > ids = getRequestPropertyIds ( arg ) ;
Set < String > ids = getRequestPropertyIds ( arg ) ;
Set < String > ids = getRequestPropertyIds ( arg ) ;
Set < String > propertyIds = getRequestPropertyIds ( arg ) ;
Set < String > propertyIds = <unk> . getPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
Set < String > requestedIds = getRequestPropertyIds ( arg ) ;
final Set < UserRequest > requests = new HashSet < UserRequest > ( arg ) ;
<unk> . <unk> ( arg ) ;
Stack bp = Stacks . getInstance ( arg ) . getStack ( arg ) ;
Stack bp = stacks . getStack ( arg ) ;
Stack bp = dataStore . retrieveStack ( arg ) ;
StackId stackVersion = new StackId ( arg ) ;
Stage stage = db . getStage ( arg ) ;
Stage stage = <unk> . createNew ( arg ) ;
Stage <unk> = db . getStage ( arg ) ;
State oldSchState = <unk> . getState ( arg ) ;
State oldSchState = sch . getState ( arg ) ;
State oldSchState = sch . getState ( arg ) ;
State oldSchState = sch . getState ( arg ) ;
State oldState = sch . getState ( arg ) ;
fsmDriver . deleteCluster ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
stateMachineInvoker . getAMBARIEventHandler ( arg ) . handle ( arg ) ;
Guice . createInjector ( arg ) ;
Guice . createInjector ( arg ) ;
Guice . createInjector ( arg ) ;
fsmDriver . startCluster ( arg ) ;
fsmDriver . stopCluster ( arg ) ;
String [ ] <unk> = <unk> . get ( arg ) ;
String attributes = ( String ) host . getPropertyValue ( arg ) ;
String attributes = ( String ) host . getPropertyValue ( arg ) ;
String stackName = line . getOptionValue ( arg ) ;
String stackName = line . getOptionValue ( arg ) ;
String <unk> = Nodes . getInstance ( arg ) . getNodes ( arg ) . get ( arg ) . getNodeState ( arg ) . getClusterName ( arg ) ;
String clusterID = cls . <unk> ( arg ) ;
String clusterName = null ;
String clusterName = nodes . getNode ( arg ) . getNodeState ( arg ) . getClusterName ( arg ) ;
String clusterName = ( String ) resource . getPropertyValue ( arg ) ;
String clusterName = ( String ) resource . getPropertyValue ( arg ) ;
String clusterID = <unk> ( arg ) ;
String commands [ ] = new String [ <unk> ] ;
String commands [ ] = new String [ 9 ] ;
String commands [ ] = new String [ 10 ] ;
String componentName = <unk> ;
String componentName = NAMENODE ;
String componentName = NAMENODE ;
String componentName = NAMENODE ;
String <unk> = <unk> . <unk> ( arg ) . <unk> ( arg ) ;
String hostName = ( String ) <unk> . getPropertyValue ( arg ) ;
Object id = r . getPropertyValue ( arg ) ;
String <unk> = <unk> ( arg ) ;
String <unk> = configs . <unk> ( arg ) . get ( arg ) . <unk> ( arg ) ;
String path = config ;
String <unk> = <unk> . <unk> ( arg ) ;
String query = body . <unk> ( arg ) . get ( arg ) ;
String <unk> = clusterController . getSchema ( arg ) . <unk> ( arg ) ;
String ret = <unk> responseId +  N + <unk> <unk> +  N + <unk> <unk> +  N + <unk> <unk> +  N ;
String <unk> = cmd . getRole ( arg ) ;
String <unk> = c . getRole ( arg ) ;
String <unk> = clusters . <unk> ( arg ) ;
String serviceName = <unk> ;
String serviceName = HDFS ;
String serviceName = HDFS ;
String serviceName = HDFS ;
String serviceName = HDFS ;
String <unk> = PropertyHelper . <unk> ( arg ) ;
String <unk> = <unk> ( arg ) ;
URIBuilder uriBuilder = new URIBuilder ( arg ) ;
LOG . info ( arg ) ;
TestResourceProvider resourceProvider = ( TestResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestResourceProvider resourceProvider = ( TestResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestResourceProvider resourceProvider = ( TestResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestResourceProvider resourceProvider = ( TestResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestResourceProvider resourceProvider = ( TestResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
TestHostResourceProvider resourceProvider = ( TestHostResourceProvider ) providerModule . getResourceProvider ( arg ) ;
scaner . execute ( arg ) ;
scaner . execute ( arg ) ;
scaner . execute ( arg ) ;
scaner . execute ( arg ) ;
RequestStatusResponse response = createNiceMock ( arg ) ;
RequestStatusResponse response = createNiceMock ( arg ) ;
RequestStatusResponse response = createNiceMock ( arg ) ;
RequestStatusResponse response = createNiceMock ( arg ) ;
RequestStatusResponse response = createNiceMock ( arg ) ;
RequestStatusResponse trackAction = controller . updateComponents ( arg ) ;
RequestStatusResponse trackAction = controller . <unk> ( arg ) ;
RequestStatusResponse trackAction = controller . updateServices ( arg ) ;
tree . addChild ( arg ) ;
<unk> < Resource > node = tree . addChild ( arg ) ;
TypedQuery < ServiceConfigEntity > query = entityManagerProvider . get ( arg ) . createQuery ( arg ) ;
TypedQuery < ServiceConfigEntity > query = entityManagerProvider . get ( arg ) . createQuery ( arg ) ;
URL <unk> ;
<unk> = new URL ( arg ) ;
<unk> <unk> = <unk> . <unk> ( arg ) ? <unk> ( arg ) : <unk> ( arg ) ;
<unk> <unk> ;
Context <unk> = new Context ( arg ) ;
action . setRole ( arg ) ;
action . setRole ( arg ) ;
<unk> . setRole ( arg ) ;
actionManager . processTaskResponse ( arg ) ;
<unk> . setRole ( arg ) ;
fillDetailsAndAddAction ( arg ) ;
fillDetailsAndAddAction ( arg ) ;
addStack ( arg ) ;
agentEnv . <unk> ( arg ) ;
this . agentEnv = <unk> ;
<unk> action = plugin . <unk> ( arg ) ;
all_nodes . get ( arg ) . <unk> ( arg ) ;
am . processTaskResponse ( arg ) ;
am . processTaskResponse ( arg ) ;
<unk> <unk> = injector . getInstance ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
Assert . assertNotNull ( arg ) ;
Assert . assertNotNull ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
<unk> = injector . getInstance ( arg ) ;
<unk> ( arg ) . <unk> ( arg ) . to ( arg ) ;
bind ( arg ) . to ( arg ) ;
<unk> . add ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
body = parser . parse ( arg ) . iterator ( arg ) . next ( arg ) ;
<unk> ( arg ) ;
<unk> <unk> = componentStates . <unk> ( arg ) || componentStates . <unk> ( arg ) ;
bp = Blueprints . getInstance ( arg ) . getStack ( arg ) ;
bp = Blueprints . getInstance ( arg ) . getStack ( arg ) ;
bp = Stacks . getInstance ( arg ) . getStack ( arg ) ;
bp = Stacks . getInstance ( arg ) . getStack ( arg ) ;
bp = Stacks . getInstance ( arg ) . getStack ( arg ) ;
bp = Stacks . getInstance ( arg ) . getStack ( arg ) ;
bp = stacks . getStack ( arg ) ;
bp = stacks . getStack ( arg ) ;
bp = context . getStack ( arg ) ;
bp = this . <unk> . <unk> ( arg ) ;
bp = dataStore . retrieveStack ( arg ) ;
bpx = this . getStack ( arg ) ;
bpx = this . getStack ( arg ) ;
c . addConfig ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
updateTestFSMDriverImpl ( arg ) ;
clusters . addHost ( arg ) ;
clusters . addHost ( arg ) ;
clusters . getHost ( arg ) . handleEvent ( arg ) ;
category = new ArrayList < ConfigurationCategory > ( arg ) ;
cdef . setEnabledServices ( arg ) ;
<unk> ( arg ) ;
cls . addClusterDefinition ( arg ) ;
cls . addClusterDefinition ( arg ) ;
clsDef . setEnabledServices ( arg ) ;
clsDef . setEnabledServices ( arg ) ;
clsDef . setStackName ( arg ) ;
clsDef . setStackName ( arg ) ;
clsDef . setStackRevision ( arg ) ;
clsDef . setStackRevision ( arg ) ;
clsDef . setNodes ( arg ) ;
<unk> . setState ( arg ) ;
cluster . addConfig ( arg ) ;
clusterDefinitionRevisionsList . put ( arg ) ;
StateMachineInvoker . startCluster ( arg ) ;
StateMachineInvoker . stopCluster ( arg ) ;
hostObject . handleEvent ( arg ) ;
clusterRev = Clusters . getInstance ( arg ) . getClusterByName ( arg ) . getLatestRevisionNumber ( arg ) ;
<unk> . put ( arg ) ;
clusters . getHost ( arg ) . setOsType ( arg ) ;
clusters . getHost ( arg ) . setOsType ( arg ) ;
injector . getInstance ( arg ) . <unk> ( arg ) ;
<unk> . setRoleCommand ( arg ) ;
<unk> . setRoleCommand ( arg ) ;
<unk> . setRoleCommand ( arg ) ;
commands [ <unk> ] = this . passwordFile . toString ( arg ) ;
commands [ 9 ] = this . passwordFile . toString ( arg ) ;
commands [ 10 ] = this . passwordFile . toString ( arg ) ;
<unk> . delete ( arg ) ;
serviceComponentDesiredStateEntity = entity ;
<unk> . put ( arg ) ;
<unk> = componentStates . <unk> ( arg ) ;
Config config = <unk> . createNew ( arg ) ;
<unk> ( arg ) ;
<unk> . clear ( arg ) ;
<unk> ( arg ) . <unk> ( arg ) ;
controller . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
ComponentResourceProviderTest . createComponents ( arg ) ;
controller . createHosts ( arg ) ;
controller . createHosts ( arg ) ;
controller . createHosts ( arg ) ;
controller . <unk> ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
HostResourceProviderTest . createHosts ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
ServiceResourceProviderTest . createServices ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
HostResourceProviderTest . deleteHosts ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
ComponentResourceProviderTest . getComponents ( arg ) ;
controller . getResourceIterable ( arg ) ;
controller . getResourceIterable ( arg ) ;
ServiceResourceProviderTest . getServices ( arg ) ;
ServiceResourceProviderTest . getServices ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
controller . updateClusters ( arg ) ;
ComponentResourceProviderTest . updateComponents ( arg ) ;
ComponentResourceProviderTest . updateComponents ( arg ) ;
ComponentResourceProviderTest . updateComponents ( arg ) ;
expect ( arg ) . andReturn ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
ServiceResourceProviderTest . updateServices ( arg ) ;
<unk> . <unk> ( arg ) ;
createDirStructureAction ( arg ) ;
createDirStructureAction ( arg ) ;
createService ( arg ) ;
actionDB = injector . getInstance ( arg ) ;
defn . setName ( arg ) ;
defn . setName ( arg ) ;
defn . <unk> ( arg ) ;
this . dependencies . get ( arg ) . add ( arg ) ;
this . dependencies . get ( arg ) . <unk> ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
getEntityManager ( arg ) . <unk> ( arg ) . <unk> ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . persist ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
entityManagerProvider . get ( arg ) . remove ( arg ) ;
roleCommand = RoleCommand . INSTALL ;
roleCommand = RoleCommand . INSTALL ;
roleCommand = RoleCommand . INSTALL ;
roleCommand = RoleCommand . START ;
roleCommand = RoleCommand . START ;
roleCommand = RoleCommand . START ;
roleCommand = RoleCommand . STOP ;
roleCommand = RoleCommand . STOP ;
roleCommand = RoleCommand . STOP ;
Assert . assertTrue ( arg ) ;
execCmd . <unk> ( arg ) ;
execCmd . <unk> ( arg ) ;
execCmdList = new ArrayList < ExecutionCommandWrapper > ( arg ) ;
managementController . createService ( arg ) ;
expect ( arg ) . andReturn ( arg ) . atLeastOnce ( arg ) ;
expect ( arg ) . andReturn ( arg ) . atLeastOnce ( arg ) ;
expect ( arg ) . andReturn ( arg ) . atLeastOnce ( arg ) ;
<unk> . <unk> ( arg ) ;
hostObj . setState ( arg ) ;
fsmDriver . stopCluster ( arg ) ;
return getClusterController ( arg ) . deleteResources ( arg ) ;
return getClusterController ( arg ) . updateResources ( arg ) ;
createComponents ( arg ) ;
createHosts ( arg ) ;
createServices ( arg ) ;
return getRequestStatus ( arg ) ;
return getRequestStatus ( arg ) ;
deleteHosts ( arg ) ;
return getRequestStatus ( arg ) ;
return getRequestStatus ( arg ) ;
return getRequestStatus ( arg ) ;
<unk> ( arg ) ;
return getRequestStatus ( arg ) ;
<unk> response = <unk> . <unk> ( arg ) ;
heartBeatResponse = <unk> . <unk> ( arg ) ;
host . setHealthStatus ( arg ) ;
host . setHealthStatus ( arg ) ;
host . setHealthStatus ( arg ) ;
host = PropertyHelper . <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
hostComponentDesiredStateEntity = entity ;
<unk> . <unk> ( arg ) ;
hostName = getHealthyHost ( arg ) ;
s . <unk> ( arg ) ;
long id = <unk> ( arg ) ;
<unk> . add ( arg ) ;
if ( command != null ? ! command . equals ( arg ) : that . command != null ) return false ;
if ( <unk> . <unk> ( arg ) ) <unk> . add ( arg ) ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( clusterId != null ? ! clusterId . equals ( arg ) : that . clusterId != null ) return false ;
if ( command != null ? ! Arrays . equals ( arg ) : that . command != null ) return false ;
if ( hostState != hostObj . getState ( arg ) && scanner != null ) scanner . updateHBaseMaster ( arg ) ;
if ( hostState != hostObject . getState ( arg ) ) scanner . updateHBaseMaster ( arg ) ;
if ( <unk> == null ) throw new <unk> ( arg ) ;
if ( keys != null && keys . contains ( arg ) ) return true ;
if ( timeInState != null ? ! timeInState . equals ( arg ) : that . timeInState != null ) return false ;
if ( node . getNodeState ( arg ) . getClusterName ( arg ) != null ) clusterID = node . getNodeState ( arg ) . getClusterName ( arg ) ;
if ( null == pi . getValue ( arg ) || pi . getValue ( arg ) . isEmpty ( arg ) ) continue ;
if ( null == pi . getValue ( arg ) ) continue ;
if ( <unk> . isEmpty ( arg ) ) return ;
if ( type != null ? ! type . equals ( arg ) : that . type != null ) return false ;
info . <unk> ( arg ) ;
bind ( arg ) . to ( arg ) ;
int clusterRev = clusters . getClusterByName ( arg ) . getLatestRevisionNumber ( arg ) ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = clusterId != null ? clusterId . intValue ( arg ) : 0 ;
int result = <unk> ;
int result = predicates != null ? new HashSet < BasePredicate > ( arg ) . hashCode ( arg ) : 0 ;
int result = predicates != null ? new HashSet < Predicate > ( arg ) . hashCode ( arg ) : 0 ;
<unk> . append ( arg ) ;
<unk> = deleted ;
<unk> . clear ( arg ) ;
<unk> ( arg ) ;
<unk> = clusters . getHost ( arg ) . getLastHeartbeatTime ( arg ) ;
list [ index ++ ] = jaxbMap ;
list [ index ++ ] = jaxbMap ;
list . add ( arg ) ;
list = nodes . <unk> ( arg ) ;
list = stacks . <unk> ( arg ) ;
getComponents ( arg ) ;
getComponents ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
requestId = new Long ( arg ) ;
long requestId = actionManager . getNextRequestId ( arg ) ;
long requestId = actionManager . getNextRequestId ( arg ) ;
long requestId = actionManager . getNextRequestId ( arg ) ;
long <unk> = hostObj . <unk> ( arg ) ;
m_mapChildren . put ( arg ) ;
m_mapChildren . put ( arg ) ;
temporalInfoMap . put ( arg ) ;
temporalInfoMap . put ( arg ) ;
<unk> = new LinkedHashMap < String , String > ( arg ) ;
<unk> . put ( arg ) ;
<unk> . put ( arg ) ;
this . pageRequest = pageRequest ;
queryPropertySet . add ( arg ) ;
userPredicate = predicate ;
managementController . createServices ( arg ) ;
mapProperties = new HashMap < String , TemporalInfo > ( arg ) ;
Assert . assertEquals ( arg ) ;
<unk> . <unk> ( arg ) ;
newcd . setEnabledServices ( arg ) ;
newcd . setStackName ( arg ) ;
newcd . setStackRevision ( arg ) ;
newcd . setNodes ( arg ) ;
<unk> . add ( arg ) ;
Request serverRequest = createStrictMock ( arg ) ;
Request serverRequest = createStrictMock ( arg ) ;
pbWithPredicate = null ;
pbWithPredicate = pb . property ( arg ) . equals ( arg ) ;
pbPredicate = null ;
pbPredicate = pb . property ( arg ) . equals ( arg ) ;
if ( hostInfo . getHostName ( arg ) != null &&! hostInfo . getHostName ( arg ) . isEmpty ( arg ) &&! hostInfo . getHostName ( arg ) . equals ( arg ) ) <unk>
PredicateHelper . visit ( arg ) ;
predicate = ( m_userPredicate == null ? internalPredicate : new <unk> ( arg ) ) ;
Predicate predicate = new PredicateBuilder ( arg ) . property ( arg ) . equals ( arg ) . toPredicate ( arg ) ;
PredicateHelper . visit ( arg ) ;
printBlueprint ( arg ) ;
printBlueprint ( arg ) ;
sb . append ( arg ) ;
properties = gson . < Map < String , String >> fromJson ( arg ) ;
properties = new LinkedHashMap < String , Object > ( arg ) ;
propertyId = <unk> ( arg ) ;
return provider . <unk> ( arg ) ;
return provider . deleteResources ( arg ) ;
return provider . updateResources ( arg ) ;
this . <unk> = name ;
return new <unk> ( arg ) ;
r . <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
Long requestId = actionManager . getNextRequestId ( arg ) ;
requestId = Long . valueOf ( arg ) ;
<unk> = instance ;
<unk> ( arg ) ;
resource . getQuery ( arg ) . addLocalProperty ( arg ) ;
resource . getQuery ( arg ) . addLocalProperty ( arg ) ;
request . <unk> ( arg ) . getQuery ( arg ) . <unk> ( arg ) ;
<unk> ( arg ) ;
controller . getServices ( arg ) ;
response . <unk> ( arg ) ;
response = configs . <unk> ( arg ) ;
response = controller . createAction ( arg ) ;
response = service . path ( arg ) . accept ( arg ) . type ( arg ) . put ( arg ) ;
response = service . path ( arg ) . queryParam ( arg ) . accept ( arg ) . type ( arg ) . put ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = ComponentResourceProviderTest . getComponents ( arg ) ;
resps = HostResourceProviderTest . getHosts ( arg ) ;
result = 31 * result + ( command != null ? command . hashCode ( arg ) : 0 ) ;
result = 31 * result + ( command != null ? Arrays . hashCode ( arg ) : 0 ) ;
result = 31 * result + <unk> ;
result = 31 * result + ( timeInState != null ? timeInState . intValue ( arg ) : 0 ) ;
result = 31 * result + ( lastRegistrationTime != null ? lastRegistrationTime . intValue ( arg ) : 0 ) ;
result = 31 * result + <unk> ;
result = 31 * result + ( taskId != null ? taskId : 0 ) ;
result = 31 * result + ( type != null ? type . hashCode ( arg ) : 0 ) ;
result = 31 * result + m_setQueryProperties . hashCode ( arg ) ;
result = 31 * result + keyValueMap . hashCode ( arg ) ;
retryCountForRole . incrAttemptCount ( arg ) ;
retryCountForRole . incrAttemptCount ( arg ) ;
retryCountForRole . resetAttemptCount ( arg ) ;
retryCountForRole . resetAttemptCount ( arg ) ;
retryCountForRole . resetAttemptCount ( arg ) ;
retryCountForRole . resetAttemptCount ( arg ) ;
return StageUtils . <unk> ( arg ) ;
return new <unk> ( arg ) ;
return 1 ;
return AbstractControllerResourceProvider . getResourceProvider ( arg ) ;
return ClusterStateFSM . ACTIVE ;
return ClusterStateFSM . INACTIVE ;
return ClusterStateFSM . STARTING ;
return ClusterStateFSM . STOPPING ;
return Clusters . getInstance ( arg ) . getClusterInformation ( arg ) ;
return clusters . getClusterInformation ( arg ) ;
return clusters . <unk> ( arg ) ;
return clusters . getClusterState ( arg ) ;
return clusters . <unk> ( arg ) ;
return Collections . emptyMap ( arg ) ;
return <unk> ;
return new <unk> < ServiceComponentHost > ( arg ) ;
return Collections . <unk> ( arg ) ;
return <unk> + <unk> ;
return nodes . getNode ( arg ) ;
return nodes . getNodes ( arg ) . get ( arg ) . getNodeState ( arg ) . getNodeRoleNames ( arg ) ;
return propertyIds ;
return <unk> ;
return AbstractResourceProvider . getResourceProvider ( arg ) ;
return ServiceState . <unk> ;
return stacks . addStack ( arg ) ;
return stacks . getStack ( arg ) ;
return stacks . <unk> ( arg ) ;
return <unk> . <unk> . equals ( arg ) ;
return taskId +   + role +   + <unk> +   + <unk> ;
return defaultString ( arg ) ;
return <unk> this . <unk> + <unk> this . mountpoint + <unk> this . <unk> + <unk> this . <unk> + <unk> this . <unk> + <unk> this . <unk> ;
return hostStateEntity . <unk> ( arg ) ;
return stackName ;
return stackRevision ;
return <unk> . equals ( arg ) ;
return cdef ;
return cls . getLatestClusterDefinition ( arg ) ;
return cluster . getLatestClusterDefinition ( arg ) . getName ( arg ) ;
return <unk> ;
return clusterFsm ;
return clusterController . equals ( arg ) &&! ( pageRequest != null ? ! pageRequest . equals ( arg ) : query . pageRequest != null ) && queryPropertySet . equals ( arg ) && <unk> . equals ( arg ) && keyValueMap . equals ( arg ) &&! ( userPredicate != null ? ! userPredicate . equals ( arg ) : query . userPredicate != null ) ;
return clusterDefinitionRevisionsList . get ( arg ) ;
return clusterDefinitionRevisionsList . get ( arg ) ;
return <unk> ;
return <unk> . <unk> ( arg ) ;
return defaultString ( arg ) ;
return dataStore . <unk> ( arg ) ;
return commands ;
return <unk> . toString ( arg ) . <unk> ( arg ) ;
return serviceComponentDesiredStateEntity ;
return defaultString ( arg ) ;
return hostEntity . <unk> ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return db . getStage ( arg ) ;
return this . <unk> . getName ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return desiredStateEntity . getDesiredState ( arg ) ;
return desiredStateEntity . getDesiredState ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . find ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) . merge ( arg ) ;
return entityManagerProvider . get ( arg ) ;
return defaultString ( arg ) ;
return generator ( arg ) . prop ( arg ) . generator ( arg ) . prop ( arg ) . generator ( arg ) . prop ( arg ) . descriptions ( arg ) ;
return generator ( arg ) . prop ( arg ) . descriptions ( arg ) ;
return m_body . <unk> ( arg ) ;
return getKeyValueMap ( arg ) . get ( arg ) == null ;
return <unk> ( arg ) ;
return <unk> ( arg ) ;
return getComponents ( arg ) ;
return getHosts ( arg ) ;
return <unk> ( arg ) ;
return getServices ( arg ) ;
return <unk> ( arg ) . updateClusters ( arg ) ;
return updateComponents ( arg ) ;
return updateServices ( arg ) ;
return null ;
return <unk> ( arg ) ;
return getRoleState ( arg ) == RoleState . STOPPING || getRoleState ( arg ) == RoleState . INACTIVE ;
return this . <unk> ;
return persist ( arg ) ;
return gson . fromJson ( arg ) ;
return defaultString ( arg ) ;
return hostComponentDesiredStateEntity ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return <unk> ;
return hostEntity . <unk> ( arg ) ;
return hostEntity . <unk> ( arg ) ;
return deleted ;
return deleted ;
return resources ;
return resourceProvider . getKeyPropertyIds ( arg ) . get ( arg ) ;
return PropertyHelper . getKeyPropertyIds ( arg ) ;
return PropertyHelper . getKeyPropertyIds ( arg ) ;
return hostStateEntity . getLastHeartbeatTime ( arg ) ;
return hostEntity . <unk> ( arg ) ;
return <unk> == 0 ? Boolean . <unk> : Boolean . <unk> ;
return new JSONArray ( arg ) ;
return new JSONArray ( arg ) ;
return defaultString ( arg ) ;
return <unk> ;
return m_body . getBody ( arg ) ;
return m_body == null ? Collections . < PropertyId , String > emptyMap ( arg ) : getHttpBodyParser ( arg ) . parse ( arg ) ;
return getHttpBodyParser ( arg ) . parse ( arg ) ;
return m_mapChildren . <unk> ( arg ) ;
return m_mapCategoryTemporalInfo . equals ( arg ) && m_mapPropertyTemporalInfo . equals ( arg ) && m_setQueryProperties . equals ( arg ) && m_mapSubResources . equals ( arg ) && m_resource . equals ( arg ) && m_userPredicate == null ? that . m_userPredicate == null : m_userPredicate . equals ( arg ) ;
return m_mapResourceIds . equals ( arg ) && m_query == that . m_query && m_resourceDefinition . equals ( arg ) && m_mapSubResources == null ? that . m_mapSubResources == null : m_mapSubResources . equals ( arg ) ;
return m_mapResourceIds . equals ( arg ) && m_resourceDefinition . equals ( arg ) && m_mapSubResources == null ? that . m_mapSubResources == null : m_mapSubResources . equals ( arg ) && m_mapQuerySubResources == null ? that . m_mapQuerySubResources == null : m_mapQuerySubResources . equals ( arg ) && m_mapCategoryTemporalInfo . equals ( arg ) && m_mapPropertyTemporalInfo . equals ( arg ) && m_setQueryProperties . equals ( arg ) && m_userPredicate == null ? that . m_userPredicate == null : m_userPredicate . equals ( arg ) ;
return m_mapResourceIds . equals ( arg ) && m_resourceDefinition . equals ( arg ) && m_mapSubResources == null ? that . m_mapSubResources == null : m_mapSubResources . equals ( arg ) && m_mapQuerySubResources == null ? that . m_mapQuerySubResources == null : m_mapQuerySubResources . equals ( arg ) && m_mapCategoryTemporalInfo . equals ( arg ) && m_mapPropertyTemporalInfo . equals ( arg ) && m_setQueryProperties . equals ( arg ) && m_userPredicate == null ? that . m_userPredicate == null : m_userPredicate . equals ( arg ) ;
return m_mapResourceIds . equals ( arg ) && m_query == that . m_query && m_resourceDefinition . equals ( arg ) && m_mapSubResources == null ? that . m_mapSubResources == null : m_mapSubResources . equals ( arg ) ;
return m_mapResourceIds . equals ( arg ) && m_query == that . m_query && m_resourceDefinition . equals ( arg ) && m_mapSubResources == null ? that . m_mapSubResources == null : m_mapSubResources . equals ( arg ) ;
return m_mapTemporalInfo == null ? null : m_mapTemporalInfo . get ( arg ) ;
return <unk> ;
return this ;
return this ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return getTestRequestFactory ( arg ) ;
return <unk> ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return getTestResource ( arg ) ;
return <unk> . <unk> ( arg ) ;
return ( arg ) . hashCode ( arg ) ;
return <unk> this . <unk> + , + <unk> this . <unk> + , + <unk> this . <unk> + , + <unk> <unk> ( arg ) + ] N ;
return myState == RoleState . STARTING || myState == RoleState . ACTIVE ;
return getRoleState ( arg ) == RoleState . STARTING || getRoleState ( arg ) == RoleState . ACTIVE ;
return myState == RoleState . STOPPING || myState == RoleState . INACTIVE ;
return myState == RoleState . STOPPING || myState == RoleState . STOPPED ;
return getRoleState ( arg ) == RoleState . STOPPING || getRoleState ( arg ) == RoleState . STOPPED ;
return <unk> ( arg ) == ServiceState . ACTIVE ;
return <unk> . <unk> ( arg ) ;
controller = new ClusterControllerImpl ( arg ) ;
return new ConfigurationCategory ( arg ) ;
return new <unk> < String > ( arg ) ;
<unk> = <unk> ;
return new <unk> < String > ( arg ) ;
return new <unk> < String > ( arg ) ;
return resourceProviderFactory . <unk> ( arg ) ;
return resourceProviderFactory . <unk> ( arg ) ;
return resourceProviders . get ( arg ) ;
return new <unk> < String > ( arg ) ;
return new <unk> < String > ( arg ) ;
return new <unk> ( arg ) ;
return new PredicateBuilderWithPredicate ( arg ) ;
return new <unk> ( arg ) ;
return new PredicateBuilderPredicate ( arg ) ;
return new <unk> ( arg ) ;
return category == null ? name : category + <unk> + name ;
return PropertyHelper . getReadRequest ( arg ) ;
return <unk> ( arg ) == Type . <unk> ? new <unk> ( arg ) : new <unk> ( arg ) ;
return new RoleToNodes ( arg ) ;
throw new AmbariException ( arg ) ;
throw new AmbariException ( arg ) ;
throw new AmbariException ( arg ) ;
throw new AmbariException ( arg ) ;
throw new AmbariException ( arg ) ;
return defaultString ( arg ) ;
return defaultString ( arg ) ;
return <unk> . contains ( arg ) ;
return defaultString ( arg ) ;
return <unk> ;
return pbWithPredicate == null ? null : pbWithPredicate . toPredicate ( arg ) ;
return pbPredicate == null ? null : pbPredicate . toPredicate ( arg ) ;
return this . plugins . get ( arg ) ;
return this . plugins . keySet ( arg ) ;
return PredicateHelper . getPropertyIds ( arg ) ;
return <unk> ;
return previousTokenType == Token . TYPE . <unk> || previousTokenType == Token . TYPE . <unk> ;
return propertyValue != null && compareValueTo ( arg ) < 0 ;
return propertyValue != null && compareValueTo ( arg ) <unk> 0 ;
return propertyValue != null && compareValueTo ( arg ) == 0 ;
return propertyValue != null && compareValueTo ( arg ) > 0 ;
return propertyValue != null && compareValueTo ( arg ) <unk> 0 ;
return hostEntity . <unk> ( arg ) ;
return request <unk> ServiceComponentHostRequest && eq ( arg ) && eq ( arg ) && eq ( arg ) && eq ( arg ) && eq ( arg ) ;
return defaultString ( arg ) ;
return ret . toString ( arg ) ;
return ret . toString ( arg ) ;
return ret . toString ( arg ) ;
return ( arg ) . hashCode ( arg ) ;
return Role . valueOf ( arg ) ;
return Role . valueOf ( arg ) ;
return Role . valueOf ( arg ) ;
return stackVersion . equals ( arg ) ;
return true ;
return true ;
return uriBuilder . toString ( arg ) ;
return resourceProviders . get ( arg ) . getSchema ( arg ) ;
return selected ;
return getHealthyHost ( arg ) ;
return getHealthyHost ( arg ) ;
return serviceComponent . getName ( arg ) ;
return serviceComponent . <unk> ( arg ) ;
return <unk> ;
return stackName + <unk> + stackVersion ;
return gson . fromJson ( arg ) ;
return <unk> . <unk> ( arg ) ;
return ArrayUtils . nullToEmpty ( arg ) ;
return ArrayUtils . nullToEmpty ( arg ) ;
return <unk> <unk> <unk> ;
return commandsToSend . get ( arg ) ;
return <unk> ;
return ( arg ) ;
return this . mountpoint ;
return this . operational_clusters . get ( arg ) . getLatestClusterDefinition ( arg ) ;
return this . getClusterByName ( arg ) . getClusterState ( arg ) ;
return this . getClusterByName ( arg ) . getClusterDefinition ( arg ) ;
return components . get ( arg ) . plugin ;
return components . keySet ( arg ) ;
return ( arg ) ;
return <unk> ( arg ) ;
return m_query ;
return m_query ;
return hostEntity . <unk> ( arg ) ;
return ! ( requestContext != null ? ! requestContext . equals ( arg ) : that . requestContext != null ) ;
return type ;
return type ;
return tag ;
s = serviceFactory . createNew ( arg ) ;
State . checkUpdateConfiguration ( arg ) ;
State . checkUpdateConfiguration ( arg ) ;
uriBuilder . setParameter ( arg ) ;
uriBuilder . setParameter ( arg ) ;
uriBuilder . setParameter ( arg ) ;
uriBuilder . setParameter ( arg ) ;
uriBuilder . setParameter ( arg ) ;
sb . append ( arg ) . append ( arg ) . append ( arg ) ;
<unk> = <unk> . createNew ( arg ) ;
ignoredScHosts . add ( arg ) ;
ignoredScHosts . add ( arg ) ;
ignoredScHosts . add ( arg ) ;
sch = <unk> . createNew ( arg ) ;
searchResults = Clusters . getInstance ( arg ) . getClusterInformationList ( arg ) ;
searchResults = clusters . getClusterInformationList ( arg ) ;
this . selected = selected ;
if ( serverSocket != null ) serverSocket . <unk> ( arg ) ;
service . delete ( arg ) ;
service . delete ( arg ) ;
throw new AmbariException ( arg ) ;
<unk> . <unk> ( arg ) ;
serviceName = HDFS ;
subResource . <unk> ( arg ) ;
resource . <unk> ( arg ) ;
scaner . <unk> ( arg ) ;
short responseId = ( short ) ( heartbeat . <unk> ( arg ) + 1 ) ;
stages = actionDB . getAllStages ( arg ) ;
sendEventToRole ( arg ) ;
sendEventToRole ( arg ) ;
sendEventToRole ( arg ) ;
sendEventToRole ( arg ) ;
<unk> . put ( arg ) ;
<unk> ( arg ) ;
this . stackName = stackName ;
this . stackRevision = stackRevision ;
this . description = description ;
<unk> = true ;
this . getNodeState ( arg ) . <unk> ( arg ) ;
this . getNodeState ( arg ) . setClusterID ( arg ) ;
this . nodeState . <unk> ( arg ) ;
this . nodeState . setClusterID ( arg ) ;
this . role = role . name ( arg ) ;
this . role = role . name ( arg ) ;
this . role = role . name ( arg ) ;
this . role = role ;
cls . getClusterState ( arg ) . <unk> ( arg ) ;
this . tag = <unk> ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
throw new IllegalArgumentException ( arg ) ;
return null ;
getHost ( arg ) ;
return Collections . <unk> ( arg ) ;
throw new InvalidStateTransitionException ( arg ) ;
throw new InvalidStateTransitionException ( arg ) ;
throw new <unk> ( arg ) ;
LOG . error ( arg ) ;
return null ;
throw e ;
trackAction = controller . updateClusters ( arg ) ;
trackAction = controller . updateClusters ( arg ) ;
trackAction = controller . updateClusters ( arg ) ;
trackAction = controller . updateClusters ( arg ) ;
trackAction = controller . updateClusters ( arg ) ;
trackAction = ComponentResourceProviderTest . updateComponents ( arg ) ;
trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
trackAction = ServiceResourceProviderTest . updateServices ( arg ) ;
this . type = type ;
this . type = type ;
<unk> ( arg ) ;
<unk> ( arg ) ;
ensureHostUpdatesReceived ( arg ) ;
ensureHostUpdatesReceived ( arg ) ;
workflowUpdateNumCompletedPS . <unk> ( arg ) ;
workflowUpdateNumCompletedPS . <unk> ( arg ) ;
