out . hflush ( arg ) ;
( ( DistributedFileSystem ) fs ) . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
volume . shutdown ( arg ) ;
this . conf . <unk> ( arg ) ;
( ( Log4JLogger ) LogFactory . getLog ( arg ) ) . getLogger ( arg ) . setLevel ( arg ) ;
( ( Log4JLogger ) LogFactory . getLog ( arg ) ) . getLogger ( arg ) . setLevel ( arg ) ;
( ( Log4JLogger ) LogFactory . getLog ( arg ) ) . getLogger ( arg ) . setLevel ( arg ) ;
( ( Log4JLogger ) Server . AUDITLOG ) . getLogger ( arg ) . setLevel ( arg ) ;
++ pendingApplications ;
task . inProgressAttempts . add ( arg ) ;
<unk> activeApplications ;
EventHandler < Event > <unk> = ( EventHandler < Event > ) <unk> . get ( arg ) ;
@ SuppressWarnings ( arg ) FSCounter c = ( FSCounter ) ( ( Counter ) counter ) . getUnderlyingCounter ( arg ) ;
TaskAttemptContext taskContext = new TaskAttemptContextImpl ( arg ) ;
final Map < ? , ? > m = ( Map < ? , ? > ) array [ i ] ;
@ SuppressWarnings ( arg ) final RoundRobinVolumesPolicy < FsVolumeSpi > policy = ( RoundRobinVolumesPolicy < FsVolumeSpi > ) ReflectionUtils . newInstance ( arg ) ;
final boolean b = np . rename ( arg ) ;
<unk> amInfo = MRBuilderUtils . newAMInfo ( arg ) ;
<unk> = mock ( arg ) ;
rmClient = createRMClient ( arg ) ;
rmClient = createRMClient ( arg ) ;
final <unk> <unk> = new <unk> ( arg ) ;
ApplicationAttemptId applicationAttemptId = container . getId ( arg ) . getApplicationAttemptId ( arg ) ;
ApplicationAttemptId applicationAttemptId = container . getId ( arg ) . getApplicationAttemptId ( arg ) ;
ApplicationAttemptId applicationAttemptId = containerId . getApplicationAttemptId ( arg ) ;
ApplicationAttemptId applicationAttemptId = containerId . getApplicationAttemptId ( arg ) ;
ApplicationAttemptId reservedApplication = <unk> . getContainer ( arg ) . getId ( arg ) . getApplicationAttemptId ( arg ) ;
ApplicationAttemptId appAttemptID = <unk> ( arg ) ;
ApplicationId appId = getApplicationAttemptId ( arg ) . getApplicationId ( arg ) ;
ApplicationId <unk> = <unk> . getApplicationAttemptId ( arg ) . getApplicationId ( arg ) ;
ApplicationId applicationId = <unk> . getContainerId ( arg ) . getApplicationAttemptId ( arg ) . getApplicationId ( arg ) ;
ApplicationId applicationId = cs . getContainerId ( arg ) . getApplicationAttemptId ( arg ) . getApplicationId ( arg ) ;
<unk> applicationReport = <unk> ( arg ) ;
YarnApplicationState state = YarnApplicationState . RUNNING ;
<unk> . valueOf ( arg ) ;
<unk> = mock ( arg ) ;
ClientTokenIdentifier identifier = new ClientTokenIdentifier ( arg ) ;
ClientTokenIdentifier identifier = new ClientTokenIdentifier ( arg ) ;
new <unk> ( arg ) ;
BlocksMapUpdateInfo <unk> = new BlocksMapUpdateInfo ( arg ) ;
CapacitySchedulerQueueInfoList queuesInfo = new CapacitySchedulerQueueInfoList ( arg ) ;
ArrayList < <unk> > <unk> = ( csqinfo . qinfo == null ) ? csqinfo . <unk> . getQueues ( arg ) . getQueueInfoList ( arg ) : csqinfo . qinfo . getQueues ( arg ) . getQueueInfoList ( arg ) ;
final List < DatanodeDescriptor > decommissioning = dm . getDecommissioningNodes ( arg ) ;
final List < DatanodeDescriptor > decommissioning = dm . getDecommissioningNodes ( arg ) ;
final List < DatanodeDescriptor > <unk> = dm . getDecommissioningNodes ( arg ) ;
final List < DatanodeDescriptor > results = getBlockManager ( arg ) . getDatanodeManager ( arg ) . getDatanodeListForReport ( arg ) ;
final List < DatanodeDescriptor > results = getBlockManager ( arg ) . getDatanodeManager ( arg ) . getDatanodeListForReport ( arg ) ;
ScanInfoPerBlockPool [ ] dirReports = new ScanInfoPerBlockPool [ volumes . size ( arg ) ] ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertFalse ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotNull ( arg ) ;
assertNotSame ( arg ) ;
Assert . assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
assertTrue ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
fail ( arg ) ;
this . dispatcher = new AsyncDispatcher ( arg ) ;
Set < InetSocketAddress > <unk> = <unk> . <unk> ( arg ) ;
BPOfferService bpos = new BPOfferService ( arg ) ;
BackupImage <unk> = ( BackupImage ) backup . getFSImage ( arg ) ;
Block b = DataNodeTestUtils . getFSDataset ( arg ) . getStoredBlock ( arg ) ;
BlockCollection bc = blocksMap . getBlockCollection ( arg ) ;
BlockInfo [ ] <unk> = bc . getBlocks ( arg ) ;
BlockInfo <unk> = bc . getBlocks ( arg ) [ <unk> ] ;
BlockInfo info = getBlockManager ( arg ) . addBlockCollection ( arg ) ;
BlockInfo <unk> = bc . <unk> ( arg ) ;
UnderReplicatedBlocks . BlockIterator blkIterator = blockManager . getCorruptReplicaBlockIterator ( arg ) ;
UnderReplicatedBlocks . BlockIterator blkIterator = blockManager . getCorruptReplicaBlockIterator ( arg ) ;
<unk> <unk> = dn . data . <unk> ( arg ) ;
<unk> [ ] locations = <unk> . getFileBlockLocations ( arg ) ;
BlockReaderFactory . newBlockReader ( arg ) ;
<unk> reader = BlockReaderFactory . newBlockReader ( arg ) ;
RemoteBlockReader reader = ( RemoteBlockReader ) spy ( arg ) ;
RemoteBlockReader reader = ( RemoteBlockReader ) spy ( arg ) ;
RemoteBlockReader reader = ( RemoteBlockReader ) spy ( arg ) ;
StorageReceivedDeletedBlocksProto . Builder builder = StorageReceivedDeletedBlocksProto . newBuilder ( arg ) . setStorageID ( arg ) ;
BlockReceivedAndDeletedRequestProto req = BlockReceivedAndDeletedRequestProto . newBuilder ( arg ) . setRegistration ( arg ) . setBlockPoolId ( arg ) . addBlocks ( arg ) . build ( arg ) ;
StorageBlockReportProto . Builder reportBuilder = StorageBlockReportProto . newBuilder ( arg ) . setStorageID ( arg ) ;
BlockReportRequestProto req = BlockReportRequestProto . newBuilder ( arg ) . setRegistration ( arg ) . setBlockPoolId ( arg ) . <unk> ( arg ) . build ( arg ) ;
ReplicaOutputStreams out = <unk> . <unk> ( arg ) ;
ReplicaOutputStreams streams = null ;
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookKeeperJournalManager bkjm = new BookKeeperJournalManager ( conf , URI . create ( bookkeeper:
BookieServer bookieToFail = newBookie ( arg ) ;
BookieServer bookieToFail = newBookie ( arg ) ;
BookieServer bookieToFail = bkutil . newBookie ( arg ) ;
BookieServer bookieToFail = bkutil . newBookie ( arg ) ;
BookieServer bookieToFail = bkutil . newBookie ( arg ) ;
BookieServer bookieToFail = bkutil . newBookie ( arg ) ;
reader = new <unk> ( arg ) ;
ByteBuffer <unk> = ByteBuffer . allocateDirect ( arg ) ;
ByteBuffer <unk> = ByteBuffer . allocateDirect ( arg ) ;
<unk> <unk> = new HftpFileSystem . <unk> ( arg ) ;
Call call = calls . remove ( arg ) ;
Call call = calls . get ( arg ) ;
Call call = calls . get ( arg ) ;
<unk> = <unk> . write ( arg ) ;
<unk> <unk> = <unk> . rollEditLog ( arg ) ;
ChecksumTypeProto type = ChecksumTypeProto . valueOf ( arg ) ;
ChecksumType type = ChecksumType . valueOf ( arg ) ;
ChecksumTypeProto type = HdfsProtoUtil . <unk> ( arg ) ;
Class < ? > clazz = <unk> ( arg ) ;
<unk> . getClass ( arg ) ;
Class < ? > clazz = Class . forName ( arg ) ;
Class < ? > clazz = Class . forName ( arg ) ;
Class < ? > clazz = Class . forName ( arg ) ;
Class < ? > clazz = map . get ( arg ) ;
Class < ? > <unk> = Thread . <unk> ( arg ) . <unk> ( arg ) . loadClass ( arg ) ;
<unk> <unk> = DFSUtil . createClientDatanodeProtocolProxy ( arg ) ;
ClientNamenodeProtocolTranslatorPB translator = ( ClientNamenodeProtocolTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
org . apache . hadoop . hdfs . protocol . ClientProtocol client = getDFSClient ( arg ) ;
ClientProtocol namenode = DFSUtil . createNamenode ( arg ) ;
ClientProtocol namenode = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
ClientProtocol nn = <unk> ( arg ) ;
final ClientRMProtocol applicationsManager = Mockito . mock ( arg ) ;
final ClientRMProtocol applicationsManager = Mockito . mock ( arg ) ;
final ClientRMProtocol <unk> = mock ( arg ) ;
<unk> <unk> = null ;
cluster = new <unk> ( arg ) ;
rmNode . <unk> ( arg ) ;
rmNode . <unk> ( arg ) ;
<unk> <unk> = item . getStatus ( arg ) ;
Collection < Block > blocks = namesystem . getBlockManager ( arg ) . excessReplicateMap . get ( arg ) ;
LightWeightLinkedSet < Block > <unk> = excessReplicateMap . get ( arg ) ;
LightWeightLinkedSet < Block > excessBlocks = excessReplicateMap . get ( arg ) ;
LightWeightLinkedSet < Block > excessBlocks = excessReplicateMap . get ( arg ) ;
LightWeightHashSet < Block > set = node2blocks . get ( arg ) ;
Collection < BlockToMarkCorrupt > <unk> = new <unk> < BlockToMarkCorrupt > ( arg ) ;
Collection < FSLeafQueue > queues = scheduler . getQueueManager ( arg ) . getLeafQueues ( arg ) ;
Collection < FSLeafQueue > queues = scheduler . getQueueManager ( arg ) . getLeafQueues ( arg ) ;
Collection < FSLeafQueue > queues = scheduler . getQueueManager ( arg ) . getLeafQueues ( arg ) ;
Collection < FSLeafQueue > queues = scheduler . getQueueManager ( arg ) . getLeafQueues ( arg ) ;
Collection < String > <unk> = <unk> . get ( arg ) ;
Collection < String > dirNames = conf . getTrimmedStringCollection ( arg ) ;
Collection < String > dirNames = conf . getTrimmedStringCollection ( arg ) ;
Collection < String > <unk> = new ArrayList < String > ( arg ) ;
Collection < String > <unk> = <unk> . get ( arg ) ;
Collection < Token < ? >> tokens = <unk> . <unk> ( arg ) ;
List < URI > <unk> = FSImage . <unk> ( arg ) ;
List < URI > <unk> = FSNamesystem . getNamespaceEditsDirs ( arg ) ;
List < URI > editsToFormat = FSNamesystem . getNamespaceEditsDirs ( arg ) ;
Collection < URI > editsToFormat = FSNamesystem . getNamespaceEditsDirs ( arg ) ;
Map < String , Map < String , InetSocketAddress >> namenodes = DFSUtil . getNNServiceRpcAddresses ( arg ) ;
List < URI > <unk> = FSNamesystem . getNamespaceEditsDirs ( arg ) ;
List < URI > <unk> = new ArrayList < URI > ( arg ) ;
<unk> < DatanodeInfo > <unk> = <unk> ? new DFSUtil . <unk> ( arg ) : DFSUtil . <unk> ;
return CompressionEmulationUtil . <unk> ( arg ) ;
new ConfigBuilder ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . save ( arg ) ;
Configuration <unk> = <unk> ( arg ) ;
Configuration conf = HttpFSServerWebApp . get ( arg ) . get ( arg ) . getFileSystemConfiguration ( arg ) ;
Configuration conf = HttpFSServerWebApp . get ( arg ) . get ( arg ) . getFileSystemConfiguration ( arg ) ;
Configuration conf = ViewFileSystemTestSetup . createConfig ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
Configuration conf = createConfiguration ( arg ) ;
conf = new <unk> ( arg ) ;
Configuration <unk> = new YarnConfiguration ( arg ) ;
Configuration job = new JobConf ( arg ) ;
TestConnectionConfigurator <unk> = new TestConnectionConfigurator ( arg ) ;
<unk> cId = attemptInfo . getContainerId ( arg ) ;
proxy = getCMProxy ( arg ) ;
proxy = getCMProxy ( arg ) ;
containerManager = createContainerManager ( arg ) ;
RMContainerTokenSecretManager containerTokenSecretManager = new RMContainerTokenSecretManager ( arg ) ;
ContentSummary c = s . isDirectory ( arg ) ? getContentSummary ( arg ) : new ContentSummary ( arg ) ;
ContentSummary c = s . isDirectory ( arg ) ? getContentSummary ( arg ) : new ContentSummary ( arg ) ;
NMContainerTokenSecretManager containerTokenSecretManager = null ;
Counter c = group . findCounter ( arg ) ;
Counter c = group . findCounter ( arg ) ;
Counter <unk> = counters . findCounter ( arg ) ;
org . apache . hadoop . mapred . Counters . Counter <unk> = counters . findCounter ( arg ) ;
Counter <unk> = counters . findCounter ( arg ) ;
Counter <unk> = counters . findCounter ( arg ) ;
CounterGroup group = ( counters != null ) ? counters . getGroup ( arg ) : null ;
CounterGroup group = entry . getValue ( arg ) . getCounters ( arg ) . getGroup ( arg ) ;
CounterGroup group = result . <unk> ( arg ) ;
Counters counters = new Counters ( arg ) ;
Counters counters = EMPTY_COUNTERS ;
HdfsDataInputStream <unk> = ( HdfsDataInputStream ) in ;
HdfsDataInputStream <unk> = ( HdfsDataInputStream ) <unk> ;
HdfsDataInputStream dis = ( HdfsDataInputStream ) ( ( DistributedFileSystem ) <unk> ) . open ( arg ) ;
DFSClient dfsclient = new DFSClient ( arg ) ;
DFSClient dfsclient = DFSClientAdapter . getDFSClient ( arg ) ;
HdfsDataInputStream <unk> = dis ;
HdfsDataInputStream in = ( HdfsDataInputStream ) ( ( DistributedFileSystem ) fs ) . open ( arg ) ;
HdfsDataInputStream in = null ;
HdfsDataInputStream stm = ( HdfsDataInputStream ) fs . open ( arg ) ;
DFSTestUtil files = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil files = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil <unk> = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
DFSTestUtil <unk> = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . <unk> ( arg ) . build ( arg ) ;
dtRenewer . addRenewAction ( arg ) ;
DataChecksum . Type type = HdfsProtoUtil . <unk> ( arg ) ;
in = fs . open ( arg ) ;
DataNodeTestUtils . setHeartbeatsDisabledForTests ( arg ) ;
DataNodeTestUtils . setHeartbeatsDisabledForTests ( arg ) ;
DataNodeTestUtils . <unk> ( arg ) ;
DataNodeTestUtils . triggerDeletionReport ( arg ) ;
DataNodeTestUtils . triggerDeletionReport ( arg ) ;
DataNodeTestUtils . <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> <unk> = <unk> ( arg ) ;
DataStorage storage = new DataStorage ( arg ) ;
Sender . <unk> ( arg ) ;
DataXceiverServer <unk> = ( DataXceiverServer ) dn . <unk> . <unk> ( arg ) ;
DatanodeCommand [ ] cmd = dnp . sendHeartbeat ( arg ) . getCommands ( arg ) ;
DatanodeCommand [ ] cmds = null ;
DatanodeCommand [ ] cmds = NameNodeAdapter . sendHeartBeat ( arg ) . getCommands ( arg ) ;
DatanodeCommand [ ] cmds = nameNodeProto . sendHeartbeat ( arg ) ;
DatanodeCommand [ ] cmds = nameNodeProto . sendHeartbeat ( arg ) ;
DatanodeCommand [ ] cmds = nameNodeProto . sendHeartbeat ( arg ) . getCommands ( arg ) ;
DatanodeCommand [ ] cmds = nameNodeProto . sendHeartbeat ( arg ) . getCommands ( arg ) ;
DatanodeCommand [ ] cmds = NameNodeAdapter . sendHeartBeat ( arg ) ;
DatanodeCommand cmd = null ;
DatanodeCommand cmd = null ;
DatanodeCommand cmd = upgradeManager . <unk> ( arg ) ;
DatanodeCommand <unk> = cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
final DatanodeDescriptor [ ] nodes = bm . getDatanodeManager ( arg ) . <unk> ( arg ) . <unk> ( arg ) ;
final DatanodeDescriptor client = blockManager . getDatanodeManager ( arg ) . <unk> ( arg ) ;
DatanodeDescriptor minSpaceNode = null ;
DatanodeDescriptor dd = DFSTestUtil . getLocalDatanodeDescriptor ( arg ) ;
DatanodeDescriptor dd = DFSTestUtil . getLocalDatanodeDescriptor ( arg ) ;
DatanodeDescriptor dd = DFSTestUtil . getLocalDatanodeDescriptor ( arg ) ;
final DatanodeDescriptor node = blockManager . getDatanodeManager ( arg ) . getDatanode ( arg ) ;
final DatanodeDescriptor node = blockManager . getDatanodeManager ( arg ) . getDatanode ( arg ) ;
DatanodeDescriptor node = getDatanodeManager ( arg ) . getDatanode ( arg ) ;
DatanodeDescriptor <unk> = getBlockManager ( arg ) . getDatanodeManager ( arg ) . getDatanode ( arg ) ;
DatanodeDescriptor <unk> = <unk> . <unk> ( arg ) ;
DatanodeDescriptor nodeNotInMap = DFSTestUtil . getDatanodeDescriptor ( arg ) ;
DatanodeDescriptor nodeNotInMap = DFSTestUtil . getDatanodeDescriptor ( arg ) ;
DatanodeDescriptor nodeNotInMap = DFSTestUtil . getDatanodeDescriptor ( arg ) ;
DatanodeDescriptor <unk> = datanodeMap . get ( arg ) ;
DatanodeDescriptor <unk> = DFSTestUtil . getDatanodeDescriptor ( arg ) ;
DatanodeDescriptor targets [ ] = blockplacement . chooseTarget ( arg ) ;
DatanodeDescriptor <unk> = DFSTestUtil . getDatanodeDescriptor ( arg ) ;
DatanodeID dn = DFSTestUtil . getLocalDatanodeID ( arg ) ;
DatanodeID dnId = DFSTestUtil . getLocalDatanodeID ( arg ) ;
DatanodeID fakeDnId = DFSTestUtil . getLocalDatanodeID ( arg ) ;
DatanodeID fakeDnId = DFSTestUtil . getLocalDatanodeID ( arg ) ;
DatanodeID fakeDnId = DFSTestUtil . getLocalDatanodeID ( arg ) ;
DatanodeInfo d = DFSTestUtil . getLocalDatanodeInfo ( arg ) ;
DatanodeInfo <unk> = DFSTestUtil . getLocalDatanodeInfo ( arg ) ;
DatanodeProtocol <unk> = dn . getActiveNamenodeForBP ( arg ) ;
DatanodeProtocol dnp = cluster . getNameNodeRpc ( arg ) ;
DatanodeProtocolClientSideTranslatorPB fakeDNProt = mock ( arg ) ;
DatanodeProtocolClientSideTranslatorPB fakeDNProt = mock ( arg ) ;
DatanodeProtocolClientSideTranslatorPB mock = Mockito . mock ( arg ) ;
DatanodeProtocol namenode = dn . getActiveNamenodeForBP ( arg ) ;
DatanodeProtocol namenode = dn . getActiveNamenodeForBP ( arg ) ;
DatanodeProtocolClientSideTranslatorPB nn = bpos . bpNamenode ;
BPOfferService bpos = <unk> ( arg ) ;
DatanodeProtocolClientSideTranslatorPB <unk> = DataNodeTestUtils . spyOnBposToNN ( arg ) ;
DatanodeProtocolClientSideTranslatorPB spy = DataNodeTestUtils . spyOnBposToNN ( arg ) ;
DatanodeProtocolClientSideTranslatorPB spy = DataNodeTestUtils . spyOnBposToNN ( arg ) ;
DatanodeRegistration <unk> = <unk> . <unk> ( arg ) ;
GenericTestUtils . DelayAnswer delayer = new GenericTestUtils . DelayAnswer ( arg ) ;
GenericTestUtils . DelayAnswer delayer = new GenericTestUtils . DelayAnswer ( arg ) ;
fs . <unk> . renew ( arg ) ;
<unk> dtSecretManager = NameNodeAdapter . getDtSecretManager ( arg ) ;
<unk> < T > deserializer = factory . getDeserializer ( arg ) ;
<unk> < T > deserializer = factory . getDeserializer ( arg ) ;
rmDispatcher = new <unk> ( arg ) ;
DistCpV1 . copy ( arg ) ;
DistributedFileSystem dfs = cluster . getFileSystem ( arg ) ;
FileSystem fs = cluster . getFileSystem ( arg ) ;
RPC . stopProxy ( arg ) ;
EditLogInputStream <unk> = <unk> ( arg ) ;
<unk> . startLogSegment ( arg ) ;
EditLogValidation val = EditLogFileInputStream . validateEditLog ( arg ) ;
EditLogValidation validation = EditLogFileInputStream . validateEditLog ( arg ) ;
EditLogValidation validation = EditLogFileInputStream . validateEditLog ( arg ) ;
Entry < SocketAddress , SocketAndStreams > entry = iter . next ( arg ) ;
Enumeration < InetAddress > e = <unk> . <unk> ( arg ) ;
Enumeration < ? > names = <unk> . <unk> ( arg ) ;
ErrorReportRequestProto req = ErrorReportRequestProto . newBuilder ( arg ) . <unk> ( arg ) . <unk> ( arg ) . setRegistration ( arg ) . build ( arg ) ;
Mockito . reset ( arg ) ;
Mockito . reset ( arg ) ;
Mockito . reset ( arg ) ;
Mockito . reset ( arg ) ;
Mockito . doThrow ( arg ) . when ( arg ) . afterSecondaryCallsRollEditLog ( arg ) ;
Mockito . doThrow ( arg ) . when ( arg ) . afterSecondaryCallsRollEditLog ( arg ) ;
Mockito . doThrow ( arg ) . when ( arg ) . afterSecondaryCallsRollEditLog ( arg ) ;
@ SuppressWarnings ( arg ) EventHandler eventHandler = dispatcher . getEventHandler ( arg ) ;
ExportedBlockKeys keys = bpRegistration . <unk> ( arg ) ;
final String storageID ;
org . apache . hadoop . hdfs . protocolR23Compatible . ExtendedBlockWritable block = ( org . apache . hadoop . hdfs . protocolR23Compatible . ExtendedBlockWritable ) args [ 0 ] ;
HdfsConstants . SafeModeAction action ;
FSCounter c = ( FSCounter ) ( ( Counter ) counter ) . getUnderlyingCounter ( arg ) ;
dataOut = fs . create ( arg ) ;
HdfsDataOutputStream out = create ( arg ) ;
FSDataOutputStream out = fc . create ( arg ) ;
FSDataOutputStream out = fc . create ( arg ) ;
HdfsDataOutputStream stm = create ( arg ) ;
ReplicaInputStreams <unk> = null ;
DataNode dn = <unk> . get ( arg ) ;
FsDatasetSpi . Factory < ? > f = FsDatasetSpi . Factory . getFactory ( arg ) ;
FsDatasetSpi . Factory < ? > f = FsDatasetSpi . Factory . getFactory ( arg ) ;
FsDatasetSpi . Factory < ? > s = FsDatasetSpi . Factory . getFactory ( arg ) ;
FsDatasetSpi . Factory < ? > s = FsDatasetSpi . Factory . getFactory ( arg ) ;
FSDatasetInterface . Factory < ? > f = FSDatasetInterface . Factory . getFactory ( arg ) ;
FSDatasetInterface . Factory < ? > s = FSDatasetInterface . Factory . getFactory ( arg ) ;
FsDatasetSpi < ? > dataset = DataNodeTestUtils . getFSDataset ( arg ) ;
FsDatasetSpi < ? > dataset = DataNodeTestUtils . getFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
final SimulatedFSDataset fsdataset = getSimulatedFSDataset ( arg ) ;
JournalAndStream jas = editLog . getJournals ( arg ) . get ( arg ) ;
JournalAndStream jas = editLog . getJournals ( arg ) . get ( arg ) ;
FSEditLog editlog = getFSEditLog ( arg ) ;
FSEditLog editlog = getFSEditLog ( arg ) ;
FSEditLog editlog = getFSEditLog ( arg ) ;
FSEditLogOp op = <unk> . get ( arg ) ;
FSEditLogOp op = <unk> . get ( arg ) . get ( arg ) ;
<unk> ( arg ) ;
LeaseManager . LOG . error ( arg ) ;
BlockManager . LOG . info ( arg ) ;
LOG . warn ( arg ) ;
LOG . warn ( arg ) ;
LOG . warn ( arg ) ;
LOG . warn ( arg ) ;
FSNamesystem fsn = FSNamesystem . loadFromDisk ( arg ) ;
FSNamesystem fsn = FSNamesystem . loadFromDisk ( arg ) ;
FSNamesystem fsn = FSNamesystem . loadFromDisk ( arg ) ;
FSNamesystem fsn = FSNamesystem . loadFromDisk ( arg ) ;
FSNamesystem fsn = FSNamesystem . loadFromDisk ( arg ) ;
FSLeafQueue queue = getLeafQueue ( arg ) ;
FSLeafQueue queue = queueMgr . getLeafQueue ( arg ) ;
FSSchedulerNode node = nodes . get ( arg ) ;
FSVolume fsv = volumeList . get ( arg ) ;
FSVolume fsv = ( FSVolume ) volumeList . get ( arg ) ;
final FSVolume v ;
final FSVolume v = ( FSVolume ) dataSet . volumeMap . get ( arg ) . getVolume ( arg ) ;
FSVolume v = ( FSVolume ) replicaInfo . getVolume ( arg ) ;
FSVolume v = ( FSVolume ) replicaInfo . getVolume ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
doFailover ( arg ) ;
final File blockfile = DataNodeTestUtils . getBlockFile ( arg ) ;
File blockfile = getFile ( arg ) ;
File <unk> = volume . getFinalizedDir ( arg ) ;
File contents [ ] = listFiles ( arg ) ;
File dir = new File ( arg ) ;
File <unk> = DatanodeUtil . <unk> ( arg ) ;
File <unk> = NNStorage . getStorageFile ( arg ) ;
StorageDirectory sd = <unk> . <unk> ( arg ) . <unk> ( arg ) . next ( arg ) ;
StorageDirectory sd = ( StorageDirectory ) args [ 0 ] ;
final File f = DataNodeTestUtils . getBlockFile ( arg ) ;
File finalizedDir = volumes . get ( arg ) . getFinalizedDir ( arg ) ;
File finalizedDir = volumes . get ( arg ) . getFinalizedDir ( arg ) ;
File finalizedDir = volumes . get ( arg ) . getFinalizedDir ( arg ) ;
File <unk> = NNStorage . getStorageFile ( arg ) ;
File metaFile = DatanodeUtil . getMetaFile ( arg ) ;
File metaFile = DatanodeUtil . getMetaFile ( arg ) ;
final File metaFile = DatanodeUtil . getMetaFile ( arg ) ;
final File metafile = DatanodeUtil . <unk> ( arg ) ;
File metafile = DatanodeUtil . getMetaFile ( arg ) ;
final File <unk> = new File ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File storageDir = cluster . getInstanceStorageDir ( arg ) ;
File <unk> = DatanodeUtil . createTmpFile ( arg ) ;
EditLogFileInputStream in ;
InputStreamReader fReader = null ;
InputStreamReader fReader = null ;
InputStreamReader fReader = null ;
InputStreamReader fReader = null ;
InputStreamReader fReader = null ;
FileStatus [ ] contents = listStatus ( arg ) ;
FileStatus [ ] listing = listStatus ( arg ) ;
FileStatus [ ] paths = fc . util ( arg ) . listStatus ( arg ) ;
FileStatus [ ] paths = fc1 . util ( arg ) . listStatus ( arg ) ;
paths = fs . listStatus ( arg ) ;
FileStatus [ ] stats = fc . util ( arg ) . listStatus ( arg ) ;
FileStatus <unk> [ ] ;
FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
FileSystem fs = FileSystem . get ( arg ) ;
DistributedFileSystem fs = null ;
<unk> ( arg ) ;
FileUtil . fullyDeleteContents ( arg ) ;
FileUtil . fullyDeleteContents ( arg ) ;
nameNode . stop ( arg ) ;
KillApplicationRequest req = Records . newRecord ( arg ) ;
KillApplicationRequest req = Records . newRecord ( arg ) ;
KillApplicationRequest request = recordFactory . newRecordInstance ( arg ) ;
KillApplicationRequest request = recordFactory . newRecordInstance ( arg ) ;
EditLogFile <unk> = lg . logs . get ( arg ) ;
EditLogFile <unk> = <unk> . <unk> ( arg ) ;
EditLogFile <unk> = lg . logs . get ( arg ) ;
EditLogFile log = FSImageTestUtil . findLatestEditsLog ( arg ) ;
EditLogFile log = FSImageTestUtil . findLatestEditsLog ( arg ) ;
EditLogFile log = logs . get ( arg ) ;
FSImageFile latestImage = inspector . getLatestImage ( arg ) ;
FSImageFile latestImage = inspector . getLatestImage ( arg ) ;
FSImageFile latestImage = inspector . getLatestImage ( arg ) ;
FSImageFile <unk> = <unk> . <unk> ;
FSImageFile <unk> = getLatestImage ( arg ) ;
<unk> . LOG . warn ( arg ) ;
FSDatasetInterface . Factory < ? > f = FSDatasetInterface . Factory . getFactory ( arg ) ;
FSDatasetInterface . Factory < ? > s = FSDatasetInterface . Factory . getFactory ( arg ) ;
FSDatasetInterface < ? > dataset = DataNodeTestUtils . getFSDataset ( arg ) ;
FsPermission fsPermission = new FsPermission ( arg ) ;
FsPermission fsPermission = new FsPermission ( arg ) ;
FsPermission fsPermission = new FsPermission ( arg ) ;
permission = FsPermission . <unk> ( arg ) ;
<unk> shell = <unk> ( arg ) ;
exitCode = <unk> . <unk> ( arg ) ;
stats = <unk> . <unk> ( arg ) ;
checkException ( arg ) ;
checkException ( arg ) ;
GetNewApplicationResponse resp = client . getNewApplication ( arg ) ;
GetNewApplicationResponse resp = client . getNewApplication ( arg ) ;
GetNewApplicationResponse <unk> = super . getNewApplication ( arg ) ;
<unk> resp = client . <unk> ( arg ) ;
GetUserMappingsProtocolPBClientImpl translator = ( GetUserMappingsProtocolPBClientImpl ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
GetUserMappingsProtocolClientSideTranslatorPB translator = ( GetUserMappingsProtocolClientSideTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
GetUserMappingsProtocolClientSideTranslatorPB translator = ( GetUserMappingsProtocolClientSideTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
<unk> policy = <unk> ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = resolveTarget ( arg ) . getProxy ( arg ) ;
HAServiceProtocol proto = getProtocol ( arg ) ;
HAServiceProtocol proto = getProtocol ( arg ) ;
HAServiceProtocol proto = getProtocol ( arg ) ;
HAServiceProtocol proto = getProtocol ( arg ) ;
getNameNode ( arg ) . getRpcServer ( arg ) . transitionToActive ( arg ) ;
getNameNode ( arg ) . getRpcServer ( arg ) . transitionToStandby ( arg ) ;
HAServiceStatus status = null ;
HAServiceStatus toSvcStatus ;
RequestProto rpcRequest = <unk> ( arg ) ;
RequestProto rpcRequest = request . message ;
HdfsServerConstants . <unk> state = r . getState ( arg ) ;
HdfsFileStatus fStatus = nn . getFileInfo ( arg ) ;
HeartbeatRequestProto req = HeartbeatRequestProto . newBuilder ( arg ) . setRegistration ( arg ) . setCapacity ( arg ) . setDfsUsed ( arg ) . setRemaining ( arg ) . setBlockPoolUsed ( arg ) . setXmitsInProgress ( arg ) . setXceiverCount ( arg ) . setFailedVolumes ( arg ) . build ( arg ) ;
HeartbeatRequestProto req = HeartbeatRequestProto . newBuilder ( arg ) . setRegistration ( arg ) . setCapacity ( arg ) . setDfsUsed ( arg ) . setRemaining ( arg ) . setBlockPoolUsed ( arg ) . setXmitsInProgress ( arg ) . setXceiverCount ( arg ) . setFailedVolumes ( arg ) . build ( arg ) ;
HttpServer http = createTestServer ( arg ) ;
HttpServer http = createTestServer ( arg ) ;
HttpServer server = createAndStartTestServer ( arg ) ;
HttpServer server = createAndStartTestServer ( arg ) ;
HttpServer server = createTestServer ( arg ) ;
HttpServer server = createTestServer ( arg ) ;
HttpURLConnection connection = openConnection ( arg ) ;
HttpURLConnection connection = openConnection ( arg ) ;
HttpURLConnection connection = ( HttpURLConnection ) url . openConnection ( arg ) ;
final INode [ ] inodes = root . getExistingPathINodes ( arg ) . getINodes ( arg ) ;
final INode [ ] inodes = root . getExistingPathINodes ( arg ) . getINodes ( arg ) ;
INodeFile fileINode = blocksMap . getINode ( arg ) ;
INodeFile fileINode = blocksMap . getINode ( arg ) ;
INodeFile fileINode = blocksMap . getINode ( arg ) ;
INode inode = ( INodeFile ) blockManager . getBlockCollection ( arg ) ;
INode inode = ( INodeFile ) blockManager . getINode ( arg ) ;
INode inode = dir . <unk> ( arg ) ;
final INodeFileUnderConstruction cons ;
final INodeDirectory <unk> = <unk> . <unk> ( arg ) ;
BlockCollection fileINode = block . getINode ( arg ) ;
BlockCollection fileINode = blocksMap . getINode ( arg ) ;
BlockCollection fileINode = blocksMap . getINode ( arg ) ;
BlockCollection fileINode = blocksMap . getINode ( arg ) ;
BlockCollection fileINode = blocksMap . getINode ( arg ) ;
INodeFile iFile = ( INodeFile ) storedBlock . getBlockCollection ( arg ) ;
INodeFile iFile = ( INodeFile ) storedBlock . getINode ( arg ) ;
INodeFile inode = ( INodeFile ) blockManager . blocksMap . getBlockCollection ( arg ) ;
INodeFile inode = ( INodeFile ) blockManager . blocksMap . getINode ( arg ) ;
INode inode = dir . getINode ( arg ) ;
final INodeFile <unk> = getINodeFile ( arg ) ;
final INodeFile ssInode = getINodeFile ( arg ) ;
final INodeFile ssInode = getINodeFile ( arg ) ;
RPC . stopProxy ( arg ) ;
RPC . stopProxy ( arg ) ;
RPC . stopProxy ( arg ) ;
result . <unk> ( arg ) ;
int written = fc . write ( arg ) ;
<unk> = <unk> . <unk> . <unk> ( arg ) ;
final <unk> info = <unk> . <unk> ( arg ) ;
InetAddress <unk> = SecurityUtil . getByName ( arg ) ;
InetSocketAddress addr = NetUtils . createSocketAddr ( arg ) ;
InetSocketAddress addr = <unk> . datanode . getXferAddress ( arg ) ;
InetSocketAddress address = connection . <unk> ( arg ) ;
InetSocketAddress <unk> = NetUtils . createSocketAddrForHost ( arg ) ;
InetSocketAddress <unk> = NetUtils . createSocketAddr ( arg ) ;
InetSocketAddress <unk> = dn . getXferAddress ( arg ) ;
InetSocketAddress <unk> = conf . getSocketAddr ( arg ) ;
InetSocketAddress rmAddress = yarnConf . getSocketAddr ( arg ) ;
InetSocketAddress rmAddress = yarnConf . getSocketAddr ( arg ) ;
InetSocketAddress streamingAddr = DataNode . getStreamingAddr ( arg ) ;
InetSocketAddress streamingAddr = DataNode . getStreamingAddr ( arg ) ;
InetSocketAddress <unk> = datanode . getXferAddress ( arg ) ;
InputStream in = fc . open ( arg ) ;
final InputStream in = new <unk> ( arg ) ;
FileInputStream logByteStream = null ;
editlog . selectInputStreams ( arg ) ;
Iterator < DatanodeDescriptor > iter = <unk> ( arg ) ;
Iterator < DatanodeDescriptor > iter = namesystem . getBlockManager ( arg ) . blocksMap . <unk> ( arg ) ;
Iterator < Entry < SocketAddress , SocketAndStreams >> iter = multimap . entries ( arg ) . iterator ( arg ) ;
RemoteIterator < FileStatus > list = <unk> ( arg ) ;
RemoteIterator < FileStatus > <unk> = fc . listStatus ( arg ) ;
RemoteIterator < FileStatus > <unk> = fc1 . listStatus ( arg ) ;
RemoteIterator < FileStatus > statsItor = fc . listStatus ( arg ) ;
RemoteIterator < FileStatus > statsItor = fc . listStatus ( arg ) ;
RemoteIterator < FileStatus > <unk> = FileContext . this . listStatus ( arg ) ;
RemoteIterator < LocatedFileStatus > itor = fs . listFiles ( arg ) ;
RemoteIterator < LocatedFileStatus > itor = fs . listFiles ( arg ) ;
Iterator < Map . Entry < TaskAttemptId , <unk> >> iterator = <unk> . <unk> ( arg ) . iterator ( arg ) ;
Iterator iter = <unk> . <unk> . iterator ( arg ) ;
Iterator < SocketAndStreams > iter = socklist . iterator ( arg ) ;
Iterator < SocketAndStreams > iter = <unk> . iterator ( arg ) ;
Iterator < String > <unk> = environment . <unk> ( arg ) . iterator ( arg ) ;
JSONArray arr = info . getJSONObject ( arg ) . getJSONArray ( arg ) ;
JSONArray arr = info . getJSONObject ( arg ) . getJSONArray ( arg ) ;
Job j = getJobUsingCluster ( arg ) ;
Job job = getJobUsingCluster ( arg ) ;
Job job = Job . getInstance ( arg ) ;
org . apache . hadoop . mapreduce . JobStatus [ ] jobs = cluster . <unk> ( arg ) ;
Job result = getInstance ( arg ) ;
final JobClient <unk> ;
final JobClient client ;
TestJobClient client = new TestJobClient ( arg ) ;
TestJobClient client = new TestJobClient ( arg ) ;
TestJobClient client = new TestJobClient ( arg ) ;
TestJobClient client = new TestJobClient ( arg ) ;
JobConf conf = new JobConf ( arg ) ;
JobConf conf = new JobConf ( arg ) ;
JobConf conf = new JobConf ( arg ) ;
JobConf jobConf = mr . createJobConf ( arg ) ;
JobConf jobConf = mr . createJobConf ( arg ) ;
parser = new <unk> ( arg ) ;
JobId jobId = recordFactory . newRecordInstance ( arg ) ;
JobId jobId = Records . newRecord ( arg ) ;
JobId jobId = Records . newRecord ( arg ) ;
map . incrAllCounters ( arg ) ;
map . incrAllCounters ( arg ) ;
<unk> <unk> = <unk> . <unk> ( arg ) . <unk> ( arg ) ;
final JobInfo token = new JobInfo ( arg ) ;
JobStateInternal jobCompleteSuccess = JobImpl . checkJobCompleteSuccess ( arg ) ;
JobStateInternal jobCompleteSuccess = JobImpl . checkJobCompleteSuccess ( arg ) ;
JobStateInternal <unk> = JobImpl . checkJobCompleteSuccess ( arg ) ;
JobStateInternal oldState = getInternalState ( arg ) ;
JobStatus [ ] jobs = <unk> . <unk> ( arg ) ;
JobStatus status = getJobStatus ( arg ) ;
JobStatus status = clientCache . getClient ( arg ) . getJobStatus ( arg ) ;
JobStatus status = client . getJobStatus ( arg ) ;
<unk> jas = <unk> ( arg ) ;
JournalProtocolTranslatorPB translator = ( JournalProtocolTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
JournalRequestProto req = JournalRequestProto . newBuilder ( arg ) . setJournalInfo ( arg ) . <unk> ( arg ) . <unk> ( arg ) . <unk> ( arg ) . build ( arg ) ;
<unk> . <unk> ( arg ) ;
KerberosInfo krbInfo = SecurityUtil . getKerberosInfo ( arg ) ;
KerberosInfo krbInfo = SecurityUtil . getKerberosInfo ( arg ) ;
HadoopKerberosName . <unk> ( arg ) ;
HadoopKerberosName <unk> = new HadoopKerberosName ( arg ) ;
FinishApplicationRequest req = Records . newRecord ( arg ) ;
FinishApplicationRequest request = recordFactory . newRecordInstance ( arg ) ;
if ( fail ) {
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . fatal ( arg ) ;
LOG . fatal ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
LOG . error ( arg ) ;
ParentQueue c = ( ParentQueue ) queues . get ( arg ) ;
LeaseManager <unk> = NameNodeAdapter . getLeaseManager ( arg ) ;
<unk> <unk> ;
List < InclusiveByteRange > ranges = strToRanges ( arg ) ;
List < InclusiveByteRange > ranges = strToRanges ( arg ) ;
List < InclusiveByteRange > ranges = strToRanges ( arg ) ;
List < Container > <unk> = <unk> . getAllocatedContainers ( arg ) ;
List < Container > <unk> = <unk> . getAllocatedContainers ( arg ) ;
if ( LOG . <unk> ( arg ) ) {
List < Container > allocatedContainers = scheduler . allocate ( arg ) . getAMResponse ( arg ) . getAllocatedContainers ( arg ) ;
List < Container > conts = am . allocate ( arg ) . getAllocatedContainers ( arg ) ;
List < Container > conts = am . allocate ( arg ) . getAllocatedContainers ( arg ) ;
List < ContainerStatus > <unk> = new ArrayList < ContainerStatus > ( arg ) ;
List < DatanodeDescriptor > nodes = getNodes ( arg ) ;
List < DatanodeDescriptor > origNodes = getNodes ( arg ) ;
List < DatanodeDescriptor > origNodes = getNodes ( arg ) ;
List < DatanodeDescriptor > origNodes = getNodes ( arg ) ;
List < DatanodeDescriptor > origNodes = getNodes ( arg ) ;
List < FSQueueSchedulable > <unk> = getQueueSchedulables ( arg ) ;
List < FSLeafQueue > scheds = new ArrayList < FSLeafQueue > ( arg ) ;
List < FSQueueSchedulable > scheds = getQueueSchedulables ( arg ) ;
final List < FSVolumeInterface > volumeList = new ArrayList < FSVolumeInterface > ( arg ) ;
final List < FSVolumeInterface > volumes = dataset . getVolumes ( arg ) ;
List < ? extends FsVolumeSpi > volumes = fds . getVolumes ( arg ) ;
List < ? extends FsVolumeSpi > volumes = fds . getVolumes ( arg ) ;
List < ? extends FsVolumeSpi > volumes = fds . getVolumes ( arg ) ;
List < FSVolumeInterface > volumes = fds . getVolumes ( arg ) ;
List < FSVolumeInterface > volumes = fds . getVolumes ( arg ) ;
List < FSVolumeInterface > volumes = fds . getVolumes ( arg ) ;
final List < ? extends FSVolumeInterface > volumes = dataset . getVolumes ( arg ) ;
List < FSVolume > volumes = fds . getVolumes ( arg ) ;
List < FSVolume > volumes = fds . getVolumes ( arg ) ;
List < FSVolume > volumes = fds . getVolumes ( arg ) ;
List < EditLogInputStream > editsStreams = Lists . newArrayList ( arg ) ;
List < EditLogFile > <unk> = <unk> . <unk> ( arg ) ;
List < EditLogFile > logs = lg . logs ;
List < EditLogFile > <unk> = new ArrayList < EditLogFile > ( arg ) ;
List < FSImageFile > <unk> = inspector . <unk> ( arg ) ;
List < INode > children = current . <unk> ( arg ) ;
List < INode > contents = dirInode . getChildrenList ( arg ) ;
final <unk> < INode > contents = dirInode . getChildrenList ( arg ) ;
List < <unk> > cnns = null ;
List < Integer > blocksVolumeIndexes = new ArrayList < Integer > ( arg ) ;
List < String > <unk> = new ArrayList < String > ( arg ) ;
List < String > processList = new ArrayList < String > ( arg ) ;
List < String > processList = new ArrayList < String > ( arg ) ;
List < JobStats > <unk> = <unk> . <unk> ( arg ) ;
List < LocatedBlock > <unk> = cluster . getNameNodeRpc ( arg ) . getBlockLocations ( arg ) . getLocatedBlocks ( arg ) ;
List < LocatedBlock > <unk> = cluster . getNameNodeRpc ( arg ) . getBlockLocations ( arg ) . getLocatedBlocks ( arg ) ;
List < LocatedBlock > <unk> = cluster . getNameNodeRpc ( arg ) . getBlockLocations ( arg ) . getLocatedBlocks ( arg ) ;
List < LocatedBlock > locatedBlocks = <unk> . getBlockLocations ( arg ) . getLocatedBlocks ( arg ) ;
List < Long > <unk> = request . <unk> ( arg ) . getBlocksList ( arg ) ;
final Map < String , Lease > entries = new HashMap < String , Lease > ( arg ) ;
PathData [ ] <unk> = PathData . <unk> ( arg ) ;
List < <unk> > info = queue . <unk> ( arg ) ;
List < <unk> > <unk> = request . getBlocks ( arg ) . getBlocksList ( arg ) ;
List < <unk> > <unk> = srcRoot . <unk> ( arg ) ;
List < SocketAndStreams > socklist = multimap . get ( arg ) ;
List < String > diagnostics = j . getDiagnostics ( arg ) ;
List < NodeName > <unk> = <unk> . get ( arg ) ;
Set < String > groups = new <unk> < String > ( arg ) ;
List < NodeName > layers = location . getLayers ( arg ) ;
List < NodeName > layers = location . getLayers ( arg ) ;
List < String > <unk> = new ArrayList < String > ( arg ) ;
List < String > <unk> = <unk> ( arg ) ;
List < TaskAttemptId > <unk> = new ArrayList < TaskAttemptId > ( arg ) ;
List < Token < ? >> <unk> = Arrays . asList ( arg ) ;
Token < ? > [ ] <unk> = hdfs . addDelegationTokens ( arg ) ;
List < <unk> > <unk> = <unk> ( arg ) ;
ListenableFuture < RemoteEditLogManifest > <unk> = <unk> . getEditLogManifest ( arg ) ;
LocatedBlock <unk> = nameNodeProto . addBlock ( arg ) ;
LocatedBlocks blocks = getLocatedBlocks ( arg ) ;
LocatedBlocks <unk> = nn . getBlockLocations ( arg ) ;
LocatedBlocks <unk> = nn . getBlockLocations ( arg ) ;
LocatedBlocks <unk> = nn . getBlockLocations ( arg ) ;
LocatedBlocks locatedBlocks = cluster . getNameNodeRpc ( arg ) . getBlockLocations ( arg ) ;
LocatedBlocks <unk> = dfsClient . getLocatedBlocks ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . warn ( arg ) ;
<unk> <unk> = spy ( arg ) ;
<unk> . <unk> <unk> = null ;
ParsedTask result = <unk> . get ( arg ) ;
ParsedTask result = taskMap . get ( arg ) ;
ParsedTask task = getOrMakeTask ( arg ) ;
ParsedTask task = getOrMakeTask ( arg ) ;
ParsedTask task = getOrMakeTask ( arg ) ;
ParsedTask task = getTask ( arg ) ;
ParsedTaskAttempt attempt = getOrMakeTaskAttempt ( arg ) ;
ParsedTaskAttempt attempt = getOrMakeTaskAttempt ( arg ) ;
ParsedTaskAttempt attempt = getOrMakeTaskAttempt ( arg ) ;
ParsedTaskAttempt attempt = getOrMakeTaskAttempt ( arg ) ;
ParsedTaskAttempt attempt = getOrMakeTaskAttempt ( arg ) ;
LOG . warn ( arg ) ;
<unk> = new <unk> ( arg ) ;
<unk> app = new <unk> ( arg ) ;
Apps . addToEnvironment ( arg ) ;
Apps . addToEnvironment ( arg ) ;
HSClientProtocol historyClient = ( HSClientProtocol ) rpc . getProxy ( arg ) ;
HSClientProtocol historyClient = <unk> ( arg ) ;
Map < AsyncLogger , ListenableFuture < RemoteEditLogManifest >> calls = <unk> . <unk> ( arg ) ;
Map < AsyncLogger , <unk> > <unk> = <unk> ( arg ) ;
Map < Path , List < String >> localPaths = new HashMap < Path , List < String >> ( arg ) ;
Map < Path , List < String >> localPaths = <unk> . <unk> ( arg ) ;
Map < Path , List < String >> <unk> = new HashMap < Path , List < String >> ( arg ) ;
Map < QueueACL , AccessControlList > acls = queueMgr . getQueueAcls ( arg ) ;
Map < QueueACL , AccessControlList > acls = queueMgr . getQueueAcls ( arg ) ;
Map < RMContainer , FSSchedulerApp > <unk> = new HashMap < RMContainer , FSSchedulerApp > ( arg ) ;
Map < String , ByteBuffer > <unk> = ctxt . <unk> ( arg ) ;
Map < String , <unk> < Class < ? >>> map ;
Map < String , LocalResource > <unk> = ctxt . <unk> ( arg ) ;
Map < String , ParsedTask > taskMap = <unk> ;
Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
Map < String , String > <unk> = launchContext . getEnvironment ( arg ) ;
Map < TaskAttemptId , TaskAttempt > <unk> = new <unk> < TaskAttemptId , TaskAttempt > ( arg ) ;
<unk> < <unk> , <unk> > collector = null ;
MapOutputFile <unk> = new MROutputFiles ( arg ) ;
MapOutputFile <unk> = new MROutputFiles ( arg ) ;
MapOutputFile mapOutputFile = new MROutputFiles ( arg ) ;
MessageDigest digester = getDigester ( arg ) ;
MetricsSourceAdapter <unk> = new MetricsSourceAdapter ( arg ) ;
MetricsTimeVaryingRate m = ( MetricsTimeVaryingRate ) rpcDetailedMetrics . registry . get ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . format ( arg ) . manageNameDfsDirs ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
MiniDFSCluster mr = null ;
<unk> = new <unk> ( arg ) ;
HttpServletResponse response = Mockito . mock ( arg ) ;
HttpServletResponse response = Mockito . mock ( arg ) ;
HttpServletResponse response = Mockito . mock ( arg ) ;
HttpServletResponse response = Mockito . mock ( arg ) ;
<unk> <unk> = rm . <unk> ( arg ) ;
rm = new MockRM ( arg ) ;
final MockRM rm = new <unk> ( arg ) ;
svc . isHealthy = true ;
Mockito . doReturn ( arg ) . when ( arg ) . getBlockReplication ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
Mockito . doReturn ( arg ) . when ( arg ) . getServiceStatus ( arg ) ;
svc . isHealthy = false ;
svc . isHealthy = false ;
Assert . assertTrue ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
verifyExistCall ( arg ) ;
Mockito . verify ( arg ) . getServiceStatus ( arg ) ;
Mockito . verify ( arg ) . startLogSegment ( arg ) ;
final MyResourceManager rm = new MyResourceManager ( arg ) ;
final MyResourceManager rm = new MyResourceManager ( arg ) ;
DFSTestUtil . <unk> ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . info ( arg ) ;
blockLog . warn ( arg ) ;
blockLog . warn ( arg ) ;
NamenodeProtocols <unk> = mock ( arg ) ;
NamenodeProtocols namenode = cluster . getNameNodeRpc ( arg ) ;
NamenodeProtocols namenode = cluster . getNameNodeRpc ( arg ) ;
NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
NamenodeProtocols nn = cluster . getNameNodeRpc ( arg ) ;
NamenodeProtocols nn = cluster . getNameNodeRpc ( arg ) ;
NamenodeProtocols nn = cluster . getNameNodeRpc ( arg ) ;
NamenodeProtocols nn = cluster . getNameNodeRpc ( arg ) ;
NamenodeProtocols nn = cluster . getNameNodeRpc ( arg ) ;
BlockManagerTestUtil . updateState ( arg ) ;
<unk> cmd = getRemoteNamenodeProxy ( arg ) . startCheckpoint ( arg ) ;
NamenodeProtocol namenode = new NamenodeProtocolTranslatorPB ( arg ) ;
NamenodeProtocol namenode = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
NamenodeProtocolTranslatorPB translator = ( NamenodeProtocolTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
NativeIO . Stat stat = NativeIO . getFstat ( arg ) ;
NativeIO . Stat stat = NativeIO . getFstat ( arg ) ;
NativeIO . Stat stat = NativeIO . getFstat ( arg ) ;
<unk> =! <unk> ? new <unk> ( arg ) : new <unk> ( arg ) ;
<unk> <unk> ;
<unk> <unk> = <unk> ( arg ) ;
NodeType allowed = <unk> . get ( arg ) ;
Object [ ] <unk> = RPC . call ( arg ) ;
<unk> <unk> = <unk> . <unk> ( arg ) . <unk> ( arg ) . <unk> ( arg ) . create ( arg ) ;
OutputStream baseStream = getOutputStream ( arg ) ;
OutputStream baseStream = getOutputStream ( arg ) ;
OutputStream dataOut = out . <unk> ( arg ) ;
boolean <unk> = false ;
<unk> = fs . create ( arg ) ;
Writer out = response . getWriter ( arg ) ;
result [ i ] = PBHelper . convert ( arg ) ;
result [ i ] = PBHelper . convert ( arg ) ;
<unk> listing = store . list ( arg ) ;
Path checkpointBase ;
Path <unk> = dirsHandler . <unk> ( arg ) ;
Path <unk> = dirsHandler . getLocalPathForWrite ( arg ) ;
Path dir = new Path ( arg ) ;
Path f = getTestRootPath ( arg ) ;
Path f = getTestRootPath ( arg ) ;
Path f = getTestRootPath ( arg ) ;
Path f = createFile ( arg ) ;
Path f = createFile ( arg ) ;
Path f = createFile ( arg ) ;
Path <unk> = org . apache . hadoop . mapreduce . v2 . <unk> . JobHistoryUtils . <unk> ( arg ) ;
Path <unk> = new Path ( arg ) ;
nmPrivateCTokensPath = <unk> . getLocalPathForWrite ( arg ) ;
Path p = <unk> . makeQualified ( arg ) ;
final Path result = next ;
Path <unk> = getTaskAttemptPath ( arg ) ;
<unk> ( arg ) ;
checkSync ( arg ) ;
checkSync ( arg ) ;
checkSync ( arg ) ;
PrintWriter file = new PrintWriter ( arg ) ;
PrintWriter out = response . getWriter ( arg ) ;
PrintWriter out = response . getWriter ( arg ) ;
PrintWriter out = response . getWriter ( arg ) ;
ResourceCalculatorProcessTree pTree = <unk> . getProcessTree ( arg ) ;
<unk> ( arg ) ;
ResourceCalculatorProcessTree <unk> = ResourceCalculatorProcessTree . <unk> ( arg ) ;
<unk> <unk> = <unk> . <unk> ( arg ) ;
<unk> <unk> = protocol . <unk> ( arg ) ;
CSQueue parent = queue . getParent ( arg ) ;
CSQueue queue = getQueue ( arg ) ;
CSQueue queue = null ;
CSQueue queue = queues . get ( arg ) ;
CSQueue root = cs . <unk> ( arg ) ;
<unk> = <unk> ( arg ) ;
<unk> application = <unk> ( arg ) ;
application = <unk> ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppFailedAttemptEvent ( arg ) ;
RMAppEvent event = new RMAppEvent ( arg ) ;
RMAppEvent event = new RMAppEvent ( arg ) ;
RMAppEvent event = new RMAppEvent ( arg ) ;
<unk> <unk> = rmNode . context . <unk> ( arg ) . get ( arg ) ;
NodeState [ ] <unk> = NodeState . values ( arg ) ;
NodeState nodeState = NodeState . valueOf ( arg ) ;
NodeState nodeState = node . getState ( arg ) ;
NodeState oldState = getState ( arg ) ;
NodeState state = <unk> . getState ( arg ) ;
NodeState stateFilter = null ;
RMStateStore store = <unk> . getStore ( arg ) ;
RPC . Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . <unk> ( arg ) . build ( arg ) ;
new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
IOUtils . cleanup ( arg ) ;
IOUtils . cleanup ( arg ) ;
IOUtils . cleanup ( arg ) ;
IOUtils . cleanup ( arg ) ;
new Reader ( arg ) ;
new Reader ( arg ) ;
recoveryServ = new <unk> ( arg ) ;
RefreshAuthorizationPolicyProtocolClientSideTranslatorPB refreshProtocol = new RefreshAuthorizationPolicyProtocolClientSideTranslatorPB ( arg ) ;
<unk> refreshProtocol = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
RefreshAuthorizationPolicyProtocolClientSideTranslatorPB translator = ( RefreshAuthorizationPolicyProtocolClientSideTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
RefreshUserMappingsProtocolClientSideTranslatorPB refreshProtocol = new RefreshUserMappingsProtocolClientSideTranslatorPB ( arg ) ;
RefreshUserMappingsProtocolClientSideTranslatorPB refreshProtocol = new RefreshUserMappingsProtocolClientSideTranslatorPB ( arg ) ;
RefreshUserMappingsProtocol refreshProtocol = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
RefreshUserMappingsProtocol refreshProtocol = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
RefreshUserMappingsProtocolClientSideTranslatorPB translator = ( RefreshUserMappingsProtocolClientSideTranslatorPB ) NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
<unk> . <unk> ( arg ) . <unk> ( arg ) ;
RemoteBlockReader2reader = ( RemoteBlockReader2 ) spy ( arg ) ;
RemoteBlockReader2reader = ( RemoteBlockReader2 ) spy ( arg ) ;
RemoteBlockReader2reader = ( RemoteBlockReader2 ) spy ( arg ) ;
RemoteEditLogManifest <unk> = getRemoteNamenodeProxy ( arg ) . getEditLogManifest ( arg ) ;
<unk> < ? > action = null ;
Replica r = dataset1 . fetchReplicaInfo ( arg ) ;
Replica r = DataNodeTestUtils . fetchReplicaInfo ( arg ) ;
Replica r = DataNodeTestUtils . fetchReplicaInfo ( arg ) ;
final String storageID = data . updateReplicaUnderRecovery ( arg ) ;
CSAssignment assignment = new CSAssignment ( arg ) ;
Resource <unk> = BuilderUtils . <unk> ( arg ) ;
Resource userLimit = computeUserLimitAndSetHeadroom ( arg ) ;
<unk> <unk> = info ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
@ SuppressWarnings ( arg ) final RoundRobinVolumesPolicy < FSVolumeInterface > policy = ( RoundRobinVolumesPolicy < FSVolumeInterface > ) ReflectionUtils . newInstance ( arg ) ;
final RoundRobinVolumesPolicy < FSVolumeInterface > policy = new RoundRobinVolumesPolicy < FSVolumeInterface > ( arg ) ;
RpcRequestHeaderProto header = RpcRequestHeaderProto . <unk> ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
ShutdownHookManager . get ( arg ) . addShutdownHook ( arg ) ;
terminate ( arg ) ;
ShutdownHookManager . get ( arg ) . <unk> ( arg ) ;
Scanner scanner = reader . createScannerByKey ( arg ) ;
Scanner scanner = reader . createScannerByKey ( arg ) ;
Scanner scanner = reader . createScannerByKey ( arg ) ;
Scanner scanner = reader . createScannerByKey ( arg ) ;
Scanner scanner = reader . createScannerByKey ( arg ) ;
FiCaSchedulerApp <unk> = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app = getApplication ( arg ) ;
FiCaSchedulerApp app = getApplication ( arg ) ;
FiCaSchedulerApp app_0 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_0 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_0 = spy ( arg ) ;
FiCaSchedulerApp app_0 = spy ( arg ) ;
FiCaSchedulerApp app_0 = spy ( arg ) ;
FiCaSchedulerApp <unk> = spy ( arg ) ;
FiCaSchedulerApp <unk> = spy ( arg ) ;
FiCaSchedulerApp app_1 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_1 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_1 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp <unk> = spy ( arg ) ;
FiCaSchedulerApp app_2 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_2 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_2 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_2 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_2 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp app_3 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_3 = getMockApplication ( arg ) ;
FiCaSchedulerApp app_3 = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerApp <unk> = getMockApplication ( arg ) ;
FiCaSchedulerApp <unk> = getMockApplication ( arg ) ;
FSSchedulerApp application = applications . get ( arg ) ;
FSSchedulerApp application = applications . get ( arg ) ;
FSSchedulerApp application = applications . get ( arg ) ;
FSSchedulerApp application = applications . get ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = getApplication ( arg ) ;
FiCaSchedulerApp application = mock ( arg ) ;
FiCaSchedulerApp application = mock ( arg ) ;
FSSchedulerApp reservedApplication = applications . get ( arg ) ;
FiCaSchedulerApp reservedApplication = getApplication ( arg ) ;
FiCaSchedulerApp <unk> = new FiCaSchedulerApp ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FiCaSchedulerNode node = getNode ( arg ) ;
FSSchedulerNode node = nodes . get ( arg ) ;
FSSchedulerNode node = nodes . get ( arg ) ;
FSSchedulerNode node = nodes . get ( arg ) ;
FiCaSchedulerNode node = spy ( arg ) ;
FSSchedulerNode node = this . nodes . get ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_0 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode <unk> = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode <unk> = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_1 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode <unk> = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_2 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode node_2 = TestUtils . getMockNode ( arg ) ;
FiCaSchedulerNode <unk> = TestUtils . getMockNode ( arg ) ;
Schema <unk> = getSchema ( arg ) ;
<unk> <unk> = this . rmContext . <unk> ( arg ) . <unk> ( arg ) ;
connection = ( HttpURLConnection ) SecurityUtil . <unk> ( arg ) ;
<unk> ( arg ) ;
ServiceAuthorizationManager . <unk> ( arg ) ;
SegmentStateProto ret = SegmentStateProto . newBuilder ( arg ) . setStartTxId ( arg ) . setEndTxId ( arg ) . setIsInProgress ( arg ) . build ( arg ) ;
new Sender ( arg ) . blockChecksum ( arg ) ;
sender . readBlock ( arg ) ;
sender . readBlock ( arg ) ;
sender . readBlock ( arg ) ;
sender . readBlock ( arg ) ;
sender . readBlock ( arg ) ;
sender . readBlock ( arg ) ;
new Sender ( arg ) . replaceBlock ( arg ) ;
new Sender ( arg ) . replaceBlock ( arg ) ;
new Sender ( arg ) . transferBlock ( arg ) ;
new Sender ( arg ) . transferBlock ( arg ) ;
new Sender ( arg ) . writeBlock ( arg ) ;
new Sender ( arg ) . writeBlock ( arg ) ;
new Sender ( arg ) . writeBlock ( arg ) ;
new Sender ( arg ) . writeBlock ( arg ) ;
conf . setInt ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
serviceAuthorizationManager . authorize ( arg ) ;
serviceAuthorizationManager . authorize ( arg ) ;
Set < Path > set = DELETE_ON_EXIT . get ( arg ) ;
SocketAndStreams <unk> = iter . next ( arg ) ;
Socket s = dfsClient . socketCache . get ( arg ) . sock ;
Socket s = NetUtils . getDefaultSocketFactory ( arg ) . createSocket ( arg ) ;
s = ss . accept ( arg ) ;
SocketAndStreams sockAndStreams = null ;
SortedSet < String > keys = new TreeSet < String > ( arg ) ;
SortedSet < String > <unk> = new TreeSet < String > ( arg ) ;
Stack < ApplicableTransition < OPERAND , STATE , EVENTTYPE , EVENT >> <unk> = new Stack < ApplicableTransition < OPERAND , STATE , EVENTTYPE , EVENT >> ( arg ) ;
<unk> <unk> = Records . newRecord ( arg ) ;
StartLogSegmentRequestProto req = StartLogSegmentRequestProto . newBuilder ( arg ) . setJournalInfo ( arg ) . <unk> ( arg ) . build ( arg ) ;
Stat stat = NativeIO . getFstat ( arg ) ;
List < Statistics > <unk> = new ArrayList < FileSystem . Statistics > ( arg ) ;
<unk> <unk> = Records . newRecord ( arg ) ;
final StorageBlockReport [ ] report = { val } ;
StorageBlockReportProto . Builder reportBuilder = StorageBlockReportProto . newBuilder ( arg ) . <unk> ( arg ) ;
StorageDirectory mockDir = FSImageTestUtil . mockStorageDirectory ( arg ) ;
StorageDirectory mockDir = FSImageTestUtil . mockStorageDirectory ( arg ) ;
StorageDirectory mockDir = FSImageTestUtil . mockStorageDirectory ( arg ) ;
StorageDirectory sd = ( StorageDirectory ) args [ 1 ] ;
StorageInfo info = getStorageInfo ( arg ) ;
StorageInfo info = getStorageInfo ( arg ) ;
RMStateStore store = ReflectionUtils . newInstance ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
RMStateStore store = StoreFactory . getStore ( arg ) ;
StreamFile . copyFromOffset ( arg ) ;
StreamFile . copyFromOffset ( arg ) ;
String [ ] <unk> = dataset . <unk> ( arg ) ;
String [ ] <unk> = getTrimmedStrings ( arg ) ;
String [ ] dirs = getTrimmedStrings ( arg ) ;
String [ ] dirs = getTrimmedStrings ( arg ) ;
File [ ] names = <unk> . listFiles ( arg ) ;
String addr = NetUtils . getHostPortString ( arg ) ;
String addr = NetUtils . getHostPortString ( arg ) ;
String addr = NetUtils . getHostPortString ( arg ) ;
String addr = nn . getNameNodeAddressHostPortString ( arg ) ;
String addr = nn . getNameNodeAddressHostPortString ( arg ) ;
String addr = nn . getNameNodeAddressHostPortString ( arg ) ;
String <unk> = address . getHostName ( arg ) + : + address . getPort ( arg ) ;
String <unk> = <unk> ( <unk> ) ;
String [ ] altNames = <unk> ( arg ) ;
String appID = app . getApplicationId ( arg ) . toString ( arg ) ;
String appId = app . getApplicationId ( arg ) . toString ( arg ) ;
TaskAttemptID attemptID = attempt . getAttemptID ( arg ) ;
String <unk> = SecurityUtil . getAuthenticationMethod ( arg ) . toString ( arg ) ;
String <unk> = <unk> rand +-+ ip +-+ Time . now ( arg ) ;
String <unk> = <unk> ( arg ) ;
String <unk> = <unk> ( arg ) ;
String className = StringInterner . weakIntern ( arg ) ;
String className = StringInterner . weakIntern ( arg ) ;
String className = StringInterner . weakIntern ( arg ) ;
String cmd <unk> getName ( arg ) ;
String <unk> = <unk> . <unk> ( arg ) ;
String <unk> = <unk> . getXferAddr ( arg ) ;
String <unk> = c . getContainerID ( arg ) . toString ( arg ) ;
String <unk> = layers . get ( arg ) . getValue ( arg ) ;
String diagnostics = <unk> . getDiagnostics ( arg ) ;
String diagnostics = StringInterner . weakIntern ( arg ) ;
String dnName = dn . <unk> ( arg ) . getXferAddr ( arg ) ;
<unk> = new String ( arg ) ;
StringBuffer fileList = new StringBuffer ( arg ) ;
String <unk> = committer . <unk> ( arg ) ;
FinalApplicationStatus finishState = FinalApplicationStatus . UNDEFINED ;
String fqdn = canonicalize ( arg ) ;
String fqdn = canonicalize ( arg ) ;
String fsName = NetUtils . getHostPortString ( arg ) ;
String fsName = NetUtils . getHostPortString ( arg ) ;
String fsName = NetUtils . getHostPortString ( arg ) ;
InetSocketAddress serviceAddr = clientService . getBindAddress ( arg ) ;
String host = clientService . getBindAddress ( arg ) . getAddress ( arg ) . <unk> ( arg ) ;
String host = layers . get ( arg ) . getValue ( arg ) ;
String ipAddr = node . getIpAddr ( arg ) ;
String ipAddr = node . getIpAddr ( arg ) ;
String <unk> = NetUtils . <unk> ( arg ) ;
String <unk> = NetUtils . getHostPortString ( arg ) ;
String ipAddr = dn . getXferAddress ( arg ) . getAddress ( arg ) . <unk> ( arg ) ;
String <unk> = SecurityUtil . buildTokenService ( arg ) . toString ( arg ) ;
String jobID = JobHistoryUtils . <unk> ( arg ) ;
JobName jobName = job . <unk> ( arg ) ;
String <unk> = <unk> ( arg ) ;
String key = DFSUtil . addKeySuffixes ( arg ) ;
String key = <unk> . <unk> + SecurityUtil . buildDTServiceName ( arg ) ;
int <unk> = 0 ;
String <unk> = locations [ 0 ] . <unk> ( arg ) [ 0 ] ;
String <unk> = LogAggregationUtils . <unk> ( arg ) ;
String <unk> = getHttpAddress ( arg ) ;
String name = <unk> ( dnName . isEmpty ( arg ) ? <unk> + DFSUtil . getRandom ( arg ) . nextInt ( arg ) : dnName . <unk> ( arg ) ) ;
String name = Foo%dthPercentileLatency ;
String name = Foo%dthPercentileLatency ;
String name = StringInterner . weakIntern ( arg ) ;
String name = live . get ( arg ) . getXferAddr ( arg ) ;
String name = live . get ( arg ) . getXferAddr ( arg ) ;
String nnAddr = StringEscapeUtils . escapeHtml ( arg ) ;
String nodename = info [ index ] . getXferAddr ( arg ) ;
String nodename = info [ <unk> ] . getXferAddr ( arg ) ;
String nsId = DFSUtil . getNamenodeNameServiceId ( arg ) ;
String nsId = DFSUtil . getNamenodeNameServiceId ( arg ) ;
String nsId = DFSUtil . getNameServiceId ( arg ) ;
String altNames [ ] = null ;
String <unk> = parent . getName ( arg ) + Path . <unk> ;
Path path = new Path ( arg ) ;
Short permission = params . get ( arg ) ;
Short permission = params . get ( arg ) ;
Short permission = params . get ( arg ) ;
String <unk> = rpcRequest . <unk> ( arg ) ;
String <unk> = RPC . <unk> ( arg ) ;
String qpath = path . makeQualified ( arg ) . toString ( arg ) ;
String qpath = fs . makeQualified ( arg ) . toString ( arg ) ;
String qpath = fs . makeQualified ( arg ) . toString ( arg ) ;
String <unk> = <unk> . getHostName ( arg ) . getValue ( arg ) ;
List < String > reason = new ArrayList < String > ( arg ) ;
String <unk> = new StringBuilder ( arg ) . <unk> ( arg ) . toString ( arg ) ;
String saveName = Limits . filterCounterName ( arg ) ;
String saveName = Limits . filterCounterName ( arg ) ;
String selfSocketAddr = dn . getXferAddress ( arg ) . toString ( arg ) ;
final String serviceAddr = conf . get ( arg ) ;
InetSocketAddress serviceAddr = null ;
InetSocketAddress <unk> = <unk> ( arg ) ;
String <unk> = <unk> . <unk> ( arg ) ;
String <unk> = DataNodeTestUtils . getFSDataset ( arg ) . getStorageInfo ( arg ) ;
String <unk> = DFSUtil . addKeySuffixes ( arg ) ;
String <unk> = Environment . runCommandGeneric ( arg ) . toString ( arg ) ;
<unk> state = queue . getState ( arg ) ;
String status = nn . getNamesystem ( arg ) . <unk> ( arg ) ;
String str = readFile ( arg ) . toString ( arg ) ;
String str = readFile ( arg ) . toString ( arg ) ;
if ( conf . getBoolean ( arg ) ) {
String <unk> = StringEscapeUtils . escapeHtml ( arg ) ;
String tid = task_0_0000_d_000000 ;
String tid = task_0_0000_d_000000 ;
String tid = task_0_0000_m ;
String tid = task_0_0000_m ;
String tid = task_0_0000_m_000000 ;
String tid = task_0_0000_m_000000 ;
String tid = <unk> ;
String tokenURLEncodedStr = containerManager . amContainerEnv . get ( arg ) ;
String tokenURLEncodedStr = containerManager . amContainerEnv . get ( arg ) ;
String ui = trackingUrl == null || trackingUrl . isEmpty ( arg ) || <unk> . <unk> ( arg ) ? UNASSIGNED : ( app . getFinishTime ( arg ) == 0 ? ApplicationMaster : JobHistory ) ;
String ui = trackingUrl == null || trackingUrl . isEmpty ( arg ) ? UNASSIGNED : ( app . getFinishTime ( arg ) == 0 ? ApplicationMaster URL : JobHistory URL ) ;
String uri = <unk> . <unk> ( arg ) ;
String <unk> = isDeprecated ( arg ) ?  : getCommandField ( arg ) ;
String user = <unk> ;
String username = getIdentifier ( arg ) . getUser ( arg ) . getUserName ( arg ) ;
String username = getIdentifier ( arg ) . getUser ( arg ) . getUserName ( arg ) . toString ( arg ) ;
String valueString = getTrimmed ( arg ) ;
String valueString = getTrimmed ( arg ) ;
String valueString = getTrimmed ( arg ) ;
String valueString = getTrimmed ( arg ) ;
String valueString = getTrimmed ( arg ) ;
<unk> = conf . get ( arg ) ;
StringBuilder allOutput = new StringBuilder ( arg ) ;
StringBuilder b = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buf = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder buffer = new StringBuilder ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder result = new StringBuilder ( arg ) ;
StringBuilder result = new StringBuilder ( arg ) ;
StringBuilder ret = new StringBuilder ( arg ) ;
CharSequence sb = Environment . runCommandGeneric ( arg ) ;
CharSequence sb = Environment . runCommandGeneric ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
StringBuilder sb = new StringBuilder ( arg ) ;
CharSequence sb = runCommandGeneric ( arg ) ;
CharSequence sb = runCommandGeneric ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder <unk> = new StringBuilder ( arg ) ;
StringBuilder <unk> = tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) ;
String fileList = null ;
String fileList = null ;
SummaryBuilder summary = new SummaryBuilder ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) ;
SummaryBuilder summary = new SummaryBuilder ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . debug ( arg ) ;
LOG . error ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
terminate ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
LOG . info ( arg ) ;
SecurityUtil . initKrb5CipherSuites ( arg ) ;
SecurityUtil . initKrb5CipherSuites ( arg ) ;
<unk> . <unk> ( arg ) ;
action . <unk> . get ( arg ) . LOG . warn ( arg ) ;
TBODY < TABLE < Hamlet >> tbody = html . <unk> ( arg ) . table ( arg ) . thead ( arg ) . tr ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . _ ( arg ) . _ ( arg ) . tbody ( arg ) ;
TBODY < TABLE < Hamlet >> tbody = html . table ( arg ) . thead ( arg ) . tr ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . _ ( arg ) . _ ( arg ) . tbody ( arg ) ;
TBODY < TABLE < Hamlet >> tbody = html . table ( arg ) . thead ( arg ) . tr ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . _ ( arg ) . _ ( arg ) . tbody ( arg ) ;
TBODY < TABLE < Hamlet >> tbody = html . table ( arg ) . thead ( arg ) . tr ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . _ ( arg ) . _ ( arg ) . tbody ( arg ) ;
TBODY < TABLE < Hamlet >> tbody = html . table ( arg ) . thead ( arg ) . tr ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . _ ( arg ) . _ ( arg ) . tbody ( arg ) ;
if ( TEST_EDITS . exists ( arg ) ) TEST_EDITS . delete ( arg ) ;
TaskAttempt successful = info . <unk> ( arg ) ;
TaskAttemptCompletionEvent [ ] events = <unk> ;
TaskAttemptCompletionEvent <unk> = Records . newRecord ( arg ) ;
final TaskAttemptContainerAssignedEvent <unk> = ( TaskAttemptContainerAssignedEvent ) event ;
@ SuppressWarnings ( arg ) TaskAttemptContext taskContext = new TaskAttemptContextImpl ( arg ) ;
TaskAttemptID id = <unk> . getAttemptID ( arg ) ;
TaskAttemptId taskAttemptId = recordFactory . newRecordInstance ( arg ) ;
TaskAttemptId taskAttemptId = Records . newRecord ( arg ) ;
TaskAttemptId taskAttemptId = Records . newRecord ( arg ) ;
TaskId taskId = recordFactory . newRecordInstance ( arg ) ;
TaskId taskId = Records . newRecord ( arg ) ;
TaskId taskId = Records . newRecord ( arg ) ;
<unk> <unk> = <unk> . <unk> ( arg ) ;
<unk> taskInfo = <unk> . get ( arg ) ;
TaskStateInternal oldState = getInternalState ( arg ) ;
ApplicationId id = BuilderUtils . newApplicationId ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
<unk> . assertTrue ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
HATestUtil . waitForDNDeletions ( arg ) ;
final TestDelegationTokenSecretManager dtSecretManager = new TestDelegationTokenSecretManager ( arg ) ;
final TestDelegationTokenSecretManager dtSecretManager = new TestDelegationTokenSecretManager ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
readFile ( arg ) ;
readFile ( arg ) ;
Text <unk> = SecurityUtil . buildTokenService ( arg ) ;
topologyPaths = new String [ <unk> ] ;
<unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> <unk> = new <unk> ( arg ) . <unk> ( arg ) . <unk> ( arg ) . build ( arg ) ;
Token < ? > tokens [ ] = fs . addDelegationTokens ( arg ) ;
Token < ? > token = <unk> . selectToken ( arg ) ;
Token < ClientTokenIdentifier > <unk> = new Token < ClientTokenIdentifier > ( arg ) ;
Token < <unk> > token = ProtoUtils . convertFromProtoFormat ( arg ) ;
Token < DelegationTokenIdentifier > <unk> = ( Token < DelegationTokenIdentifier > ) <unk> . getDelegationToken ( arg ) ;
final Token < DelegationTokenIdentifier > token = client . getDelegationToken ( arg ) ;
final Token < DelegationTokenIdentifier > token = getDelegationToken ( arg ) ;
Token < ? > token = <unk> . token ;
Token < DelegationTokenIdentifier > token = nn . getRpcServer ( arg ) . getDelegationToken ( arg ) ;
Token < DelegationTokenIdentifier > <unk> = <unk> . selectToken ( arg ) ;
Credentials credentials = UserGroupInformation . <unk> ( arg ) . <unk> ( arg ) ;
Token < ? > token = new Token < <unk> > ( arg ) ;
Credentials . <unk> ( arg ) ;
URI <unk> = <unk> ( arg ) ;
URI trackingUri = <unk> == null ? null : ProxyUriUtils . getUriFromAMUrl ( arg ) ;
URI trackingUri = StringUtils . isEmpty ( arg ) ? null : ProxyUriUtils . getUriFromAMUrl ( arg ) ;
HttpURLConnection conn = ( HttpURLConnection ) <unk> . openConnection ( arg ) ;
<unk> connection = URLUtils . openConnection ( arg ) ;
HttpURLConnection connection = ( HttpURLConnection ) url . openConnection ( arg ) ;
HftpFileSystem . <unk> rspy = spy ( arg ) ;
BlockIterator blkIterator = blockManager . getCorruptReplicaBlockIterator ( arg ) ;
UpgradeCommand ret ;
UpgradeCommand ret ;
UpgradeCommand ret ;
UpgradeCommand cmd ;
UpgradeCommand cmd ;
<unk> . addToken ( arg ) ;
final UserGroupInformation <unk> = UserGroupInformation . getLoginUser ( arg ) ;
UserGroupInformation proxyUgi2 = new UserGroupInformation ( arg ) ;
UserGroupInformation proxyUgi2 = new UserGroupInformation ( arg ) ;
UserGroupInformation <unk> = new UserGroupInformation ( arg ) ;
final UserGroupInformation <unk> = UserGroupInformation . createRemoteUser ( arg ) ;
CharSequence echo = proxy . echo ( arg ) ;
List < String > <unk> = new ArrayList < String > ( arg ) ;
ViewFileSystemTestSetup . tearDown ( arg ) ;
WebServicesTestUtils . checkStringContains ( arg ) ;
WebServicesTestUtils . checkStringContains ( arg ) ;
WebServicesTestUtils . checkStringContains ( arg ) ;
Writer . <unk> <unk> = <unk> . <unk> ( arg ) ;
@ SuppressWarnings ( arg ) Writer < String , Integer > mockWriter = mock ( arg ) ;
@ SuppressWarnings ( arg ) Writer < String , Integer > mockWriter = mock ( arg ) ;
conf . <unk> ( arg ) ;
<unk> = new <unk> ( arg ) ;
assignment = a . assignContainers ( arg ) ;
action = HdfsConstants . SafeModeAction . <unk> ;
action = HdfsConstants . SafeModeAction . SAFEMODE_GET ;
action = HdfsConstants . SafeModeAction . SAFEMODE_GET ;
action = HdfsConstants . SafeModeAction . <unk> ;
action_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockCommandProto . Action . TRANSFER ;
action_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockCommandProto . Action . TRANSFER ;
action_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockCommandProto . Action . TRANSFER ;
<unk> ( arg ) ;
<unk> = getHttpAddress ( arg ) ;
actor . <unk> ( arg ) ;
Apps . addToEnvironment ( arg ) ;
Apps . addToEnvironment ( arg ) ;
Apps . addToEnvironment ( arg ) ;
invalidateBlocks . add ( arg ) ;
invalidateBlocks . add ( arg ) ;
<unk> . add ( arg ) ;
addr = SecurityUtil . getByName ( arg ) ;
allOutput . append ( arg ) . append ( arg ) ;
allocateRequest = BuilderUtils . newAllocateRequest ( arg ) ;
allocateRequest = BuilderUtils . newAllocateRequest ( arg ) ;
allocateRequest = BuilderUtils . newAllocateRequest ( arg ) ;
allocateRequest = BuilderUtils . newAllocateRequest ( arg ) ;
allocateRequest . setResponseId ( arg ) ;
allocateRequest . setResponseId ( arg ) ;
allocatedContainers = scheduler . allocate ( arg ) . getAMResponse ( arg ) . getAllocatedContainers ( arg ) ;
amInfo . <unk> = StringInterner . weakIntern ( arg ) ;
<unk> . stop ( arg ) ;
app . handler . handle ( arg ) ;
app . handler . handle ( arg ) ;
app . handler . handle ( arg ) ;
app . handler . handle ( arg ) ;
app . dispatcher . getEventHandler ( arg ) . handle ( arg ) ;
app . dispatcher . getEventHandler ( arg ) . handle ( arg ) ;
app . waitForInternalState ( arg ) ;
app . waitForInternalState ( arg ) ;
appAttempt . <unk> = <unk> . <unk> ( arg ) ;
appAttempt . <unk> ( arg ) ;
Map < String , LocalResource > localResources = new HashMap < String , LocalResource > ( arg ) ;
localResources . put ( arg ) ;
localResources . put ( arg ) ;
<unk> = LogAggregationUtils . <unk> ( arg ) ;
<unk> = new RMAppFinishedAttemptEvent ( arg ) ;
this . applicationId = BuilderUtils . newApplicationId ( arg ) ;
Text . writeString ( arg ) ;
<unk> . <unk> . setForcejobCompletion ( arg ) ;
appMonitor . finishApplication ( arg ) ;
appMonitor . finishApplication ( arg ) ;
container . <unk> . add ( arg ) ;
<unk> . setLocalResources ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
appendLink ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) ;
appendLink ( arg ) . append ( arg ) ;
application . <unk> ( arg ) ;
application . setYarnApplicationState ( arg ) ;
application . setYarnApplicationState ( arg ) ;
applicationReport . setYarnApplicationState ( arg ) ;
applicationReport . setYarnApplicationState ( arg ) ;
pendingApplications . add ( arg ) ;
activeApplications . remove ( arg ) ;
applicationsManager . forceKillApplication ( arg ) ;
applicationsManager . forceKillApplication ( arg ) ;
applicationsManager . finishApplication ( arg ) ;
super . submitApplication ( arg ) ;
args [ cmd . length ] = FileUtil . <unk> ( arg ) ;
array [ i ] = <unk> ( arg ) ;
<unk> ( arg ) ;
Assert . assertTrue ( arg ) ;
Assert . assertTrue ( arg ) ;
<unk> hasCorruptHeader ;
<unk> ( arg ) ;
assertGauge ( arg ) ;
assertGauge ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
<unk> . <unk> ( arg ) ;
assertNotSame ( arg ) ;
assertAppAndAttemptKilled ( arg ) ;
assertAppAndAttemptKilled ( arg ) ;
Assert . assertNotNull ( arg ) ;
Assert . assertNotNull ( arg ) ;
verify ( arg ) . <unk> ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assignment = <unk> . assignContainers ( arg ) ;
assignment . setType ( arg ) ;
attempt . setVMemKbytes ( arg ) ;
attempt . setVMemKbytes ( arg ) ;
attempt . <unk> ( arg ) ;
attempt . setCpuUsages ( arg ) ;
attempt . setCpuUsages ( arg ) ;
attempt . setCpuUsages ( arg ) ;
attempt . setCpuUsages ( arg ) ;
attempt . setCpuUsages ( arg ) ;
attemptInfo . error = StringInterner . weakIntern ( arg ) ;
attemptInfo . hostname = StringInterner . weakIntern ( arg ) ;
attemptInfo . hostname = StringInterner . weakIntern ( arg ) ;
attemptInfo . hostname = StringInterner . weakIntern ( arg ) ;
attemptInfo . rackname = StringInterner . weakIntern ( arg ) ;
attemptInfo . rackname = StringInterner . weakIntern ( arg ) ;
attemptInfo . rackname = StringInterner . weakIntern ( arg ) ;
attemptInfo . rackname = event . getRackName ( arg ) ;
attemptInfo . <unk> = StringInterner . weakIntern ( arg ) ;
AUDITLOG . info ( arg ) ;
AUDITLOG . info ( arg ) ;
AUDITLOG . warn ( arg ) ;
AUDITLOG . warn ( arg ) ;
b . append ( String . format (
storageID = impl . updateReplicaUnderRecovery ( arg ) ;
if ( <unk> ( arg ) ) {
<unk> = <unk> ( arg ) ;
<unk> . setBlockCollection ( arg ) ;
return new BufferedInputStream ( arg ) ;
bitField0_ = ( bitField0_ & ~ 0x00000008 ) ;
bitField0_ = ( bitField0_ & ~ <unk> ) ;
bitField0_ |= 0x00000008 ;
bitField0_ |= 0x00000010 ;
bitField0_ |= 0x00000010 ;
<unk> . setBlockCollection ( arg ) ;
<unk> . setBlockCollection ( arg ) ;
dm . <unk> ( arg ) ;
commitOrCompleteLastBlock ( arg ) ;
commitOrCompleteLastBlock ( arg ) ;
blockSize = fs . getDefaultBlockSize ( arg ) ;
blocks . add ( arg ) ;
blockTokenSecretManager . addKeys ( arg ) ;
blockManager . checkDecommissionStateInternal ( arg ) ;
setBlocks ( arg ) ;
setBlocks ( arg ) ;
setBlocks ( arg ) ;
<unk> = new com . google . protobuf . SingleFieldBuilder < org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto , org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . Builder , org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . <unk> > ( arg ) ;
blocksVolumeIndexes . add ( arg ) ;
blocks_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . getDefaultInstance ( arg ) ;
blocks_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . getDefaultInstance ( arg ) ;
blocks_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . getDefaultInstance ( arg ) ;
bm . blocksMap . addBlockCollection ( arg ) ;
boolean dstIsFile =! getFileStatus ( arg ) . <unk> ( arg ) ;
boolean dstIsFile = getFileStatus ( arg ) . isFile ( arg ) ;
boolean <unk> = file . isDirectory ( arg ) || ( <unk> & <unk> ) != 0 ;
boolean <unk> = new <unk> ( arg ) . <unk> ( arg ) ;
Boolean hasData = params . get ( arg ) ;
Boolean hasData = params . get ( arg ) ;
boolean <unk> = blockManager . getCorruptReplicaBlockIds ( arg ) != null ;
final boolean <unk> = <unk> ( arg ) ;
boolean <unk> = <unk> ;
boolean <unk> = i == addCloseOp . blocks . length - 1 ;
boolean <unk> = <unk> . get ( arg ) != null ;
<unk> ( arg ) ;
boolean sendAllCounters ;
boolean simulated = FsDatasetSpi . Factory . getFactory ( arg ) . isSimulated ( arg ) ;
boolean simulated = FsDatasetSpi . Factory . getFactory ( arg ) . isSimulated ( arg ) ;
boolean simulated = FSDatasetInterface . Factory . getFactory ( arg ) . isSimulated ( arg ) ;
boolean simulated = FSDatasetInterface . Factory . getFactory ( arg ) . isSimulated ( arg ) ;
boolean <unk> = backup . getRpcServer ( arg ) . getTransactionID ( arg ) == nn . getRpcServer ( arg ) . getTransactionID ( arg ) ;
return new BufferedOutputStream ( arg ) ;
bpMgr . addKeys ( arg ) ;
bpMgr . addKeys ( arg ) ;
bpNamenode = new DatanodeProtocolClientSideTranslatorPB ( arg ) ;
bpNamenode = dn . <unk> ( arg ) ;
bpRegistration . getStorageInfo ( arg ) . layoutVersion = HdfsConstants . LAYOUT_VERSION ;
writeProperties ( arg ) ;
actor . retrieveNamespaceInfo ( arg ) ;
dn . <unk> ( arg ) ;
doubleBuf . writeRaw ( arg ) ;
doubleBuf . <unk> ( arg ) . <unk> ( arg ) ;
builder . <unk> ( arg ) ;
builder . <unk> ( arg ) ;
reportBuilder . addBlocks ( arg ) ;
builder . addBlocks ( arg ) ;
builder . addBlocks ( arg ) ;
builder . addBlocks ( arg ) ;
builder . addBlocks ( arg ) ;
builder . setCapacity ( arg ) . setDfsUsed ( arg ) . setId ( arg ) . setLastUpdate ( arg ) . setLocation ( arg ) . setRemaining ( arg ) . setXceiverCount ( arg ) . build ( arg ) ;
builder . addNewTaragets ( arg ) ;
builder . addNewTaragets ( arg ) ;
byte [ ] buf = new byte [ FSConstants . IO_FILE_BUFFER_SIZE ] ;
byte [ ] buf = new byte [ HdfsConstants . IO_FILE_BUFFER_SIZE ] ;
byte [ ] <unk> = new byte [ 4 * HdfsConstants . MAX_PATH_LENGTH ] ;
byte [ ] <unk> = new byte [ type . size ] ;
byte [ ] <unk> = tokens [ 0 ] . getIdentifier ( arg ) ;
byte buf [ ] = new byte [ FSConstants . IO_FILE_BUFFER_SIZE ] ;
byte buf [ ] = new byte [ HdfsConstants . IO_FILE_BUFFER_SIZE ] ;
<unk> . setApplicationAttemptId ( arg ) ;
cId . setApplicationAttemptId ( arg ) ;
cId . setApplicationAttemptId ( arg ) ;
cId . setApplicationAttemptId ( arg ) ;
<unk> = EditLogFileInputStream . validateEditLog ( arg ) ;
call . <unk> ( arg ) ;
call . timestamp = Time . now ( arg ) ;
<unk> = DFSUtil . createClientDatanodeProtocolProxy ( arg ) ;
UserGroupInformation user = checkAcls ( arg ) ;
UserGroupInformation user = checkAcls ( arg ) ;
UserGroupInformation user = checkAcls ( arg ) ;
UserGroupInformation user = checkAcls ( arg ) ;
UserGroupInformation user = checkAcls ( arg ) ;
dn . <unk> ( arg ) ;
<unk> ( arg ) ;
<unk> = <unk> ( arg ) ;
<unk> ( arg ) ;
RemoteBlockReader2 . <unk> ( arg ) ;
checkpointBase = new Path ( arg ) ;
<unk> . reset ( arg ) ;
<unk> = nodes [ DFSUtil . getRandom ( arg ) . nextInt ( arg ) ] ;
<unk> = YarnConfiguration . <unk> ;
<unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> = new ArrayList < CLICommand > ( arg ) ;
client . setCluster ( arg ) ;
client . setCluster ( arg ) ;
client . setCluster ( arg ) ;
client . setCluster ( arg ) ;
client . forceKillApplication ( arg ) ;
client . forceKillApplication ( arg ) ;
client . finishApplication ( arg ) ;
fs2 . listStatus ( arg ) ;
fs2 . listStatus ( arg ) ;
client . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
client . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
client = DFSUtil . createNamenode ( arg ) ;
client = DFSUtil . createNamenode ( arg ) ;
client = DFSUtil . createNamenode ( arg ) ;
client = DFSUtil . createNamenode ( arg ) ;
client = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
client = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
client = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
client = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
client = NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
token . cancel ( arg ) ;
DataNodeTestUtils . getFSDataset ( arg ) . <unk> ( arg ) ;
cluster . getNameNodeRpc ( arg ) . addBlock ( arg ) ;
cluster . getNameNodeRpc ( arg ) . append ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . blockReport ( arg ) ;
cluster . getNameNodeRpc ( arg ) . getListing ( arg ) ;
cluster . getNameNodeRpc ( arg ) . getListing ( arg ) ;
cluster . transitionToActive ( arg ) ;
cluster . transitionToActive ( arg ) ;
cluster . transitionToActive ( arg ) ;
cluster . getNameNodeRpc ( arg ) . rollEditLog ( arg ) ;
cluster . getNameNodeRpc ( arg ) . <unk> ( arg ) ;
cluster . getNameNodeRpc ( arg ) . setSafeMode ( arg ) ;
cluster . getNameNodeRpc ( arg ) . setSafeMode ( arg ) ;
cluster . getNameNodeRpc ( arg ) . setSafeMode ( arg ) ;
cluster . getNameNodeRpc ( arg ) . setSafeMode ( arg ) ;
BlockManagerTestUtil . getComputedDatanodeWork ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
cluster . getNamesystem ( arg ) . getBlockManager ( arg ) . findAndMarkBlockAsCorrupt ( arg ) ;
refreshNodes ( arg ) ;
refreshNodes ( arg ) ;
refreshNodes ( arg ) ;
harness . shutdown ( arg ) ;
<unk> . getRpcServer ( arg ) . transitionToActive ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . manageNameDfsSharedDirs ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . manageNameDfsSharedDirs ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . manageNameDfsDirs ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . format ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . format ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . format ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . enableManagedDfsDirsRedundancy ( arg ) . format ( arg ) . startupOption ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . manageNameDfsDirs ( arg ) . checkExitOnShutdown ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . build ( arg ) ;
cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . <unk> ( arg ) . build ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) . getCommands ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) . getCommands ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) . getCommands ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) . getCommands ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) ;
cmds = NameNodeAdapter . sendHeartBeat ( arg ) ;
collector = <unk> ( arg ) ;
combined = KRB5_CIPHER_SUITES . toArray ( arg ) ;
combined = new String [ <unk> . length + KRB5_CIPHER_SUITES . size ( arg ) ] ;
committer = new <unk> ( arg ) ;
if ( <unk> != 0 ) <unk> ( arg ) ;
<unk> . set ( arg ) ;
<unk> = true ;
computeUserLimitAndSetHeadroom ( arg ) ;
catch ( arg ) {
Thread . sleep ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
<unk> . getConf ( arg ) . setInt ( arg ) ;
<unk> . <unk> ( arg ) ;
configureSuperUserIPAddresses ( arg ) ;
configureSuperUserIPAddresses ( arg ) ;
configureSuperUserIPAddresses ( arg ) ;
configureSuperUserIPAddresses ( arg ) ;
conf = ViewFileSystemTestSetup . createConfig ( arg ) ;
conf = ViewFileSystemTestSetup . createConfig ( arg ) ;
conf = new JobConf ( arg ) ;
connection . <unk> ( arg ) ;
connection = ( HttpURLConnection ) URLUtils . openConnection ( arg ) ;
connection = ( HttpURLConnection ) URLUtils . openConnection ( arg ) ;
container . <unk> ( arg ) ;
container . setLocalResources ( arg ) ;
container . cleanup ( arg ) ;
container . cleanup ( arg ) ;
container . cleanup ( arg ) ;
container . cleanup ( arg ) ;
container . cleanup ( arg ) ;
container . cleanup ( arg ) ;
container . exitCode = exitEvent . getExitCode ( arg ) ;
container . exitCode = exitEvent . getExitCode ( arg ) ;
tokens = ByteBuffer . wrap ( arg ) ;
tokens = ByteBuffer . wrap ( arg ) ;
container . setEnvironment ( arg ) ;
localResources . put ( arg ) ;
localResources . put ( arg ) ;
amContainerEnv = request . <unk> ( arg ) . getEnvironment ( arg ) ;
containerId . setApplicationAttemptId ( arg ) ;
containerId . setApplicationAttemptId ( arg ) ;
containerId = maps . remove ( arg ) . getId ( arg ) ;
containerId = reduces . remove ( arg ) . getId ( arg ) ;
<unk> containerManager = createContainerManager ( arg ) ;
<unk> = this . rmContext . getContainerTokenSecretManager ( arg ) . <unk> ( arg ) ;
conts = am . allocate ( arg ) . getAllocatedContainers ( arg ) ;
conts = am . allocate ( arg ) . getAllocatedContainers ( arg ) ;
<unk> ( arg ) ;
decommissioned ++ ;
<unk> = Long . parseLong ( arg ) ;
counters = EMPTY_COUNTERS ;
crc = ( crc >>> 8 ) ^ T8_0 [ ( crc ^ b ) & 0xff ] ;
crc = ( crc >>> 8 ) ^ T8_0 [ ( crc ^ b [ off ++ ] ) & 0xff ] ;
crc = ( crc >>> 8 ) ^ T [ T8_0_start + ( ( crc ^ b ) & 0xff ) ] ;
crc = ( crc >>> 8 ) ^ T [ T8_0_start + ( ( crc ^ b ) & 0xff ) ] ;
localCrc = ( localCrc >>> 8 ) ^ T8_0 [ ( localCrc ^ b [ off ++ ] ) & 0xff ] ;
crc |= ( <unk> & checksum [ i ] ) << ( ( checksum . length - i - 1 ) * 8 ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
return <unk> ( arg ) ;
createLockNodeAsync ( arg ) ;
createLockNodeAsync ( arg ) ;
catch ( arg ) {
previous = created . remove ( arg ) ;
previous = created . set ( arg ) ;
created = created && client . <unk> ( arg ) ;
Token < ? > tokens [ ] = fs . addDelegationTokens ( arg ) ;
loginUser . addCredentials ( arg ) ;
<unk> . addToken ( arg ) ;
ugi . addCredentials ( arg ) ;
minSpaceNode = node ;
newBuf = <unk> . <unk> ( arg ) ;
current . namenode = DFSUtil . createNNProxyWithClientProtocol ( arg ) ;
currentPeriodStart = Time . now ( arg ) ;
dn . data . <unk> ( arg ) ;
data = factory . newInstance ( arg ) ;
data = factory . newInstance ( arg ) ;
data = factory . <unk> ( arg ) ;
datanode . metrics . addFsyncNanos ( arg ) ;
datanode . metrics . addFsyncNanos ( arg ) ;
datanode . metrics . addFsyncNanos ( arg ) ;
datanodeIDs_ = com . google . protobuf . LazyStringArrayList . <unk> ;
datanodeIDs_ = new com . google . protobuf . <unk> ( arg ) ;
datanodeIDs_ = new com . google . protobuf . LazyStringArrayList ( arg ) ;
decoder = DecoderFactory . get ( arg ) . <unk> ( arg ) ;
decoder = DecoderFactory . <unk> ( arg ) . <unk> ( arg ) ;
return len ;
<unk> = NetUtils . getHostPortString ( arg ) ;
Path <unk> = fc . makeQualified ( arg ) ;
setDelegationToken ( arg ) ;
delegationTokenRenewer . applicationFinished ( arg ) ;
delegationTokenRenewer . applicationFinished ( arg ) ;
<unk> = cf . getOpt ( arg ) || cf . getOpt ( arg ) ;
DELETE_ON_EXIT . clear ( arg ) ;
DELETE_ON_EXIT . put ( arg ) ;
<unk> [ i ] = blockManager . getDatanodeManager ( arg ) . getDatanode ( arg ) ;
dfs . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
dfs . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
dfs . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
dfs . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
dfs . dfs . getLeaseRenewer ( arg ) . interruptAndJoin ( arg ) ;
dfs . lastLeaseRenewal = Time . now ( arg ) - <unk> ;
dfs . <unk> ( arg ) ;
dfs = cluster . getFileSystem ( arg ) ;
dfs = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . format ( arg ) . build ( arg ) ;
dfs = new MiniDFSCluster . Builder ( arg ) . <unk> ( arg ) . numDataNodes ( arg ) . startupOption ( arg ) . format ( arg ) . build ( arg ) ;
dfsClient . <unk> ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
NameNodeAdapter . getDtSecretManager ( arg ) . startThreads ( arg ) ;
<unk> = new MiniDFSCluster . Builder ( arg ) . numDataNodes ( arg ) . format ( arg ) . racks ( arg ) . build ( arg ) ;
dir . replaceINodeFile ( arg ) ;
<unk> = new Path ( arg ) ;
dir = volumes . get ( arg ) . <unk> ( arg ) ;
dirReports [ report . <unk> ( arg ) ] = report . getValue ( arg ) . get ( arg ) ;
handler . handle ( arg ) ;
handler . handle ( arg ) ;
dispatcher = createDispatcher ( arg ) ;
System . <unk> . println ( arg ) ;
<unk> = StringInterner . weakIntern ( arg ) ;
super . tearDown ( arg ) ;
html . <unk> ( arg ) ;
throw e ;
<unk> = nodeReg . getIpAddr ( arg ) ;
SimulatedFSDataset . setFactory ( arg ) ;
dnId . setStorageID ( arg ) ;
dnRegistration = new DatanodeRegistration ( arg ) ;
dnRegistration = nameNodeProto . <unk> ( arg ) ;
dnp . blockReceivedAndDeleted ( arg ) ;
dnp . blockReceivedAndDeleted ( arg ) ;
dnp . blockReceived ( arg ) ;
<unk> . getRpcServer ( arg ) . rollEditLog ( arg ) ;
FileUtil . copy ( arg ) ;
double waitTime = timeWindow * failures + timeWindow * ( failures + 1 ) * DFSUtil . getRandom ( arg ) . <unk> ( arg ) ;
<unk> ( arg ) ;
<unk> = getFileLinkStatus ( arg ) ;
addRenewAction ( arg ) ;
addRenewAction ( arg ) ;
dtRenewer = <unk> . toString ( arg ) ;
resultCode = <unk> ( arg ) ;
LOG . error ( arg ) ;
<unk> . writeRaw ( arg ) ;
editLog . openForWrite ( arg ) ;
<unk> . <unk> ( arg ) ;
editsStreams . add ( arg ) ;
<unk> = Time . now ( arg ) - start ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
elector . processWatchEvent ( arg ) ;
emptyTime = Time . now ( arg ) ;
emptyTime = Time . now ( arg ) ;
<unk> = <unk> . get ( arg ) . <unk> ( arg ) ;
endTime = Time . now ( arg ) ;
entries . put ( arg ) ;
<unk> . add ( arg ) ;
out . println ( arg ) ;
context . reportErrorOnStorageDirectory ( arg ) ;
context . reportErrorOnStorageDirectory ( arg ) ;
<unk> = <unk> ( arg ) ;
event = new RMAppFinishedAttemptEvent ( arg ) ;
event = new RMAppEvent ( arg ) ;
if ( eventHandlingThread != null ) eventHandlingThread . interrupt ( arg ) ;
if ( eventHandlingThread != null ) eventHandlingThread . join ( arg ) ;
<unk> . <unk> . <unk> ( arg ) ;
executionTime [ <unk> ] += ( Time . now ( arg ) - startTime ) ;
executionTime [ <unk> ] += ( Time . now ( arg ) - startTime ) ;
executionTime [ <unk> ] += ( Time . now ( arg ) - startTime ) ;
executionTime [ <unk> ] += ( Time . now ( arg ) - startTime ) ;
executionTime [ <unk> ] += ( Time . now ( arg ) - startTime ) ;
exitCode = 1 ;
exitCode = 1 ;
<unk> = HdfsConstants . INVALID_TXID ;
<unk> ( arg ) ;
fReader = new InputStreamReader ( arg ) ;
fReader = new InputStreamReader ( arg ) ;
fReader = new InputStreamReader ( arg ) ;
fReader = new InputStreamReader ( arg ) ;
fReader = new InputStreamReader ( arg ) ;
fStatus = nn . getFileInfo ( arg ) ;
fStatus = nn . getFileInfo ( arg ) ;
fStatus = nn . getFileInfo ( arg ) ;
<unk> = log . <unk> ( arg ) ;
<unk> = ViewFileSystemTestSetup . <unk> ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
Assert . fail ( arg ) ;
failures = failures == null ? Integer . valueOf ( arg ) : failures ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fc . mkdir ( arg ) ;
fcView . resolvePath ( arg ) ;
fcView . resolvePath ( arg ) ;
fcView . resolvePath ( arg ) ;
<unk> . <unk> ( arg ) ;
fds = DataNodeTestUtils . getFSDataset ( arg ) ;
fds = ( <unk> ) DataNodeTestUtils . getFSDataset ( arg ) ;
file . <unk> ( arg ) ;
file . setModificationTime ( arg ) ;
bc . setBlock ( arg ) ;
<unk> = stat ;
<unk> = ( cl == null ) ? null : Long . parseLong ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
final ApplicationAttemptId appAttemptId = <unk> ( arg ) ;
final YarnApplicationState state = <unk> ( arg ) ;
final List < DatanodeDescriptor > <unk> = blockManager . getDatanodeManager ( arg ) . getDecommissioningNodes ( arg ) ;
final Block <unk> = DataNodeTestUtils . getFSDataset ( arg ) . getStoredBlock ( arg ) ;
final LightWeightHashSet < Block > blocks = node2blocks . remove ( arg ) ;
final LightWeightHashSet < Block > set = node2blocks . get ( arg ) ;
final LightWeightHashSet < Block > v = node2blocks . get ( arg ) ;
final Map < String , Map < String , InetSocketAddress >> namenodes = DFSUtil . getNNServiceRpcAddresses ( arg ) ;
final Map < String , Map < String , InetSocketAddress >> namenodes = DFSUtil . getNNServiceRpcAddresses ( arg ) ;
final Configuration conf = NameNodeHttpServer . getConfFromContext ( arg ) ;
final Configuration conf = NameNodeHttpServer . getConfFromContext ( arg ) ;
final Configuration conf = NameNodeHttpServer . getConfFromContext ( arg ) ;
final Configuration conf = NameNodeHttpServer . getConfFromContext ( arg ) ;
final Configuration conf = ( Configuration ) <unk> . <unk> ( arg ) ;
final Configuration conf = NameNodeHttpServer . getConfFromContext ( arg ) ;
final Configuration conf = getConfig ( arg ) ;
final HdfsDataInputStream dis = in ;
final HdfsDataInputStream in = ( HdfsDataInputStream ) fs . open ( arg ) ;
final DFSOutputStream result = DFSOutputStream . newStreamForCreate ( arg ) ;
final DFSTestUtil util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
final DatanodeDescriptor <unk> = blockManager . getDatanodeManager ( arg ) . getDatanode ( arg ) ;
final DatanodeDescriptor targets [ ] = blockplacement . chooseTarget ( arg ) ;
final DatanodeID datanode = NamenodeJspHelper . getRandomDatanode ( arg ) ;
final DatanodeID datanode = getRandomDatanode ( arg ) ;
final DatanodeInfo [ ] <unk> = cluster . getNameNodeRpc ( arg ) . <unk> ( arg ) ;
final DatanodeInfo [ ] targets = blockManager . <unk> ( arg ) . chooseTarget ( arg ) ;
final DatanodeManager dm = blockmanager . getDatanodeManager ( arg ) ;
final DatanodeManager dm = blockManager . getDatanodeManager ( arg ) ;
final DistCpV1distcp = new DistCpV1 ( arg ) ;
final DistCpV1distcp = new DistCpV1 ( arg ) ;
final DistributedFileSystem dfs = cluster . getFileSystem ( arg ) ;
final DistributedFileSystem dfs = cluster . getFileSystem ( arg ) ;
final DistributedFileSystem dfs = cluster . getFileSystem ( arg ) ;
final DistributedFileSystem dfs = cluster . getFileSystem ( arg ) ;
final FsDatasetSpi . Factory < ? extends FsDatasetSpi < ? >> factory = FsDatasetSpi . Factory . getFactory ( arg ) ;
final FsDatasetSpi . Factory < ? extends FsDatasetSpi < ? >> factory = FsDatasetSpi . Factory . getFactory ( arg ) ;
final FSDatasetInterface . Factory < ? extends FSDatasetInterface < ? >> factory = FSDatasetInterface . Factory . getFactory ( arg ) ;
final FsDatasetSpi < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final FsDatasetSpi < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final FsDatasetSpi < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final FsDatasetSpi < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final FSImage <unk> = NameNodeHttpServer . <unk> ( arg ) ;
final BlockCollection [ ] inodes = <unk> . <unk> ( arg ) ;
final BlockManager bm = cluster . getNamesystem ( arg ) . getBlockManager ( arg ) ;
final FSNamesystem namesystem = FSNamesystem . loadFromDisk ( arg ) ;
final FSNamesystem namesystem = FSNamesystem . loadFromDisk ( arg ) ;
final FSVolume v = ( FSVolume ) <unk> . getVolume ( arg ) ;
final File f = DataNodeTestUtils . getFile ( arg ) ;
final File metafile = DatanodeUtil . getMetaFile ( arg ) ;
final FadvisedFileRegion <unk> = new FadvisedFileRegion ( arg ) ;
final FileStatus <unk> = getFileLinkStatus ( arg ) ;
final FileStatus <unk> = getFileLinkStatus ( arg ) ;
final FileSystem fs = HATestUtil . configureFailoverFs ( arg ) ;
final FSDatasetInterface . Factory < ? extends FSDatasetInterface < ? >> factory = FSDatasetInterface . Factory . getFactory ( arg ) ;
final FSDatasetInterface < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final FSDatasetInterface < ? > dataSet = DataNodeTestUtils . getFSDataset ( arg ) ;
final HdfsFileStatus file = namenode . getRpcServer ( arg ) . getFileInfo ( arg ) ;
final <unk> . Op op = <unk> . Op . <unk> ;
HttpURLConnection conn = <unk> ( arg ) ;
final INodeDirectoryWithSnapshot r = new INodeDirectoryWithSnapshot ( arg ) ;
final INodeDirectoryWithSnapshot root = srcRoot . <unk> ( arg ) ;
final INodeDirectorySnapshottable <unk> = new INodeDirectorySnapshottable ( arg ) ;
final INodeFile <unk> = INodeFile . valueOf ( arg ) ;
INodeFileUnderConstruction pendingFile = checkLease ( arg ) ;
INodeFileUnderConstruction pendingFile = checkLease ( arg ) ;
final <unk> <unk> = rootDir . <unk> ( arg ) ;
final InetSocketAddress address = NetUtils . createSocketAddrForHost ( arg ) ;
final InetSocketAddress nnAddr = SecurityUtil . <unk> ( arg ) ;
final <unk> <unk> = <unk> ( arg ) ;
final List < ? extends FsVolumeSpi > volumes = dataset . getVolumes ( arg ) ;
final List < FSVolume > volumeList = new ArrayList < FSVolume > ( arg ) ;
final List < ? extends FSVolumeInterface > volumes = dataset . getVolumes ( arg ) ;
final Map < String , Map < String , InetSocketAddress >> namenodes = DFSUtil . getNNServiceRpcAddresses ( arg ) ;
final Map < String , Map < String , InetSocketAddress >> namenodes = DFSUtil . getNNServiceRpcAddresses ( arg ) ;
final LocalResource resource = <unk> ( arg ) ;
final Map < Path , List < String >> localResources = container . <unk> ( arg ) ;
final Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
final Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
final Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
final Collection < URI > namenodes = DFSUtil . getNsServiceRpcUris ( arg ) ;
final Map < ? , ? > json = run ( arg ) ;
final Map < ? , ? > json = run ( arg ) ;
final Map < ? , ? > json = run ( arg ) ;
final Map < ? , ? > json = run ( arg ) ;
final Map < ? , ? > json = run ( arg ) ;
final Map < ? , ? > m ;
final Map < String , Object > m = new TreeMap < String , Object > ( arg ) ;
final Map < String , Object > m = new TreeMap < String , Object > ( arg ) ;
final Map < String , Object > m = new TreeMap < String , Object > ( arg ) ;
final Map < String , Object > m = new TreeMap < String , Object > ( arg ) ;
final Map < ? , ? > m = run ( arg ) ;
final Map < ? , ? > m = run ( arg ) ;
final Map < ? , ? > m = run ( arg ) ;
final Map < ? , ? > m = run ( arg ) ;
final Map < String , String > <unk> = launchContext . getEnvironment ( arg ) ;
final MessageDigest digester = getDigester ( arg ) ;
final LengthInputStream <unk> = datanode . data . <unk> ( arg ) ;
final MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . racks ( arg ) . simulatedCapacities ( arg ) . build ( arg ) ;
final MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . racks ( arg ) . simulatedCapacities ( arg ) . build ( arg ) ;
final MiniDFSCluster cluster = new MiniDFSCluster . Builder ( arg ) . nnTopology ( arg ) . numDataNodes ( arg ) . racks ( arg ) . simulatedCapacities ( arg ) . format ( arg ) . build ( arg ) ;
final NameNode namenode = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final NamenodeProtocols namenode = cluster . getNameNodeRpc ( arg ) ;
final NamenodeProtocols namenode = cluster . getNameNodeRpc ( arg ) ;
final NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final NameNode nn = NameNodeHttpServer . getNameNodeFromContext ( arg ) ;
final Path <unk> = resolve ( arg ) ;
final Path newWorkingDir = resolve ( arg ) ;
final Path newWorkingDir = new Path ( arg ) ;
final Path <unk> = <unk> ( arg ) ;
final PrintWriter out = new PrintWriter ( arg ) ;
final PrintWriter out = new PrintWriter ( arg ) ;
final RetryPolicy defaultPolicy = RetryUtils . getDefaultRetryPolicy ( arg ) ;
final RetryPolicy defaultPolicy = getDefaultRetryPolicy ( arg ) ;
final RetryPolicy defaultPolicy = getDefaultRetryPolicy ( arg ) ;
final RoundRobinVolumesPolicy < FsVolumeSpi > policy = new RoundRobinVolumesPolicy < FsVolumeSpi > ( arg ) ;
final FiCaSchedulerApp application = ( FiCaSchedulerApp ) ( <unk> . <unk> ( arg ) [ 0 ] ) ;
final Server <unk> = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final Server server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
final File TEST_LOG_NAME = new File ( arg ) ;
final File TEST_LOG_NAME = new File ( arg ) ;
final String [ ] args = new String [ <unk> ] ;
final String path = ServletUtil . getDecodedPath ( arg ) ;
final String hostname = host instanceof DatanodeInfo ? ( ( DatanodeInfo ) host ) . getHostName ( arg ) : host . getIpAddr ( arg ) ;
final String <unk> = <unk> ;
final String nnAddr = StringEscapeUtils . escapeHtml ( arg ) ;
final String <unk> = <unk> . toString ( arg ) ;
final String path = ServletUtil . getDecodedPath ( arg ) ;
final String query = op . toQueryString ( arg ) + delegationQuery +&+ new NamenodeRpcAddressParam ( arg ) + Param . toSortedString ( arg ) ;
final String query = op . toQueryString ( arg ) + delegationQuery +&+ new NamenodeRpcAddressParam ( arg ) + Param . toSortedString ( arg ) ;
String <unk> = null ;
final InetSocketAddress serviceAddr = conf . getSocketAddr ( arg ) ;
final InetSocketAddress <unk> = serviceAddr ;
final String <unk> = request . <unk> ( arg ) ;
final String username = Text . <unk> ( arg ) . <unk> ( arg ) ;
final TaskAttemptStateInternal oldState = getInternalState ( arg ) ;
final Token < DelegationTokenIdentifier > token = getDelegationToken ( arg ) ;
final Token < DelegationTokenIdentifier > token = getDelegationToken ( arg ) ;
final GetImageParams <unk> = new GetImageParams ( arg ) ;
final PriorityQueue < EditLogInputStream > allStreams = new PriorityQueue < EditLogInputStream > ( arg ) ;
final PriorityQueue < EditLogInputStream > allStreams = new PriorityQueue < EditLogInputStream > ( arg ) ;
final PriorityQueue < EditLogInputStream > allStreams = new PriorityQueue < EditLogInputStream > ( arg ) ;
final UnderReplicatedBlocks neededReplications = cluster . getNameNode ( arg ) . getNamesystem ( arg ) . getBlockManager ( arg ) . neededReplications ;
UserGroupInformation ugi = null ;
final int <unk> = <unk> ;
final String <unk> <unk> ;
d = search ( arg ) ;
d = search ( arg ) ;
final int len = mydata . length - offset ;
final int len = mydata . length - offset ;
final int <unk> = HdfsConstants . MAX_PATH_LENGTH ;
final int <unk> = blockManager . <unk> ( arg ) - <unk> ;
final int min = 6 ;
final int min = WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) ;
final int numNodes = 2 ;
final int numNodes = 3 ;
final int <unk> = 10 ;
final int thech = readAByte ( arg ) ;
final int thech = readAByte ( arg ) ;
final int thech = readAByte ( arg ) ;
final int thech = readAByte ( arg ) ;
final int thech = readAByte ( arg ) ;
final String <unk> = <unk> ( arg ) ;
final long <unk> = Time . now ( arg ) - <unk> ( arg ) ;
final long end = Time . now ( arg ) ;
<unk> = offset ;
final long millis = Time . now ( arg ) ;
final long <unk> = renewalTime - Time . now ( arg ) ;
final long n = length . getValue ( arg ) != null ? length . getValue ( arg ) : in . getVisibleLength ( arg ) - offset . getValue ( arg ) ;
final long now = Time . now ( arg ) ;
final long now = Time . now ( arg ) ;
final long start = Time . now ( arg ) ;
final long startTime = Time . now ( arg ) ;
final long startTime = Time . now ( arg ) ;
final long startTime = Time . now ( arg ) ;
final long t = Time . now ( arg ) - starttime ;
finishState = FinalApplicationStatus . FAILED ;
finishState = FinalApplicationStatus . KILLED ;
finishState = FinalApplicationStatus . SUCCEEDED ;
finishTimeEpoch = Time . now ( arg ) ;
finishTimeEpoch = Time . now ( arg ) ;
<unk> ( arg ) ;
str = <unk> of <unk> groups  + groupsStr +  <unk> allowed ;
firstTxId = HdfsConstants . INVALID_TXID ;
firstTxId = op . getTransactionId ( arg ) ;
IOUtils . closeStream ( arg ) ;
float absCapacity = getParent ( arg ) . getAbsoluteCapacity ( arg ) * capacity ;
float capacity = queue . equals ( arg ) ? <unk> : getFloat ( arg ) ;
float <unk> = CompressionEmulationUtil . <unk> ( arg ) ;
float absoluteUsedCapacity = <unk> ;
<unk> ( arg ) ;
<unk> ( boolean written =! <unk> ; ! written ; written = nameNodeProto . <unk> ( arg ) ) ;
realProxy = null ;
realProxy = null ;
<unk> = SecurityUtil . getByName ( arg ) . getHostName ( arg ) ;
fqdn = canonicalize ( arg ) ;
fromEventIdx += events . length ;
fromEventIdx = 0 ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
HAServiceProtocolHelper . transitionToStandby ( arg ) ;
fs . create ( arg ) . close ( arg ) ;
fs . setDelegationToken ( arg ) ;
fc . delete ( arg ) ;
fc . listStatus ( arg ) ;
fc . mkdir ( arg ) ;
fs . <unk> ( arg ) ;
fc = FileContext . getFileContext ( arg ) ;
fc = FileContext . getFileContext ( arg ) ;
fs = HATestUtil . configureFailoverFs ( arg ) ;
fs = HATestUtil . configureFailoverFs ( arg ) ;
fs = HATestUtil . configureFailoverFs ( arg ) ;
fsDir . replaceINodeFile ( arg ) ;
fsDir . rootDir . setModificationTime ( arg ) ;
fsDir . rootDir . <unk> ( arg ) ;
fsDir . rootDir . <unk> ( arg ) ;
fsImage . getEditLog ( arg ) . <unk> ( arg ) ;
fsNamesys . getBlockManager ( arg ) . addBlockCollection ( arg ) ;
ViewFileSystemTestSetup . tearDown ( arg ) ;
<unk> . addCredentials ( arg ) ;
credentials = null ;
<unk> . openForWrite ( arg ) ;
fsn . getBlockManager ( arg ) . blocksMap . addINode ( arg ) ;
BlockManagerTestUtil . getComputedDatanodeWork ( arg ) ;
fsn . getBlockManager ( arg ) . addINode ( arg ) ;
dm . refreshNodes ( arg ) ;
fsn = FSNamesystem . loadFromDisk ( arg ) ;
fsn = FSNamesystem . loadFromDisk ( arg ) ;
fsn = FSNamesystem . loadFromDisk ( arg ) ;
fsn = FSNamesystem . loadFromDisk ( arg ) ;
fsn = FSNamesystem . loadFromDisk ( arg ) ;
blockmanager . checkDecommissionStateInternal ( arg ) ;
namesystem . <unk> ( arg ) ;
numBytes_ = input . readUInt64 ( arg ) ;
if ( ! getConfig ( arg ) . getBoolean ( arg ) ) {
getFSofPath ( arg ) . mkdir ( arg ) ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
HAServiceProtocolHelper . transitionToStandby ( arg ) ;
getRemoteNamenodeProxy ( arg ) . <unk> ( arg ) ;
<unk> ( arg ) ;
invoke ( arg ) ;
getLeafQueue ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> = true ;
group . <unk> ( arg ) ;
dispatcher . getEventHandler ( arg ) . handle ( arg ) ;
hash = ( 53 * hash ) + hashEnum ( arg ) ;
hash = ( 53 * hash ) + hashEnum ( arg ) ;
hash = hash * <unk> + ( int ) dataLayoutVersion ;
<unk> . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) . th ( arg ) ;
connectionContext . <unk> ( arg ) ;
connectionContext = ProtoUtil . <unk> ( arg ) ;
header [ 0 ] = ( byte ) ( type . id & 0xff ) ;
<unk> ( arg ) ;
homeDir = ( base . equals ( arg ) ? this . makeQualified ( arg ) : this . makeQualified ( arg ) ) ;
homeDir = ( base . equals ( arg ) ? this . makeQualified ( arg ) : this . makeQualified ( arg ) ) ;
<unk> = InetAddress . <unk> ( arg ) ;
hostname = host . getIpAddr ( arg ) ;
html . div ( arg ) . _ ( arg ) . div ( arg ) . div ( arg ) . div ( arg ) . div ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . div ( arg ) . _ ( arg ) . div ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . div ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
html . div ( arg ) . h3 ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
html . div ( arg ) . h3 ( arg ) . _ ( arg ) . _ ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . div ( arg ) . _ ( arg ) ;
html . div ( arg ) . h3 ( arg ) . _ ( arg ) . _ ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
html . div ( arg ) . h3 ( arg ) . ul ( arg ) . li ( arg ) . li ( arg ) . li ( arg ) . _ ( arg ) . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
html . link ( arg ) . link ( arg ) . script ( arg ) . script ( arg ) . script ( arg ) . script ( arg ) . <unk> ( arg ) ;
i . setBlocks ( arg ) ;
id . setApplicationAttemptId ( arg ) ;
id . setApplicationAttemptId ( arg ) ;
if ( ! <unk> . isDirectory ( arg ) ) continue ;
if ( ! <unk> ) return false ;
if ( ! isSecurityEnabled ( arg ) || user . getAuthenticationMethod ( arg ) != AuthenticationMethod . KERBEROS ||! isKeytab ) return ;
if ( ! isSecurityEnabled ( arg ) || user . getAuthenticationMethod ( arg ) != AuthenticationMethod . KERBEROS ||! <unk> ) return ;
if ( ! <unk> . isEmpty ( arg ) ) list . add ( arg ) ;
if ( ! <unk> . isDirectory ( arg ) ) throw new IOException ( arg ) ;
if ( srcFS . getFileStatus ( arg ) . isDirectory ( arg ) ) return false ;
if ( ! stat . isDirectory ( arg ) ) throw new <unk> ( arg ) ;
if ( obj == null ) return false ;
if ( ( arg ) % <unk> . <unk> == 0 ) nameNodeProto . <unk> ( arg ) ;
if ( replication == safeReplication ) this . blockSafe ++ ;
if ( replication == safeReplication ) this . blockSafe ++ ;
if ( LOG . isInfoEnabled ( arg ) ) LOG . info ( arg ) ;
if ( LOG . isInfoEnabled ( arg ) ) LOG . info ( arg ) ;
if ( Time . now ( arg ) - start > <unk> ) break ;
if ( Time . now ( arg ) - start > <unk> ) assertTrue ( arg ) ;
if ( actionName == null || actionName . isEmpty ( arg ) ) throw new IllegalArgumentException ( arg ) ;
if ( attributeName == null || attributeName . isEmpty ( arg ) ) throw new IllegalArgumentException ( arg ) ;
<unk> ( arg ) ;
cluster . shutdown ( arg ) ;
cluster . shutdown ( arg ) ;
if ( <unk> == null ) return false ;
if ( ! <unk> ( arg ) ) return false ;
if ( Renewer . counter == numberOfExpectedRenewals ) break ;
if ( elf . hasCorruptHeader ( arg ) || elf . <unk> ( arg ) ) continue ;
if ( fs == null ) fs = new <unk> ( arg ) ;
if ( upgradeManager . <unk> ( arg ) ) throw new <unk> ( arg ) ;
if ( <unk> == 0 ) return ;
if ( deletionInterval == 0 ) return false ;
assumeTrue ( arg ) ;
assumeTrue ( arg ) ;
if ( lastTime + <unk> > Time . now ( arg ) ) return ;
if ( datanodeMap . get ( arg ) != null ) <unk> = null ;
if ( nn . getFSImage ( arg ) . isUpgradeFinalized ( arg ) ) return new FinalizeCommand ( arg ) ;
if ( nn . getFSImage ( arg ) . isUpgradeFinalized ( arg ) &&! nn . <unk> ( arg ) ) return new FinalizeCommand ( arg ) ;
if ( null == <unk> ) throw new PathNotFoundException ( arg ) ;
if ( proto . <unk> ( arg ) <= 0 &&! proto . <unk> ( arg ) ) return false ;
if ( <unk> ) return null ;
if ( DFSUtil . getRandom ( arg ) . <unk> ( arg ) ) <unk> = node ;
if ( ( arg ) replication == safeReplication ) this . blockSafe ++ ;
if ( <unk> == null ) throw new <unk> ( arg ) ;
if ( clientRpcServer != null ) clientRpcServer . stop ( arg ) ;
if ( <unk> ) <unk> ( arg ) ;
if ( type . size == 0 ) return ;
if ( type . size == 0 ) return ;
if ( ! srcFS . getFileStatus ( arg ) . isDirectory ( arg ) ) return false ;
if ( <unk> . isSymlink ( arg ) ) return null ;
if ( <unk> >= checkpointConf . getTxnCount ( arg ) ) <unk> = true ;
if ( version != HdfsConstants . LAYOUT_VERSION ) throw new IncorrectVersionException ( arg ) ;
if ( version != FSConstants . LAYOUT_VERSION ) throw new IncorrectVersionException ( arg ) ;
<unk> . cancel ( arg ) ;
in . get ( arg ) . close ( arg ) ;
in = new HdfsDataInputStream ( arg ) ;
out . <unk> ( arg ) ;
inSafeMode = dfs . setSafeMode ( arg ) ;
inSafeMode = dfs . isInSafeMode ( arg ) ;
<unk> += p . <unk> ( arg ) ;
counters . incrAllCounters ( arg ) ;
index = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
info ( arg ) . _ ( arg ) . _ ( arg ) ;
info . <unk> = StringInterner . weakIntern ( arg ) ;
info . jobStatus = StringInterner . weakIntern ( arg ) ;
info . queues = getQueues ( arg ) ;
info . username = StringInterner . weakIntern ( arg ) ;
<unk> [ i ] = DFSTestUtil . getLocalDatanodeInfo ( arg ) ;
inputLines = Long . parseLong ( arg ) ;
realProxy = <unk> ( arg ) ;
int [ ] r = BlockManagerTestUtil . <unk> ( arg ) ;
int <unk> = out . <unk> ( arg ) ;
int <unk> = <unk> ;
long blockSize = fs . getDefaultBlockSize ( arg ) ;
int blockSize = this . readAByte ( arg ) ;
int <unk> = <unk> ( arg ) ;
float capacity = getFloat ( arg ) ;
int checksumSize = <unk> . getChecksumSize ( arg ) ;
int decommissioned = 0 ;
int count = dfsClient . getConf ( arg ) . <unk> ;
int count = parent . getChildrenList ( arg ) . size ( arg ) ;
int <unk> = ( int ) bsR ( arg ) ;
long <unk> = out . getPos ( arg ) ;
long <unk> = out . getPos ( arg ) ;
int <unk> = <unk> ? 0 : Gridmix . MISSING_DIST_CACHE_FILES_ERROR ;
int <unk> = 0 ;
int <unk> = <unk> . <unk> ( arg ) ;
int <unk> = conf . getInt ( arg ) ;
int <unk> = metrics . <unk> ( arg ) ;
long inputLines = 1 ;
int <unk> = nodes [ 0 ] . <unk> ( arg ) ;
int keyIndex = DFSUtil . getRandom ( arg ) . nextInt ( arg ) + i ;
int keyIndex = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
int len = WritableUtils . readVIntInRange ( arg ) ;
int length = in . <unk> ( arg ) ;
int length = WritableUtils . readVIntInRange ( arg ) ;
int length = ProtoUtil . readRawVarint32 ( arg ) ;
int length = ProtoUtil . readRawVarint32 ( arg ) ;
int length = ProtoUtil . readRawVarint32 ( arg ) ;
int length = ProtoUtil . readRawVarint32 ( arg ) ;
int limit = CSQueueUtils . <unk> ( arg ) ;
final int <unk> = <unk> ( arg ) ;
int <unk> = this . readAByte ( arg ) ;
int maps = <unk> ;
float <unk> = getFloat ( arg ) ;
int <unk> = conf . getInt ( arg ) ;
int n = IOUtils . <unk> ( arg ) ;
int successful = 0 , <unk> = 0 , <unk> = 0 ;
int nnRpcPort = NameNode . DEFAULT_PORT ;
int nnRpcPort = DFSConfigKeys . DFS_NAMENODE_RPC_PORT_DEFAULT ;
int <unk> = job . <unk> ( arg ) ;
int <unk> = 0 ;
conf . setInt ( arg ) ;
long numEdits = 0 ;
long numEdits = loader . loadFSEdits ( arg ) ;
long numEdits = loader . loadFSEdits ( arg ) ;
long numEdits = testLoad ( arg ) ;
long numEdits = testLoad ( arg ) ;
long <unk> = loader . loadFSEdits ( arg ) ;
short numExpectedReplicas = file . getReplication ( arg ) ;
long <unk> = 0 ;
int numNodes = <unk> . size ( arg ) ;
EnumMap < FSEditLogOpCodes , Holder < Integer >> <unk> = new EnumMap < FSEditLogOpCodes , Holder < Integer >> ( arg ) ;
int <unk> = <unk> ;
int pktBufSize = PacketHeader . <unk> ;
int pktSize = payloadLen + PacketHeader . PKT_HEADER_LEN - HdfsConstants . BYTES_IN_INTEGER ;
int pktSize = payloadLen + PacketHeader . PKT_HEADER_LEN - FSConstants . BYTES_IN_INTEGER ;
int port = dn . getXferAddress ( arg ) . getPort ( arg ) ;
long <unk> = out . getPos ( arg ) ;
long <unk> = out . getPos ( arg ) ;
int processingTime = ( int ) ( Time . now ( arg ) - startTime ) ;
int processingTime = ( int ) ( Time . now ( arg ) - startTime ) ;
int rand = DFSUtil . <unk> ( arg ) . nextInt ( arg ) ;
int <unk> = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
int <unk> = ( int ) Math . min ( arg ) ;
int repls = ns . getBlockManager ( arg ) . numCorruptReplicas ( arg ) ;
int result = <unk> . hashCode ( arg ) ;
int <unk> = dfsClient . getConf ( arg ) . <unk> ;
int <unk> = 0 ;
int size = doubleBuf . countBufferedBytes ( arg ) ;
int <unk> = HdfsConstants . LAYOUT_VERSION ;
int <unk> = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
int <unk> = INodeDirectory . <unk> ( arg ) ;
TestType testType = null ;
int <unk> = uri . getPort ( arg ) ;
int thech = this . readAByte ( arg ) ;
int <unk> = <unk> + results . size ( arg ) ;
DataChecksum . Type type = DataChecksum . Type . valueOf ( arg ) ;
IOUtils . writeFully ( arg ) ;
IOUtils . writeFully ( arg ) ;
long zvec = ( bsBuffShadow >> ( arg ) ) & ( ( 1 << zn ) - 1 ) ;
<unk> = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . setSecretManager ( arg ) . build ( arg ) ;
<unk> = <unk> && <unk> && <unk> && <unk> && <unk> && <unk> && <unk> ;
<unk> = ( ( ! nameNode . isInSafeMode ( arg ) ||! <unk> ) && <unk> [ ClientProtocol . <unk> ] != 0 ) ;
cnns = DFSUtil . <unk> ( arg ) ;
writeProperties ( arg ) ;
localDirs . remove ( arg ) ;
PathData item = new PathData ( arg ) ;
jas . closeStream ( arg ) ;
jas . closeStream ( arg ) ;
in = new java . <unk> . FileInputStream ( arg ) ;
<unk> . setForcejobCompletion ( arg ) ;
<unk> = Time . now ( arg ) ;
job . eventHandler . handle ( arg ) ;
job . fs = job . getFileSystem ( arg ) ;
<unk> . addCredentials ( arg ) ;
job . <unk> . findCounter ( arg ) . increment ( arg ) ;
job = Job . getInstance ( arg ) ;
<unk> = StringInterner . weakIntern ( arg ) ;
this . <unk> = parser . parse ( arg ) ;
submittedJobsMap . clear ( arg ) ;
submittedJobsMap . clear ( arg ) ;
new <unk> ( arg ) ;
selectInputStreams ( arg ) ;
journalSet . add ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
key = DFSUtil . addKeySuffixes ( arg ) ;
<unk> = className . toStringChecked ( arg ) ;
forceKillApplication ( arg ) ;
lapStart = Time . now ( arg ) ;
lastBlockReport = System . currentTimeMillis ( arg ) - ( dn . blockReportInterval - DFSUtil . getRandom ( arg ) . nextInt ( arg ) ) ;
lastBlockReport = System . currentTimeMillis ( arg ) - ( blockReportInterval - DFSUtil . getRandom ( arg ) . nextInt ( arg ) ) ;
lastBlockReport = System . currentTimeMillis ( arg ) - ( dnConf . blockReportInterval - DFSUtil . getRandom ( arg ) . nextInt ( arg ) ) ;
lastBlockReport = Time . now ( arg ) - ( dnConf . blockReportInterval - DFSUtil . getRandom ( arg ) . nextInt ( arg ) ) ;
lastBlockReport = lastHeartbeat - dn . blockReportInterval ;
lastBlockReport = lastHeartbeat - dnConf . blockReportInterval ;
lastBlockReport = startTime - DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
lastChildIdx = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
lastChildIdx = DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
<unk> = Time . now ( arg ) ;
<unk> = Time . now ( arg ) ;
<unk> = Time . monotonicNow ( arg ) ;
lastLeaseRenewal = Time . now ( arg ) ;
<unk> = namesystem . getBlockManager ( arg ) . <unk> ( arg ) ;
lastPrint = Time . now ( arg ) ;
lastPrint = Time . now ( arg ) ;
<unk> ( arg ) ;
user . <unk> ( arg ) ;
<unk> = Time . now ( arg ) ;
lastSeenCpuUsage = 0 ;
lastSeenCpuUsage = <unk> ( arg ) ;
lastTime = Time . now ( arg ) ;
storage . readProperties ( arg ) ;
if ( <unk> ( arg ) ) {
launchContext . setEnvironment ( arg ) ;
<unk> . <unk> ( arg ) ;
getLeaseRenewer ( arg ) . <unk> ( arg ) ;
beginFileLease ( arg ) ;
beginFileLease ( arg ) ;
beginFileLease ( arg ) ;
left = expire - Time . now ( arg ) ;
left = expire - Time . now ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
createDir ( arg ) ;
<unk> . startLogSegment ( arg ) ;
localDirs = conf . getTrimmedStrings ( arg ) ;
localDirs = StringUtils . getTrimmedStrings ( arg ) ;
<unk> = DFSHAAdmin . addSecurityConfiguration ( arg ) ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
localNNTarget . setZkfcPort ( arg ) ;
<unk> = conf . getSocketAddr ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> = <unk> ( arg ) ;
locatedBlocks = dfs . dfs . getLocatedBlocks ( arg ) ;
locatedBlocks = dfs . dfs . getLocatedBlocks ( arg ) ;
locatedBlocks = cluster . getNameNodeRpc ( arg ) . getBlockLocations ( arg ) ;
locatedBlocks = DFSClientAdapter . getDFSClient ( arg ) . getBlockLocations ( arg ) ;
log . openForWrite ( arg ) ;
log = getFSEditLog ( arg ) ;
log = getFSEditLog ( arg ) ;
log = getFSEditLog ( arg ) ;
log = getFSEditLog ( arg ) ;
log = getFSEditLog ( arg ) ;
logContext . addServlet ( AdminAuthorizedServlet . class ,
logContext . addServlet ( AdminAuthorizedServlet . class ,
setContextAttributes ( arg ) ;
exitCode = <unk> . <unk> ( arg ) ;
editLog . <unk> ( arg ) ;
loginUser . setLogin ( arg ) ;
loginUser . setLogin ( arg ) ;
StorageBlockReport [ ] report = { val } ;
final long [ ] <unk> = blockManager . getCorruptReplicaBlockIds ( arg ) ;
long [ ] <unk> = namenode . getRpcServer ( arg ) . <unk> ( arg ) ;
long a = ( ( long ) rng . nextInt ( arg ) ) << <unk> ;
long b = ( ( long ) rng . nextInt ( arg ) ) & <unk> ;
long <unk> = Time . now ( arg ) ;
long callTime = Time . now ( arg ) - startTime ;
long callTime = Time . now ( arg ) - startTime ;
long <unk> = Time . now ( arg ) - <unk> . <unk> ( arg ) ;
long curTime = Time . now ( arg ) ;
long curTime = Time . now ( arg ) ;
long currentTime = Time . now ( arg ) ;
long currentTime = Time . now ( arg ) ;
long currentTime = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) ;
long decodeEnd = Time . now ( arg ) ;
long decodeEnd = Time . now ( arg ) ;
long decodeStart = Time . now ( arg ) ;
long decodeStart = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) - start ;
long encodeEnd = Time . now ( arg ) ;
long encodeEnd = Time . now ( arg ) ;
long encodeStart = Time . now ( arg ) ;
long encodeStart = Time . now ( arg ) ;
long end = Time . now ( arg ) + <unk> ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long end = Time . now ( arg ) ;
long endTime = ( timeout > 0 ) ? ( Time . now ( arg ) + timeout ) : 0 ;
long endTime = Time . now ( arg ) + millis ;
long endTime = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long et = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) ;
long <unk> = <unk> * <unk> + Time . now ( arg ) ;
long <unk> = ( ( <unk> + 1 ) * 2 * <unk> ) + 2 ;
long expire = Time . now ( arg ) + timeout ;
long expire = Time . now ( arg ) + timeout ;
long failtime = ( timeout <= 0 ) ? Long . MAX_VALUE : Time . now ( arg ) + timeout ;
long failtime = ( timeout <= 0L ) ? Long . MAX_VALUE : Time . now ( arg ) + timeout ;
long failtime = ( timeout <= 0L ) ? Long . MAX_VALUE : Time . now ( arg ) + timeout ;
long failtime = Time . now ( arg ) + ( ( timeout > 0 ) ? timeout : Long . MAX_VALUE ) ;
long <unk> = 1 * <unk> ;
long <unk> = ( ( addCloseOp . blocks . length == 1 ) ? addCloseOp . blocks [ 0 ] . <unk> ( arg ) : 0 ) ;
long <unk> = Time . now ( arg ) + offset ;
long <unk> = Time . now ( arg ) - start ;
long <unk> = Time . now ( arg ) - scanPeriod ;
long <unk> = Time . now ( arg ) ;
long left = endTime - Time . now ( arg ) ;
long len = sendPacket ( arg ) ;
long limit = Time . now ( arg ) + <unk> * <unk> ;
long localstart = Time . now ( arg ) ;
long localstart = Time . now ( arg ) ;
long min = HdfsConstants . <unk> ;
long mlsec = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long now = Time . now ( arg ) ;
long offset = out . getPos ( arg ) ;
long offset = out . getPos ( arg ) ;
long <unk> = validation . <unk> ( arg ) ;
long <unk> = checkpointConf . <unk> ( arg ) ;
long <unk> = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) ;
long <unk> = ( val . <unk> ( arg ) - <unk> . <unk> ( arg ) ) + 1 ;
long seed = Time . now ( arg ) ;
long seed = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) ;
long <unk> = log . length ( arg ) - <unk> . getPos ( arg ) ;
long <unk> = ( <unk> - Time . now ( arg ) ) + <unk> ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long st = Time . now ( arg ) ;
long start = ( timeout == 0 ) ? 0 : Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long start = Time . now ( arg ) ;
long fsyncStartNanos = flushEndNanos ;
long fsyncStartNanos = flushEndNanos ;
long fsyncStartNanos = flushEndNanos ;
long fsyncStartNanos = flushEndNanos ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . now ( arg ) ;
long startTime = Time . monotonicNow ( arg ) ;
long startTime = Time . now ( arg ) ;
long starttime = Time . now ( arg ) ;
long starttime = Time . now ( arg ) ;
long <unk> = Time . now ( arg ) + waitTime ;
long t1 = Time . now ( arg ) ;
long t1 = System . currentTimeMillis ( arg ) ;
long <unk> = System . currentTimeMillis ( arg ) ;
long <unk> = latestImage . <unk> ( arg ) ;
long <unk> = now ( arg ) - startTime ;
long <unk> = currentPeriodStart + scanPeriod - Time . now ( arg ) ;
long timeStamp = Time . now ( arg ) ;
long timeStamp = Time . now ( arg ) ;
long timeout = maxIdleTime - ( Time . now ( arg ) - <unk> . get ( arg ) ) ;
long timestamp = Time . now ( arg ) ;
long timestamp2 = Time . now ( arg ) ;
long trashInterval = namesystem . getServerDefaults ( arg ) . <unk> ( arg ) ;
long trashInterval = conf . <unk> ( arg ) ;
long txid = cluster . getNameNodeRpc ( arg ) . getTransactionID ( arg ) ;
long txid = cluster . getNameNodeRpc ( arg ) . getTransactionID ( arg ) ;
long <unk> = ( ( HdfsDataInputStream ) in ) . getVisibleLength ( arg ) ;
long waitStart = Time . now ( arg ) ;
long waitStart = Time . now ( arg ) ;
long waitTime = dnConf . heartBeatInterval - ( System . currentTimeMillis ( arg ) - lastHeartbeat ) ;
long waitTime = dn . heartBeatInterval - ( System . currentTimeMillis ( arg ) - lastHeartbeat ) ;
long <unk> = <unk> - Time . now ( arg ) ;
long <unk> = Time . now ( arg ) - start ;
long <unk> = socketWriteTimeout + HdfsServerConstants . WRITE_TIMEOUT_EXTENSION * ( targets . length - 1 ) ;
final Map < String , Object > m = jsonMap . get ( arg ) ;
final Map < String , Object > m = jsonMap . get ( arg ) ;
m = ( MetricsTimeVaryingRate ) rpcDetailedMetrics . registry . get ( arg ) ;
executor . shutdown ( arg ) ;
executor . shutdown ( arg ) ;
executor . awaitTermination ( arg ) ;
<unk> . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
<unk> += ( task . isFinished ( arg ) ? 1f : task . getProgress ( arg ) ) ;
<unk> = FsDatasetTestUtil . fetchReplicaInfo ( arg ) ;
<unk> ( arg ) ;
message = RequestProto . <unk> ( arg ) ;
<unk> = <unk> ;
dn . metrics . <unk> ( arg ) ;
dn . metrics . <unk> ( arg ) ;
dn . metrics . <unk> ( arg ) ;
metrics . loginFailure . add ( arg ) ;
metrics . loginFailure . add ( arg ) ;
metrics . loginFailure . add ( arg ) ;
metrics . loginSuccess . add ( arg ) ;
metrics . loginSuccess . add ( arg ) ;
metrics . loginSuccess . add ( arg ) ;
<unk> = targets [ 0 ] . getXferAddr ( arg ) ;
mlsec = Time . now ( arg ) - mlsec ;
mockProtocol = <unk> . mockProtocol ( arg ) ;
monitorLockNodeAsync ( arg ) ;
monitorLockNodeAsync ( arg ) ;
<unk> . <unk> ( arg ) ;
mrApp . waitForInternalState ( arg ) ;
mrApp . waitForInternalState ( arg ) ;
ms . <unk> ( arg ) ;
ms . <unk> ( arg ) ;
super . <unk> ( arg ) ;
super . setPermission ( arg ) ;
super . <unk> ( arg ) ;
bpos . retrieveNamespaceInfo ( arg ) ;
ipAddr = Text . <unk> ( arg ) ;
String <unk> = <unk> ( arg ) ;
ipAddr = nodeReg . getIpAddr ( arg ) ;
nameNode . blockReceivedAndDeleted ( arg ) ;
nameNode . blockReceivedAndDeleted ( arg ) ;
nameNode . blockReceivedAndDeleted ( arg ) ;
nameNode . blockReceivedAndDeleted ( arg ) ;
nameNode . blockReceived ( arg ) ;
nameNode . blockReceived ( arg ) ;
nameNodeProto . create ( arg ) ;
nameNodeProto . delete ( arg ) ;
nameNodeProto . delete ( arg ) ;
nameNodeProto . getBlockLocations ( arg ) ;
nameNodeProto . getFileInfo ( arg ) ;
nameNodeProto . refreshNodes ( arg ) ;
nameNodeProto . rename ( arg ) ;
nameNodeProto . setSafeMode ( arg ) ;
<unk> . remove ( arg ) ;
namenode . getNamesystem ( arg ) . getBlockManager ( arg ) . updateState ( arg ) ;
namenode . rename2 ( arg ) ;
namenodeAddress = NameNodeHttpServer . <unk> ( arg ) ;
namenodeAddress = NetUtils . createSocketAddr ( arg ) ;
blockManager . <unk> ( arg ) ;
namesystem . getBlockManager ( arg ) . <unk> ( arg ) ;
namesystem . getBlockManager ( arg ) . blockReceived ( arg ) ;
addToParent ( arg ) ;
namesystem . getBlockManager ( arg ) . processIncrementalBlockReport ( arg ) ;
startDecommission ( arg ) ;
startDecommission ( arg ) ;
<unk> ( arg ) ;
stats . <unk> ( arg ) ;
namesystem . <unk> . <unk> ( arg ) ;
bm . findAndMarkBlockAsCorrupt ( arg ) ;
bm . findAndMarkBlockAsCorrupt ( arg ) ;
namesystem . getBlockManager ( arg ) . <unk> ( arg ) ;
namesystem . getBlockManager ( arg ) . getDatanodeManager ( arg ) . refreshNodes ( arg ) ;
namesystem . getBlockManager ( arg ) . getDatanodeManager ( arg ) . <unk> ( arg ) ;
BlockManagerTestUtil . getReplicationThread ( arg ) . interrupt ( arg ) ;
BlockManagerTestUtil . getReplicationThread ( arg ) . join ( arg ) ;
namesystem . getBlockManager ( arg ) . getDatanodeManager ( arg ) . <unk> ( arg ) ;
BlockManagerTestUtil . <unk> ( arg ) ;
NameNodeAdapter . setReplication ( arg ) ;
NameNodeAdapter . setReplication ( arg ) ;
nav . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) . div ( arg ) . _ ( arg ) ;
nav . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
nav . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) . _ ( arg ) ;
nav . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) ;
nav . h3 ( arg ) . ul ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . li ( arg ) . a ( arg ) . _ ( arg ) . _ ( arg ) ;
<unk> = upgradeManager . <unk> ( arg ) ;
ConfigBuilder <unk> = new ConfigBuilder ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . add ( arg ) . save ( arg ) ;
FSImageSerialization . writeString ( arg ) ;
FSImageSerialization . writeLong ( arg ) ;
new TestRPC ( arg ) . testCallsInternal ( arg ) ;
new TestRPC ( arg ) . testCallsInternal ( arg ) ;
new TestRPC ( arg ) . testCallsInternal ( arg ) ;
<unk> = dfsClient . getLocatedBlocks ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
SecurityUtil . setAuthenticationMethod ( arg ) ;
allocatedContainers . add ( arg ) ;
<unk> = <unk> . <unk> ( arg ) + 1 ;
<unk> . append ( arg ) . append ( arg ) ;
newNode . setLocalName ( arg ) ;
<unk> = addINode ( arg ) ;
newNode = <unk> ( arg ) ;
<unk> . setModificationTime ( arg ) ;
<unk> = d . getHost ( arg ) ;
<unk> <unk> = this . containerTokenSecretManager . <unk> ( arg ) ;
<unk> = <unk> [ ( int ) ( zvec - <unk> [ zn ] ) ] ;
nmPrivateCTokensPath = dirsHandler . getLocalPathForWrite ( arg ) ;
nn . getRpcServer ( arg ) . <unk> ( arg ) ;
namesystem . checkOperation ( arg ) ;
namesystem . checkOperation ( arg ) ;
bpos . <unk> ( arg ) ;
nn . verifyToken ( arg ) ;
bpos . <unk> ( arg ) ;
nn . getNamesystem ( arg ) . verifyToken ( arg ) ;
nn = cluster . getNameNodeRpc ( arg ) ;
cluster . transitionToActive ( arg ) ;
cons = INodeFileUnderConstruction . valueOf ( arg ) ;
<unk> = new <unk> ( arg ) ;
<unk> [ index ] . start ( arg ) ;
nodeReg . exportedKeys = namesystem . getBlockManager ( arg ) . getBlockKeys ( arg ) ;
nodeReg . exportedKeys = blockManager . getBlockKeys ( arg ) ;
<unk> = datanode . getIpAddr ( arg ) ;
<unk> = namesystem . <unk> ( arg ) ;
SchedulerUtils . normalizeRequests ( arg ) ;
SchedulerUtils . normalizeRequests ( arg ) ;
now = Time . now ( arg ) ;
np . rename2 ( arg ) ;
ns . getBlockManager ( arg ) . getDatanodeManager ( arg ) . refreshNodes ( arg ) ;
ns . getBlockManager ( arg ) . getDatanodeManager ( arg ) . refreshNodes ( arg ) ;
NameNodeAdapter . setReplication ( arg ) ;
NameNodeAdapter . setReplication ( arg ) ;
NameNodeAdapter . setReplication ( arg ) ;
return null ;
<unk> = nameNodeProto . versionRequest ( arg ) ;
<unk> . dir . fsImage . format ( arg ) ;
generationStamp_ = input . readUInt64 ( arg ) ;
<unk> . readFully ( arg ) ;
numberOfExpectedRenewals = Renewer . counter ;
if ( <unk> . <unk> ( arg ) != 0 ) return false ;
<unk> ( arg ) ;
IOUtils . cleanup ( arg ) ;
blockChecksum ( arg ) ;
<unk> ( arg ) ;
replaceBlock ( arg ) ;
transferBlock ( arg ) ;
writeBlock ( arg ) ;
<unk> client = getDFSClient ( arg ) ;
DatanodeInfo [ ] result = new DatanodeInfo [ <unk> . length ] ;
org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . Builder subBuilder = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . newBuilder ( arg ) ;
org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . Builder subBuilder = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . BlocksWithLocationsProto . newBuilder ( arg ) ;
org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . DatanodeInfosProto . Builder subBuilder = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . DatanodeInfosProto . newBuilder ( arg ) ;
org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . ReplicaStateProto value = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . ReplicaStateProto . valueOf ( arg ) ;
Counters hc = new Counters ( arg ) ;
JobStatus jobStatus = new org . apache . hadoop . mapred . JobStatus ( arg ) ;
org . apache . hadoop . mapreduce . v2 . <unk> . <unk> . TaskAttemptCompletionEvent [ ] events = context . <unk> ( arg ) . <unk> ( arg ) ;
out . println ( arg ) ;
out . hflush ( arg ) ;
outGen . output ( arg ) ;
outGen . output ( arg ) ;
<unk> . close ( arg ) ;
output . <unk> ( arg ) ;
output . writeEnum ( arg ) ;
output . writeEnum ( arg ) ;
<unk> += Time . now ( arg ) - lapStart ;
ownEnd = Time . now ( arg ) ;
ownEnd = Time . now ( arg ) ;
ownEnd = Time . now ( arg ) ;
ownEnd = Time . now ( arg ) ;
ownEnd = Time . now ( arg ) ;
ownEnd = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
ownStart = Time . now ( arg ) ;
p . updateProcessTree ( arg ) ;
p . updateProcessTree ( arg ) ;
p . updateProcessTree ( arg ) ;
state . <unk> ( arg ) ;
p . getProcessTree ( arg ) ;
p . getProcessTree ( arg ) ;
p . getProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
pTree . updateProcessTree ( arg ) ;
<unk> = ( checksum . <unk> ( arg ) + checksum . getChecksumSize ( arg ) ) * <unk> ;
getParent ( arg ) . completedContainer ( arg ) ;
getParent ( arg ) . finishApplication ( arg ) ;
getParent ( arg ) . <unk> ( arg ) ;
getParent ( arg ) . submitApplication ( arg ) ;
<unk> ( arg ) ;
addToParent ( arg ) ;
parentINode = fsDir . rootDir . getParent ( arg ) ;
parentINode = <unk> ( arg ) ;
<unk> = <unk> ( arg ) ;
<unk> = DataChecksum . <unk> ( arg ) ;
pathbuilder . append ( arg ) . append ( arg ) ;
pathbuilder . append ( arg ) . append ( arg ) ;
paths = fc . util ( arg ) . listStatus ( arg ) ;
paths = fc . util ( arg ) . listStatus ( arg ) ;
paths = fc1 . util ( arg ) . listStatus ( arg ) ;
paths = fc1 . util ( arg ) . listStatus ( arg ) ;
pendingReplications . increment ( arg ) ;
pendingReplications . increment ( arg ) ;
pendingReplications . increment ( arg ) ;
pendingReplications . decrement ( arg ) ;
pendingReplications . decrement ( arg ) ;
pendingReplications . decrement ( arg ) ;
permission = new FsPermission ( arg ) ;
permission = <unk> . combine ( arg ) ;
permission = <unk> . combine ( arg ) ;
permission = <unk> . combine ( arg ) ;
exitCode = pgd . driver ( arg ) ;
exitCode = pgd . driver ( arg ) ;
exitCode = pgd . driver ( arg ) ;
<unk> ( arg ) ;
pktBufSize += ( <unk> + checksumSize ) * maxChunksPerPacket ;
pktBufSize += checksumSize * maxChunksPerPacket ;
uri = <unk> ? URI . create ( arg ) : URI . create ( <unk>
<unk> = d . getHost ( arg ) ;
<unk> = <unk> ;
container . <unk> . add ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
processTree . updateProcessTree ( arg ) ;
<unk> = <unk> ;
HAServiceProtocolHelper . monitorHealth ( arg ) ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
HAServiceProtocolHelper . transitionToStandby ( arg ) ;
invoke ( arg ) ;
proxy . getNewApplication ( arg ) ;
proxy = ( <unk> ) RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = RPC . getProxy ( arg ) ;
proxy = DFSUtil . createClientDatanodeProtocolProxy ( arg ) ;
proxy = DFSUtil . createClientDatanodeProtocolProxy ( arg ) ;
container . <unk> . add ( arg ) ;
return <unk> ( arg ) ;
qi . absoluteUsedCapacity = ( float ) info . <unk> ( arg ) ;
qi . absoluteUsedCapacity = WebServicesTestUtils . <unk> ( arg ) ;
query = <unk> ( arg ) ;
queue . getMetrics ( arg ) . <unk> ( arg ) ;
queueName = StringInterner . weakIntern ( arg ) ;
queueName = StringInterner . weakIntern ( arg ) ;
queuesInfo . <unk> ( arg ) ;
r . path ( arg ) . path ( arg ) . path ( arg ) . path ( arg ) . path ( arg ) . accept ( arg ) . get ( arg ) ;
r . path ( arg ) . path ( arg ) . path ( arg ) . path ( arg ) . path ( arg ) . path ( arg ) . accept ( arg ) . get ( arg ) ;
( ( <unk> ) rspy . openConnection ( arg ) ) . <unk> ( arg ) ;
verify ( arg ) . openConnection ( arg ) ;
r = dataset1 . fetchReplicaInfo ( arg ) ;
r = DataNodeTestUtils . fetchReplicaInfo ( arg ) ;
racks . add ( arg ) ;
logByteStream . close ( arg ) ;
realProxy = <unk> ( arg ) ;
reason . add ( arg ) ;
<unk> ( arg ) ;
<unk> = pendingIncrementalBR . values ( arg ) . toArray ( arg ) ;
pendingIncrementalBR . notifyAll ( arg ) ;
pendingIncrementalBR . notifyAll ( arg ) ;
pendingIncrementalBR . notifyAll ( arg ) ;
pendingIncrementalBR . notifyAll ( arg ) ;
pendingIncrementalBR . wait ( arg ) ;
pendingIncrementalBR . wait ( arg ) ;
pendingIncrementalBR . wait ( arg ) ;
receivedAndDeletedBlockList . wait ( arg ) ;
receivedAndDeletedBlockList . wait ( arg ) ;
dn . <unk> ( arg ) ;
<unk> = new com . google . protobuf . SingleFieldBuilder < org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto , org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . Builder , org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . <unk> > ( arg ) ;
recoveryCmd_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . getDefaultInstance ( arg ) ;
recoveryCmd_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . getDefaultInstance ( arg ) ;
recoveryCmd_ = org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . BlockRecoveryCommandProto . getDefaultInstance ( arg ) ;
recoveryServ = <unk> ( arg ) ;
<unk> += ( task . isFinished ( arg ) ? 1f : task . getProgress ( arg ) ) ;
registrationBuilder_ . clear ( arg ) ;
registration_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . <unk> . getDefaultInstance ( arg ) ;
invalidateBlocks . remove ( arg ) ;
renewalTime = <unk> + Time . now ( arg ) ;
renewalTime = <unk> + Time . now ( arg ) ;
dtRenewer . addRenewAction ( arg ) ;
<unk> = FsDatasetTestUtil . fetchReplicaInfo ( arg ) ;
replication = pendingFile . getReplication ( arg ) ;
replication = pendingFile . getReplication ( arg ) ;
replication = fs . <unk> ( arg ) ;
replication = fileNode . getFileReplication ( arg ) ;
replication = fileNode . getBlockReplication ( arg ) ;
replication = namesystem . getBlockManager ( arg ) . adjustReplication ( arg ) ;
replication = pendingFile . getFileReplication ( arg ) ;
replication = pendingFile . getBlockReplication ( arg ) ;
repls = ns . getBlockManager ( arg ) . numCorruptReplicas ( arg ) ;
<unk> . <unk> ( arg ) ;
req . setFinishApplicationStatus ( arg ) ;
request . setFinishApplicationStatus ( arg ) ;
<unk> . append ( arg ) . append ( arg ) ;
<unk> ( arg ) ;
result . numBytes_ = numBytes_ ;
result . generationStamp_ = generationStamp_ ;
result . registration_ = registrationBuilder_ . build ( arg ) ;
IOUtils . skipFully ( arg ) ;
IOUtils . skipFully ( arg ) ;
result . storageInfo_ = storageInfoBuilder_ . build ( arg ) ;
result = <unk> . <unk> ( arg ) ;
result = DFSOutputStream . newStreamForCreate ( arg ) ;
result = new ParsedTask ( arg ) ;
result = new ParsedTaskAttempt ( arg ) ;
result = prime * result + appId . hashCode ( arg ) ;
result = prime * result + ( ( getApplicationAttemptId ( arg ) == null ) ? 0 : getApplicationAttemptId ( arg ) . hashCode ( arg ) ) ;
result = prime * result + getApplicationAttemptId ( arg ) . hashCode ( arg ) ;
catch ( arg ) {
matches . add ( arg ) ;
return <unk> ? matches : null ;
ret = YarnConfiguration . <unk> ;
ret [ i ] = NetUtils . getHostPortString ( arg ) ;
ret [ i ] = <unk> ( arg ) ;
return ! containerId . equals ( arg ) ;
return fc . getFileStatus ( arg ) . isFile ( arg ) ;
return getFileStatus ( arg ) . isFile ( arg ) ;
return getFileStatus ( arg ) . isFile ( arg ) ;
return <unk> ( arg ) && blockSafe >= blockReplQueueThreshold ;
return ! <unk> . isEmpty ( arg ) ;
return ! super . <unk> ( arg ) . isEmpty ( arg ) ;
return ( arg ) && ( TEST_FENCING_PORT != null &&! TEST_FENCING_PORT . isEmpty ( arg ) ) && ( TEST_KEYFILE != null &&! TEST_KEYFILE . isEmpty ( arg ) ) ;
return ( arg ) && ( datanode . <unk> >= <unk> ) ;
return ( arg ) && <unk> == <unk> &&! <unk> ( arg ) && <unk> . contains ( arg ) && verifyToken ( arg ) ;
return HeaderFormat . getReplication ( arg ) ;
return ( arg ) ( is64Bit ? cl . loadClass ( arg ) : cl . loadClass ( arg ) ) ;
return getFsDatasetImpl ( arg ) . getBlockFile ( arg ) ;
return <unk> ( arg ) . getConf ( arg ) ;
return getFsDatasetImpl ( arg ) . getFile ( arg ) ;
return ( arg ) . hashCode ( arg ) + ugi . hashCode ( arg ) + ( int ) <unk> ;
return ( arg ) . clientRpcServer ;
return deletionInterval != 0 ;
return ( arg ) ? ( dfsClientConf . <unk> + HdfsServerConstants . WRITE_TIMEOUT_EXTENSION * numNodes ) : 0 ;
return Integer . toString ( arg ) ;
return ( arg ) ? Time . now ( arg ) - <unk> : null ;
return ( arg ) ? exitCode : null ;
return ( arg ) ? exitCode : <unk> ( arg ) ;
return hostName ;
return <unk> ( arg ) ;
return ( arg ) ? new GzipZlibDecompressor ( arg ) : new BuiltInGzipDecompressor ( arg ) ;
return ComparisonChain . start ( arg ) . compare ( arg ) . compare ( arg ) . compare ( arg ) . compare ( arg ) . compare ( arg ) . compare ( arg ) . compare ( arg ) . result ( arg ) ;
return ( arg ) ? result : ( b [ 0 ] & 0xff ) ;
return new HAServiceProtocolClientSideTranslatorPB ( arg ) ;
return new HAServiceProtocolClientSideTranslatorPB ( arg ) ;
return new DatanodeProtocolClientSideTranslatorPB ( arg ) ;
return ( arg ) ;
return ( arg ) ^ ( ticket == null ? 0 : ticket . hashCode ( arg ) ) ;
return blockChooser . chooseVolume ( arg ) ;
return ( arg ) ( buf [ 0 ] & 0xff ) ;
return ( arg ) ( is64Bit ? cl . loadClass ( arg ) : cl . loadClass ( arg ) ) ;
return ( arg ) namenode . getNamesystem ( arg ) . getBlockManager ( arg ) . getDatanodeManager ( arg ) . <unk> ( arg ) . <unk> ( arg ) ;
return <unk> ;
return ( arg ) URLUtils . openConnection ( arg ) ;
return ( arg ) ( ( ( ( ( ( bsR ( arg ) << 8 ) | bsR ( arg ) ) << 8 ) | bsR ( arg ) ) << 8 ) | bsR ( arg ) ) ;
return <unk> . get ( arg ) ;
return resultCode ;
return null ;
return null ;
return this . getClass ( arg ) . hashCode ( arg ) ;
return 7 ;
return 8 ;
return 8 ;
return 9 ;
return 9 ;
return 2 ;
return VOID_ADD_BLOCK_RESPONSE ;
return VOID_ADD_BLOCK_RESPONSE ;
return <unk> ( arg ) ;
return <unk> . newBuilder ( arg ) . <unk> ( arg ) . setPort ( arg ) . setZkfcPort ( arg ) . <unk> ( arg ) . <unk> ( arg ) . build ( arg ) . <unk> ( arg ) ;
return YarnApplicationState . FAILED ;
return YarnApplicationState . KILLED ;
return YarnApplicationState . <unk> ;
return YarnApplicationState . RUNNING ;
return YarnApplicationState . <unk> ;
return YarnApplicationState . <unk> ;
return <unk> . class ;
return <unk> . class ;
return new ArrayList < String > ( arg ) ;
return clockSplits ;
return clockSplits ;
return <unk> . class . <unk> ( arg ) || ( c . <unk> ( arg ) != null && <unk> . contains ( arg ) ) ;
return BlockReaderFactory . newBlockReader ( arg ) ;
return <unk> . newBuilder ( arg ) . setBlock ( arg ) . <unk> ( arg ) . build ( arg ) ;
return <unk> . <unk> ( arg ) ;
return <unk> . newBuilder ( arg ) . <unk> ( arg ) . <unk> ( arg ) . build ( arg ) ;
return <unk> ;
throw new IOException ( arg ) ;
return Collections . <unk> ( arg ) ;
return appId . toString ( arg ) ;
return VOID_CREATE_RESPONSE ;
return VOID_CREATE_RESPONSE ;
return DFSUtil . createNamenode ( arg ) ;
return <unk> ( arg ) ;
return NameNode . DEFAULT_PORT ;
return NameNode . DEFAULT_PORT ;
return name == null ? null : DFSUtil . <unk> ( arg ) ;
return NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
return <unk> rand +-+ ip +-+ port +-+ Time . now ( arg ) ;
return <unk> ( arg ) ;
return <unk> . convert ( arg ) ;
return DatanodeIDProto . newBuilder ( arg ) . setIpAddr ( arg ) . setHostName ( arg ) . setStorageID ( arg ) . setXferPort ( arg ) . setInfoPort ( arg ) . setIpcPort ( arg ) . build ( arg ) ;
return DatanodeIDProto . newBuilder ( arg ) . setName ( arg ) . setHostName ( arg ) . setInfoPort ( arg ) . setIpcPort ( arg ) . setStorageID ( arg ) . build ( arg ) ;
return new Server ( arg ) ;
return counters ;
return counters ;
return counters ;
return counters ;
return getNotRunningJob ( arg ) ;
return HdfsConstants . LAYOUT_VERSION ;
return DatanodeUtil . createTmpFile ( arg ) ;
return DatanodeUtil . createTmpFile ( arg ) ;
return DatanodeUtil . <unk> ( arg ) ;
return ( arg ) FileSystem . get ( arg ) ;
return FsServerDefaultsProto . newBuilder ( arg ) . setBlockSize ( arg ) . setBytesPerChecksum ( arg ) . setWritePacketSize ( arg ) . setReplication ( arg ) . setFileBufferSize ( arg ) . setEncryptDataTransfer ( arg ) . build ( arg ) ;
return FsServerDefaultsProto . newBuilder ( arg ) . setBlockSize ( arg ) . setBytesPerChecksum ( arg ) . setWritePacketSize ( arg ) . setReplication ( arg ) . setFileBufferSize ( arg ) . setEncryptDataTransfer ( arg ) . setTrashInterval ( arg ) . build ( arg ) ;
return FsServerDefaultsProto . newBuilder ( arg ) . setBlockSize ( arg ) . setBytesPerChecksum ( arg ) . setWritePacketSize ( arg ) . setReplication ( arg ) . setFileBufferSize ( arg ) . setEncryptDataTransfer ( arg ) . setTrashInterval ( arg ) . <unk> ( arg ) . build ( arg ) ;
return HdfsServerConstants . NodeType . DATA_NODE ;
return HdfsServerConstants . NodeType . DATA_NODE ;
return HdfsServerConstants . NodeType . NAME_NODE ;
return HdfsServerConstants . NodeType . NAME_NODE ;
return HdfsProtos . DatanodeIDProto . newBuilder ( arg ) . setIpAddr ( arg ) . setHostName ( arg ) . setStorageID ( arg ) . setXferPort ( arg ) . setInfoPort ( arg ) . setIpcPort ( arg ) . build ( arg ) ;
return HdfsProtos . DatanodeIDProto . newBuilder ( arg ) . setName ( arg ) . setStorageID ( arg ) . setInfoPort ( arg ) . setIpcPort ( arg ) . build ( arg ) ;
return HdfsProtos . DatanodeIDProto . newBuilder ( arg ) . setName ( arg ) . setHostName ( arg ) . setStorageID ( arg ) . setInfoPort ( arg ) . setIpcPort ( arg ) . build ( arg ) ;
return HdfsProtos . <unk> . newBuilder ( arg ) . setId ( arg ) . setCapacity ( arg ) . setDfsUsed ( arg ) . setRemaining ( arg ) . setBlockPoolUsed ( arg ) . setLastUpdate ( arg ) . setXceiverCount ( arg ) . setLocation ( arg ) . <unk> ( arg ) . build ( arg ) ;
return counters . values ( arg ) . iterator ( arg ) ;
return <unk> . newBuilder ( arg ) . setBlock ( arg ) . <unk> ( arg ) . build ( arg ) ;
return <unk> . <unk> ;
return toJsonString ( arg ) ;
return toJsonString ( arg ) ;
return toJsonString ( arg ) ;
return toJsonString ( arg ) ;
return <unk> . class ;
return jobId ;
return JobStateInternal . <unk> ;
return <unk> . class ;
return getNotRunningJob ( arg ) ;
return <unk> . isNativeCodeLoaded ( arg ) && <unk> . isNativeCodeLoaded ( arg ) ;
return LogAggregationUtils . <unk> ( arg ) ;
return MD5-of-+ <unk> + MD5-of-+ <unk> + <unk> ( arg ) . name ( arg ) ;
return Gridmix . MISSING_DIST_CACHE_FILES_ERROR ;
return getNotRunningJob ( arg ) ;
return DFSConfigKeys . DFS_NAMENODE_RPC_PORT_DEFAULT ;
return DFSConfigKeys . DFS_NAMENODE_RPC_PORT_DEFAULT ;
return <unk> . newBuilder ( arg ) . setType ( arg ) . <unk> ( arg ) . build ( arg ) ;
return NamespaceInfoProto . newBuilder ( arg ) . setBlockPoolID ( arg ) . setBuildVersion ( arg ) . <unk> ( arg ) . setStorageInfo ( arg ) . setSoftwareVersion ( arg ) . build ( arg ) ;
return NamespaceInfoProto . newBuilder ( arg ) . setBlockPoolID ( arg ) . setBuildVersion ( arg ) . <unk> ( arg ) . setStorageInfo ( arg ) . setSoftwareVersion ( arg ) . build ( arg ) ;
return getHttpAddress ( arg ) ;
return rpcProxy . updateReplicaUnderRecovery ( arg ) . <unk> ( arg ) ;
return RetryProxy . create ( arg ) ;
return RetryProxy . create ( arg ) ;
return <unk> . class ;
return state ;
return NodeState . RUNNING ;
return NodeState . <unk> ;
return new HAServiceProtocolClientSideTranslatorPB ( arg ) ;
return new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
return <unk> . get ( arg ) . getSchema ( arg ) ;
return <unk> . newBuilder ( arg ) . setStartTxId ( arg ) . setEndTxId ( arg ) . setIsInProgress ( arg ) . build ( arg ) ;
return NULL_ASSIGNMENT ;
return NULL_ASSIGNMENT ;
return Response . temporaryRedirect ( arg ) . type ( arg ) . build ( arg ) ;
return Response . temporaryRedirect ( arg ) . type ( arg ) . build ( arg ) ;
return Response . temporaryRedirect ( arg ) . type ( arg ) . build ( arg ) ;
return Response . temporaryRedirect ( arg ) . type ( arg ) . build ( arg ) ;
return new RetryAction ( arg ) ;
return create ( arg ) ;
return RpcPayloadOperation . values ( arg ) [ inValue - FIRST_INDEX ] ;
return RpcPayloadOperation . values ( arg ) [ inValue - FIRST_INDEX ] ;
return RpcKind . values ( arg ) [ inValue - FIRST_INDEX ] ;
return RpcKind . values ( arg ) [ inValue - FIRST_INDEX ] ;
return VOID_SET_OWNER_RESPONSE ;
return VOID_SET_OWNER_RESPONSE ;
return VOID_SET_PERM_RESPONSE ;
return VOID_SET_PERM_RESPONSE ;
return ( arg ) ? SecurityUtil . buildDTServiceName ( arg ) : null ;
return Server . <unk> ( arg ) || <unk> . <unk> ( arg ) ;
return String . valueOf ( arg ) + FIELD_SEPARATOR + String . valueOf ( arg ) + FIELD_SEPARATOR + String . valueOf ( arg ) + FIELD_SEPARATOR + String . valueOf ( arg ) + FIELD_SEPARATOR + String . valueOf ( arg ) + FIELD_SEPARATOR + clusterID + FIELD_SEPARATOR + blockpoolID ;
return Time . now ( arg ) - scanPeriod + DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
return System . currentTimeMillis ( arg ) - scanPeriod + DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
return Time . now ( arg ) ;
return Time . now ( arg ) > <unk> ;
return attemptId ;
return TaskAttemptStateInternal . KILLED ;
return TaskAttemptStateInternal . SUCCEEDED ;
return attemptId . getTaskID ( arg ) ;
return attemptId . getTaskID ( arg ) ;
return attemptId . getTaskID ( arg ) ;
return TaskStateInternal . <unk> ;
return <unk> . class ;
return FSImageTestUtil . mockStorageDirectory ( arg ) ;
return <unk> . <unk> ( arg ) ;
return hc ;
return <unk> . newBuilder ( arg ) . setStorageID ( arg ) . build ( arg ) ;
ugi = <unk> = UserGroupInformation . createRemoteUser ( arg ) ;
return <unk> . <unk> ( arg ) == 0 ;
return VersionInfo . <unk> ( arg ) + , r + VersionInfo . <unk> ( arg ) ;
return WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) + WritableUtils . getVIntSize ( arg ) + <unk> ;
return YarnConfiguration . RM_PRINCIPAL ;
return YarnConfiguration . RM_PRINCIPAL ;
return YarnConfiguration . RM_PRINCIPAL ;
return YarnConfiguration . <unk> ;
return ZlibFactory . isNativeZlibLoaded ( arg ) ? <unk> . class : null ;
return ZlibFactory . isNativeZlibLoaded ( arg ) ? GzipZlibDecompressor . class : null ;
return ZlibFactory . isNativeZlibLoaded ( arg ) ? GzipZlibDecompressor . class : BuiltInGzipDecompressor . class ;
return <unk> . toString ( arg ) ;
return <unk> ( arg ) ;
return ( arg ) ? addToken ( arg ) : false ;
return addr . getPort ( arg ) != 0 ;
return addr . getPort ( arg ) != 0 &&! addr . getAddress ( arg ) . <unk> ( arg ) ;
return address . equals ( arg ) && protocol == id . protocol && ( ( ticket != null && ticket . equals ( arg ) ) || ( ticket == id . ticket ) ) && rpcTimeout == id . rpcTimeout ;
return address . equals ( arg ) && protocol == id . protocol && ( ( ticket != null && ticket . equals ( arg ) ) || ( ticket == id . ticket ) ) ;
return app . getTask ( arg ) != null ;
return app . getTask ( arg ) . <unk> ( arg ) . values ( arg ) ;
return appID ;
return appID ;
return <unk> ;
return null ;
return null ;
return this . applicationId ;
return ( arg ) ? null : application . <unk> ( arg ) ;
return <unk> + this . <unk> ( arg ) + _ + <unk> . get ( arg ) . format ( arg ) ;
return <unk> ( arg ) + <unk> ( arg ) ;
return new CSAssignment ( arg ) ;
return new CSAssignment ( arg ) ;
return assignment ;
return assignment ;
return attempt . getCpuUsages ( arg ) ;
return attempt . getClockSplits ( arg ) ;
return attempt . getClockSplits ( arg ) ;
return attempt . getClockSplits ( arg ) ;
return attempt . getCpuUsages ( arg ) ;
return attempt . getPhysMemKbytes ( arg ) ;
return attempt . getPhysMemKbytes ( arg ) ;
return attempt . getPhysMemKbytes ( arg ) ;
return <unk> ( arg ) ;
return attemptInfo . getHostname ( arg ) + : + attemptInfo . getPort ( arg ) ;
return attemptInfo . getHostname ( arg ) ;
return b . block . equals ( arg ) && b . <unk> . equals ( arg ) ;
return bc . getBlockReplication ( arg ) ;
return ( arg ) blockChooser . chooseVolume ( arg ) ;
return blockManager . getCorruptReplicaBlocksCount ( arg ) ;
return blockManager . getCorruptReplicaBlocksCount ( arg ) ;
return blockManager . getExcessBlocksCount ( arg ) ;
return blockManager . getExcessBlocksCount ( arg ) ;
return blockManager . <unk> ;
return blockManager . <unk> ;
return blockManager . <unk> ;
return blockManager . <unk> ;
return blockManager . <unk> ;
return blockManager . <unk> ;
return blockManager . getPendingDeletionBlocksCount ( arg ) ;
return blockManager . getPendingDeletionBlocksCount ( arg ) ;
return blockManager . getPendingReplicationBlocksCount ( arg ) ;
return blockManager . getPendingReplicationBlocksCount ( arg ) ;
return blockManager . getScheduledReplicationBlocksCount ( arg ) ;
return blockManager . getScheduledReplicationBlocksCount ( arg ) ;
return blockManager . getUnderReplicatedBlocksCount ( arg ) ;
return blockManager . getUnderReplicatedBlocksCount ( arg ) ;
return ! <unk> ( arg ) && blockSafe >= blockReplQueueThreshold ;
return blocksMap . size ( arg ) ;
return blocksMap . size ( arg ) - ( int ) invalidateBlocks . numBlocks ( arg ) ;
return bpRegistration != null ;
return bpos . <unk> ( arg ) ;
return bufCurrent . size ( arg ) >= <unk> ;
return NULL_GETFILEINFO_RESPONSE ;
return NULL_GETFILEINFO_RESPONSE ;
return builder . <unk> ( arg ) . setStorageInfo ( arg ) . <unk> ( arg ) . setSoftwareVersion ( arg ) . build ( arg ) ;
return wcf . c == <unk> . getContainer ( arg ) ;
return cId == null ? null : cId . toString ( arg ) ;
return call . connection . <unk> ( arg ) ;
return call . getRpcResult ( arg ) ;
return <unk> ( arg ) ;
return children ;
return <unk> - Math . max ( arg ) ;
return clientCache . getClient ( arg ) . <unk> ( arg ) ;
return JobHistoryUtils . <unk> ( arg ) ;
return clientCache . getClient ( arg ) . getJobStatus ( arg ) ;
return clientCache . getClient ( arg ) . <unk> ( arg ) ;
return clientCache . getClient ( arg ) . <unk> ( arg ) ;
return clientCache . getClient ( arg ) . <unk> ( arg ) ;
return clientCache . getClient ( arg ) . <unk> ( arg ) ;
return cluster . getNameNodeRpc ( arg ) . rollEditLog ( arg ) ;
return cluster . getNameNodeRpc ( arg ) . versionRequest ( arg ) . <unk> ( arg ) ;
return cluster . getNameNodeRpc ( arg ) . versionRequest ( arg ) . <unk> ( arg ) ;
return cluster . getNameNodeRpc ( arg ) . versionRequest ( arg ) . <unk> ( arg ) ;
return cluster . getNameNodeRpc ( arg ) . versionRequest ( arg ) . <unk> ( arg ) ;
return NameNodeAdapter . getLeaseManager ( arg ) . <unk> ( arg ) ;
return NameNodeAdapter . getLeaseManager ( arg ) . <unk> ( arg ) != null ;
return token . renew ( arg ) ;
return cmd . <unk> ( arg ) [ 0 ] ;
return <unk> ;
return <unk> != <unk> . <unk> ;
return <unk> . <unk> ( arg ) ;
return dfsClientConf . <unk> ;
return conf . getTrimmedStringCollection ( arg ) ;
return info . <unk> ( arg ) ;
return this . containerId ;
return this . rmContext . getContainerTokenSecretManager ( arg ) ;
return hasCorruptHeader ;
return Math . max ( arg ) ;
return <unk> ( arg ) >= checkpointConf . getTxnCount ( arg ) ;
return <unk> . copyOf ( arg ) . iterator ( arg ) ;
return attemptInfo . getCounters ( arg ) ;
return this . create ( arg ) ;
return createScannerByKey ( arg ) ;
return oldestHeartbeatNode != null ? oldestHeartbeatNode : minSpaceNode ;
return ( arg ) current . namenode ;
return trashPolicy . getCurrentTrashDir ( arg ) ;
return <unk> . getActiveNamenodeForBP ( arg ) ;
return <unk> ;
return <unk> ;
return finishTime ;
return finishTime ;
return finishTime ;
return finishTime ;
return finishTime ;
return <unk> ;
return <unk> ;
return hostname . toString ( arg ) ;
return hostname . toString ( arg ) ;
return hostname . toString ( arg ) ;
return <unk> ;
return port ;
return port ;
return datum . rackname == null ? null : datum . rackname . toString ( arg ) ;
return rackName == null ? null : rackName . toString ( arg ) ;
return rackName == null ? null : rackName . toString ( arg ) ;
return rackName == null ? null : rackName . toString ( arg ) ;
return <unk> ;
return <unk> ;
return state . toString ( arg ) ;
return state . toString ( arg ) ;
return state . toString ( arg ) ;
return status . toString ( arg ) ;
return taskStatus . toString ( arg ) ;
return taskStatus . toString ( arg ) ;
return taskStatus . toString ( arg ) ;
return dfsClientConf . <unk> ;
return <unk> . getFsStatus ( arg ) ;
return dfsClientConf . <unk> ;
return status == <unk> . <unk> ;
return <unk> ( arg ) ;
return getDelegationToken ( arg ) ;
return setSafeMode ( arg ) ;
return dfsClientConf . socketTimeout > 0 ? ( HdfsServerConstants . READ_TIMEOUT_EXTENSION * numNodes + dfsClientConf . socketTimeout ) : 0 ;
return Collections . <unk> ( arg ) ;
return doOutputAndRedirect ;
return doOutputAndRedirect ;
return doOutput ;
return <unk> && ( ( Time . now ( arg ) - time ) > <unk> ) ;
return Lists . newArrayList ( arg ) ;
return emptyTime != Long . MAX_VALUE && Time . now ( arg ) - emptyTime > <unk> ;
return evt . <unk> ( arg ) == <unk> . <unk> && wcf . cId == evt . getContainer ( arg ) . getContainerID ( arg ) ;
return getExpires ( arg ) != null && System . currentTimeMillis ( arg ) > getExpires ( arg ) ;
return Collections . unmodifiableList ( arg ) ;
return info . <unk> ;
return <unk> ;
return fc . getFileStatus ( arg ) . isDirectory ( arg ) ;
return fc . size ( arg ) - <unk> + doubleBuf . countBufferedBytes ( arg ) ;
return log . getName ( arg ) ;
return log . length ( arg ) ;
return file == null ? <unk> : file . toString ( arg ) ;
return <unk> ( arg ) ;
return bc . getReplication ( arg ) ;
return namesystem ;
return Arrays . asList ( arg ) ;
return ( arg ) ;
return datanodeStatistics . <unk> ( arg ) ;
return datanodeStatistics . <unk> ( arg ) ;
return datanodeStatistics . <unk> ( arg ) ;
return isDeprecated ( arg ) ? ( <unk> ) <unk> <unk> ' + <unk> ( arg ) + ' : getCommandField ( arg ) ;
return getConf ( arg ) . getLongBytes ( arg ) ;
return this . conf . get ( arg ) ;
return getConf ( arg ) . getInt ( arg ) ;
return <unk> ( arg ) . getBlockManager ( arg ) ;
return getFSofPath ( arg ) . getFsStatus ( arg ) ;
return getFileStatus ( arg ) . isDirectory ( arg ) ;
return FsDatasetTestUtil . <unk> ( arg ) ;
return FsDatasetTestUtil . fetchReplicaInfo ( arg ) ;
return FsDatasetTestUtil . getBlockFile ( arg ) ;
return FsDatasetTestUtil . getFile ( arg ) ;
return FsDatasetTestUtil . <unk> ( arg ) ;
return DatanodeUtil . getMetaFile ( arg ) ;
return <unk> ( arg ) . getFileStatus ( arg ) . isDirectory ( arg ) ;
return getXferAddr ( arg ) . compareTo ( arg ) ;
return getXferAddr ( arg ) ;
return getNameNodeRpc ( arg ) ;
return Lists . newArrayList ( arg ) ;
return <unk> ( arg ) . getINode ( arg ) ;
return state == <unk> . <unk> ;
return getServer ( arg ) ;
return getServer ( arg ) ;
return getLeafQueue ( arg ) ;
return getExternalState ( arg ) ;
return <unk> == null ? null : getTaskAttemptPath ( arg ) ;
return null ;
return getValue ( arg ) != null ? getValue ( arg ) : conf . getLongBytes ( arg ) ;
return <unk> . <unk> ( arg ) ;
return <unk> ( arg ) . size ( arg ) < volumes . size ( arg ) ;
return <unk> . <unk> == <unk> . getState ( arg ) . <unk> ( arg ) ;
throw e ;
return <unk> || <unk> . size ( arg ) != 1 || <unk> > <unk> || <unk> ;
return HdfsConstants . <unk> ;
return HeaderFormat . <unk> ( arg ) ;
return <unk> . getHttpAddress ( arg ) ;
return t ;
return appAttemptId . getApplicationId ( arg ) ;
return impl . startCheckpoint ( arg ) ;
return impl . versionRequest ( arg ) ;
return impl . versionRequest ( arg ) ;
return impl . errorReport ( arg ) ;
return impl . processUpgrade ( arg ) ;
return impl . register ( arg ) ;
return true ;
return bpServiceToActive != null && bpServiceToActive . <unk> ( arg ) ;
return inode . getName ( arg ) ;
return bc . getName ( arg ) ;
return inode . isDirectory ( arg ) || inode . isSymlink ( arg ) ? true : ( ( INodeFile ) inode ) . getBlocks ( arg ) != null ;
return ! inode . isFile ( arg ) || ( ( INodeFile ) inode ) . getBlocks ( arg ) != null ;
return bc == obj ;
return <unk> ( arg ) ? blockTokenSecretManager . <unk> ( arg ) : ExportedBlockKeys . <unk> ;
return isEqual ( arg ) && this . doPing == that . doPing && this . maxIdleTime == that . maxIdleTime && isEqual ( arg ) && this . pingInterval == that . pingInterval && isEqual ( arg ) && this . rpcTimeout == that . rpcTimeout && isEqual ( arg ) && this . tcpNoDelay == that . tcpNoDelay && isEqual ( arg ) ;
return true ;
return job . getInternalState ( arg ) ;
return job . getInternalState ( arg ) ;
return job . getInternalState ( arg ) ;
return <unk> ;
return submittedJobsMap . size ( arg ) ;
return submittedJobsMap . values ( arg ) ;
return jobName . getValue ( arg ) ;
return fullJobs . get ( arg ) ;
return fullJobs . get ( arg ) ;
return partialJobs ;
return partialJobs ;
return journalSet . <unk> ( arg ) ;
return <unk> . < T > <unk> ( arg ) ;
return <unk> != null ? Schema . parse ( arg ) : <unk> . get ( arg ) . <unk> ( arg ) ;
return iter . <unk> ( arg ) ;
return loginUser . isKeytab ;
return <unk> ;
return layoutVersion ^ <unk> ^ ( int ) ( <unk> ^ <unk> ^ <unk> ) ^ clusterID . hashCode ( arg ) ^ blockpoolID . hashCode ( arg ) ;
return ledgerId == ol . ledgerId && dataLayoutVersion == ol . dataLayoutVersion && firstTxId == ol . firstTxId && lastTxId == ol . lastTxId ;
return <unk> ;
return Limits . <unk> ( arg ) ;
return Collections . unmodifiableList ( arg ) ;
return localNNTarget . getNameServiceId ( arg ) ;
return <unk> . <unk> ( arg ) ;
return <unk> . <unk> ;
return log . <unk> ( arg ) ;
return getLoginUser ( arg ) . isKeytab ;
return <unk> ;
return mapping != null && mapping instanceof AbstractDNSToSwitchMapping && ( ( AbstractDNSToSwitchMapping ) mapping ) . <unk> ( arg ) ;
<unk> = maps . get ( arg ) ;
return maps . get ( arg ) . getId ( arg ) ;
return message . toString ( arg ) ;
return FSImageTestUtil . mockStorageDirectory ( arg ) ;
return super . createProxy ( arg ) ;
return super . append ( arg ) ;
return super . create ( arg ) ;
return super . delete ( arg ) ;
return super . getFileBlockLocations ( arg ) ;
return super . <unk> ( arg ) ;
return super . getFileStatus ( arg ) ;
return super . getServerDefaults ( arg ) ;
return super . getStatus ( arg ) ;
return super . listStatus ( arg ) ;
return makeQualified ( arg ) ;
return super . <unk> ( arg ) ;
return super . open ( arg ) ;
return super . rename ( arg ) ;
return super . setReplication ( arg ) ;
return getRawFileSystem ( arg ) ;
return getXferAddr ( arg ) . compareTo ( arg ) ;
return getXferAddr ( arg ) . hashCode ( arg ) ^ storageID . hashCode ( arg ) ;
return getName ( arg ) ;
return getXferAddr ( arg ) ;
return setSafeMode ( arg ) ;
return namesystem . getBlockManager ( arg ) . getBlockKeys ( arg ) ;
return namesystem . getBlockManager ( arg ) . getBlocks ( arg ) ;
return namesystem . getEditLog ( arg ) . getEditLogManifest ( arg ) ;
return namesystem . getEditLog ( arg ) . <unk> ( arg ) ;
throw new <unk> ( arg ) ;
return MRBuilderUtils . newAMInfo ( arg ) ;
return new ClientTokenIdentifier ( arg ) ;
return new ArrayList < JobStats > ( arg ) ;
return new ArrayList < CSQueue > ( arg ) ;
return new ReplicaInputStreams ( arg ) ;
return new ReplicaOutputStreams ( arg ) ;
return new ReplicaOutputStreams ( arg ) ;
<unk> = new BufferedInputStream ( arg ) ;
<unk> = new BufferedOutputStream ( arg ) ;
return DFSOutputStream . <unk> ( arg ) ;
cmds = new DatanodeCommand [ ] { val } ;
return <unk> ( arg ) ;
return trashPolicy . <unk> ( arg ) ;
return <unk> ( arg ) ;
return new Counter ( arg ) ;
return <unk> ? new <unk> ( arg ) : getRawFileSystem ( arg ) . open ( arg ) ;
return new HdfsDataOutputStream ( arg ) ;
return new HdfsDataOutputStream ( arg ) ;
return new HdfsDataOutputStream ( arg ) ;
return new HdfsDataOutputStream ( arg ) ;
return new Group ( arg ) ;
return <unk> ( arg ) ;
return new File ( arg ) . <unk> ( arg ) ;
return <unk> ;
return new <unk> < T > ( arg ) ;
return new Counter ( arg ) ;
return new Group ( arg ) ;
return <unk> ( arg ) ;
return new Group ( arg ) ;
return NameNodeProxies . createProxy ( arg ) . getProxy ( arg ) ;
return new GetUserMappingsProtocolClientSideTranslatorPB ( arg ) ;
return createSocketAddrForHost ( arg ) ;
return new TestEventHandler ( arg ) ;
return new TestEventHandler ( arg ) ;
return new <unk> ( arg ) ;
return new <unk> ( arg ) . invoke ( arg ) ;
return getInstance ( arg ) ;
return getInstance ( arg ) ;
return new HadoopKerberosName ( arg ) . getHostName ( arg ) ;
return new LengthInputStream ( arg ) ;
return new LengthInputStream ( arg ) ;
return <unk> ;
return <unk> ( arg ) ;
return new Counter ( arg ) ;
return new Counter ( arg ) ;
return this . makeQualified ( arg ) ;
return this . makeQualified ( arg ) ;
return <unk> ( arg ) ;
return getProxy ( arg ) ;
return <unk> . <unk> ( arg ) ;
return node == null ? null : new SchedulerNodeReport ( arg ) ;
return node == null ? null : new SchedulerNodeReport ( arg ) ;
return getServer ( arg ) ;
return new StateMachineFactory < OPERAND , STATE , EVENTTYPE , EVENT > ( arg ) ;
return new StateMachineFactory < OPERAND , STATE , EVENTTYPE , EVENT > ( arg ) ;
return new StateMachineFactory < OPERAND , STATE , EVENTTYPE , EVENT > ( arg ) ;
return <unk> ( arg ) ;
return false ;
return false ;
return false ;
return new <unk> ( arg ) ;
return ProtoUtils . convertFromProtoFormat ( arg ) ;
return ProtoUtils . convertFromProtoFormat ( arg ) ;
return new DatanodeInfo ( arg ) ;
return createNNProxyWithClientProtocol ( arg ) ;
return new ClientDatanodeProtocolTranslatorPB ( arg ) ;
return new ClientDatanodeProtocolTranslatorPB ( arg ) ;
return new ClientDatanodeProtocolTranslatorPB ( arg ) ;
return new org . apache . hadoop . hdfs . protocolPB . ClientNamenodeProtocolTranslatorPB ( arg ) ;
return new org . apache . hadoop . hdfs . protocolPB . ClientNamenodeProtocolTranslatorPB ( arg ) ;
return NamenodeJspHelper . getRandomDatanode ( arg ) ;
return nn . getRpcServer ( arg ) . <unk> ( arg ) ;
return nn . getRpcServer ( arg ) ;
return bpServiceToActive . <unk> ( arg ) ;
return <unk> ( arg ) ;
return nodes [ DFSUtil . getRandom ( arg ) . nextInt ( arg ) ] ;
return NetUtils . createSocketAddr ( arg ) ;
return NetUtils . createSocketAddr ( arg ) ;
return <unk> ;
return <unk> . value ( arg ) ;
return ( arg ) % <unk> ;
return options . <unk> ( arg ) ? options . get ( arg ) : false ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . ProcessUpgradeRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . ProcessUpgradeRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . ProcessUpgradeResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . DatanodeProtocolProtos . ProcessUpgradeResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . StartCheckpointRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . StartCheckpointRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . StartCheckpointResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . StartCheckpointResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . ErrorReportRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . ErrorReportRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . ErrorReportResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . ErrorReportResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . RegisterRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . RegisterRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . RegisterResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . NamenodeProtocolProtos . RegisterResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionRequestProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . VersionResponseProto . getDefaultInstance ( arg ) ;
return <unk> . class ;
return other . equals ( arg ) ;
return rpcRequest . toString ( arg ) +  <unk>  + connection . toString ( arg ) ;
return getParent ( arg ) . <unk> ( arg ) ;
return ( arg ) ? <unk> : path . toString ( arg ) ;
return invalidateBlocks . numBlocks ( arg ) ;
return <unk> . <unk> ( arg ) ;
return queue . getMetrics ( arg ) ;
return queueMgr . getQueue ( arg ) . <unk> ( arg ) ;
return new ArrayList < <unk> > ( arg ) ;
return <unk> ( arg ) ;
return <unk> ( arg ) ;
return null ;
return reduces . get ( arg ) . getId ( arg ) ;
return false ;
return <unk> ;
return new Counters ( arg ) ;
return attemptInfo . getFinishTime ( arg ) ;
return <unk> . valueOf ( arg ) ;
return attemptInfo . <unk> ( arg ) ;
return attemptInfo . <unk> ( arg ) ;
return attemptInfo . <unk> ( arg ) ;
return <unk> ;
return this . resource ;
return PBHelper . convert ( arg ) ;
return PBHelper . convert ( arg ) ;
return PBHelper . convert ( arg ) ;
return PBHelper . convert ( arg ) ;
return getRawFileSystem ( arg ) ;
return <unk> . <unk> ( arg ) ;
return <unk> ;
return rpcProxy . getTransactionId ( arg ) . <unk> ( arg ) ;
return new StringBuffer ( arg ) ;
return String . format ( arg ) ;
return str ;
return rpcServer . getServiceRpcAddress ( arg ) != null ? rpcServer . getServiceRpcAddress ( arg ) : rpcServer . <unk> ( arg ) ;
return bpServiceToActive != null && bpServiceToActive . <unk> ( arg ) ;
return size * getFileReplication ( arg ) ;
return size * getBlockReplication ( arg ) ;
return type . size ;
return type . size ;
return type . size ;
return type . size == 0 ;
return <unk> ( arg ) ;
return <unk> ( arg ) . size ( arg ) ;
return dfsClientConf . socketTimeout > 0 ? ( HdfsConstants . READ_TIMEOUT_EXTENSION * numNodes + dfsClientConf . socketTimeout ) : 0 ;
return item . exists ? 0 : 1 ;
return ( arg ) ? 0 : 1 ;
return <unk> . getFileStatus ( arg ) . isDirectory ( arg ) ? 0 : 1 ;
return item . stat . isDirectory ( arg ) ? 0 : 1 ;
return appAttemptID . getAttemptId ( arg ) ;
return appAttemptID . getAttemptId ( arg ) ;
return taskInfo . <unk> ( arg ) == null ? TaskState . KILLED : TaskState . valueOf ( arg ) ;
return getExternalState ( arg ) ;
return isFile ;
return subject == ( ( UserGroupInformation ) <unk> ) . subject ;
return addToken ( arg ) ;
return System . <unk> ( arg ) ;
return getServerDefaults ( arg ) ;
return state . toString ( arg ) ;
return t . getSchema ( arg ) ;
return t1 . name . getValue ( arg ) . compareTo ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return tableInit ( arg ) . append ( arg ) . append ( arg ) . toString ( arg ) ;
return task . getInternalState ( arg ) ;
return taskAttempt ;
return <unk> != null ;
return <unk> ;
return app . <unk> ( arg ) ;
return appSchedulingInfo . getApplicationAttemptId ( arg ) ;
return appSchedulingInfo . getApplicationId ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return appSchedulingInfo . getUser ( arg ) ;
return appSchedulingInfo . <unk> ( arg ) ;
return <unk> ;
return this . block . equals ( arg ) && this . status == other . status && ( this . delHints == other . delHints || this . delHints != null && this . delHints . equals ( arg ) ) ;
return <unk> ;
return <unk> ;
return conf ;
return this . keyString ;
return this . rmContext . getContainerTokenSecretManager ( arg ) ;
return this . diagnostics ;
return this . diagnostics . toString ( arg ) ;
return this . diagnostics . toString ( arg ) ;
return genstamp . get ( arg ) ;
return this . getApplicationAttemptId ( arg ) . compareTo ( arg ) ;
return this . <unk> ( arg ) . compareTo ( arg ) ;
return getQueue ( arg ) ;
return <unk> . getPort ( arg ) ;
return <unk> ;
return <unk> ;
return <unk> ( arg ) ;
return names ;
return <unk> ;
return nodes . size ( arg ) ;
return queue . <unk> ( arg ) . getMetrics ( arg ) ;
return queueMgr ;
return <unk> ;
return reReservations . count ( arg ) ;
return rmContext . getContainerTokenSecretManager ( arg ) ;
return rmNode . getHostName ( arg ) ;
return rmNode . getHttpAddress ( arg ) ;
return rmNode . <unk> ( arg ) ;
return rmNode . getRackName ( arg ) ;
return rmNode ;
return schedulingOpportunities . count ( arg ) ;
return this . state ;
return this . state . toString ( arg ) ;
return this . state . toString ( arg ) ;
return this . state . toString ( arg ) ;
return this . state . toString ( arg ) ;
return this . state . toString ( arg ) ;
return this . state . toString ( arg ) ;
return storageID ;
return topologyPaths ;
return this . <unk> ;
return <unk> ;
return jobsInProgress . isEmpty ( arg ) ;
return getJobsIn ( arg ) ;
return getJobsIn ( arg ) ;
return getJobsIn ( arg ) ;
return subject . <unk> ( arg ) . add ( arg ) ;
return <unk> . get ( arg ) ;
return <unk> + <unk> + <unk> ;
return <unk> ( arg ) . getCurrentTrashDir ( arg ) ;
return ( arg ) ;
return <unk> . <unk> ( arg ) ;
return Math . max ( arg ) ;
return fullName ;
return fullName ;
return <unk> . toStringChecked ( arg ) ;
return ( arg ) + 1 ;
return value . <unk> ( arg ) ;
return ( arg ) ? value . toString ( arg ) : <unk> ;
return ComparisonChain . start ( arg ) . compare ( arg ) . compare ( arg ) . result ( arg ) ;
return getVolumes ( arg ) . size ( arg ) >= <unk> ;
return <unk> ? ( is64Bit ? <unk> : <unk> ) : <unk> ;
return <unk> ( arg ) ;
return <unk> ( arg ) ;
return <unk> ( arg ) ;
ByteBuffer newBuf ;
sameVolRename ( arg ) ;
sameVolRename ( arg ) ;
rmContext . <unk> ( arg ) . applicationFinished ( arg ) ;
rmDispatcher = new <unk> ( arg ) ;
rootDir . addINode ( arg ) ;
rootDir = <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcMetrics . <unk> ( arg ) ;
rpcProxy . <unk> ( arg ) ;
runSpeculativeTaskAttemptSucceeds ( arg ) ;
runSpeculativeTaskAttemptSucceeds ( arg ) ;
runSpeculativeTaskAttemptSucceeds ( arg ) ;
runSpeculativeTaskAttemptSucceeds ( arg ) ;
s = NetUtils . getDefaultSocketFactory ( arg ) . createSocket ( arg ) ;
s = NetUtils . getDefaultSocketFactory ( arg ) . createSocket ( arg ) ;
s = NetUtils . getDefaultSocketFactory ( arg ) . createSocket ( arg ) ;
return saslRpcClient . saslConnect ( arg ) ;
return saslRpcClient . saslConnect ( arg ) ;
<unk> ( arg ) ;
sb . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) ;
<unk> ( arg ) ;
groupsStr = groups . toString ( arg ) ;
scanner = reader . createScannerByKey ( arg ) ;
<unk> = <unk> . awaitTermination ( arg ) ;
schedulingInfo = StringInterner . weakIntern ( arg ) ;
storage . readProperties ( arg ) ;
storage . writeProperties ( arg ) ;
storage . writeProperties ( arg ) ;
<unk> = HdfsConstants . INVALID_TXID ;
selfSocketAddr = dn . getXferAddress ( arg ) . toString ( arg ) ;
selfSocketAddr = dn . getXferAddress ( arg ) . toString ( arg ) ;
sendPacket ( arg ) ;
sendAllCounters = false ;
sendAllCounters = true ;
<unk> . newBuilder ( arg ) . <unk> ( arg ) . <unk> ( arg ) . build ( arg ) . <unk> ( arg ) ;
setSerialNo ( arg ) ;
setSerialNo ( arg ) ;
setSerialNo ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
server . stop ( arg ) ;
clientRpcServer . start ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = new RPC . Builder ( arg ) . setProtocol ( arg ) . setInstance ( arg ) . setBindAddress ( arg ) . setPort ( arg ) . setNumHandlers ( arg ) . setVerbose ( arg ) . build ( arg ) ;
server = createTestServer ( arg ) ;
ServiceAuthorizationManager . authorize ( arg ) ;
set = new LightWeightHashSet < Block > ( arg ) ;
this . name = DFSUtil . <unk> ( arg ) ;
parent = null ;
if ( b ) setPermission ( arg ) ;
setRegistration ( arg ) ;
setStorageInfo ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> ( arg ) ;
return shell . <unk> ( arg ) ;
short expectedReplication = bc . getBlockReplication ( arg ) ;
short expectedReplication = bc . getBlockReplication ( arg ) ;
short expectedReplication = bc . getReplication ( arg ) ;
short numExpectedReplicas = file . getBlockReplication ( arg ) ;
final short replication = fsNamesys . getBlockManager ( arg ) . adjustReplication ( arg ) ;
Short replication = params . get ( arg ) ;
size += com . google . protobuf . CodedOutputStream . computeEnumSize ( arg ) ;
size += com . google . protobuf . CodedOutputStream . computeEnumSize ( arg ) ;
slaveHandler . addKeys ( arg ) ;
slaveHandler . addKeys ( arg ) ;
<unk> ( arg ) ;
sock = NetUtils . getDefaultSocketFactory ( arg ) . createSocket ( arg ) ;
sockAndStreams = socketCache . get ( arg ) ;
boolean <unk> = false ;
<unk> = getFileStatus ( arg ) . isFile ( arg ) ;
ss = ( dnConf . socketWriteTimeout > 0 ) ? <unk> . open ( arg ) . <unk> ( arg ) : new <unk> ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
start = Time . now ( arg ) ;
<unk> ( arg ) ;
startTime = Time . now ( arg ) ;
startTime = Time . now ( arg ) ;
startTime = Time . now ( arg ) ;
startTime = Time . now ( arg ) ;
startTimeEpoch = Time . now ( arg ) ;
startTimeEpoch = Time . now ( arg ) ;
<unk> ( arg ) ;
this . stat = stat ;
p . stop ( arg ) ;
status = proxy . getServiceStatus ( arg ) ;
stateFilter = NodeState . valueOf ( arg ) ;
state_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . ReplicaStateProto . FINALIZED ;
state_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . ReplicaStateProto . FINALIZED ;
state_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . ReplicaStateProto . FINALIZED ;
<unk> final int <unk> = 1 , <unk> = 2 , <unk> = 3 , <unk> = 4 , <unk> = <unk> , <unk> = 6 , <unk> = 7 , <unk> = 8 , <unk> = 9 , <unk> = 10 , <unk> = <unk> , <unk> = <unk> , <unk> = <unk> , <unk> = <unk> , <unk> = 1 , <unk> = 2 ;
setContextAttributes ( arg ) ;
<unk> . <unk> ( arg ) ;
status . setIncludeAllCounters ( arg ) ;
status . setIncludeAllCounters ( arg ) ;
status = StreamStatus . <unk> ;
status = StreamStatus . <unk> ;
IOUtils . readFully ( arg ) ;
IOUtils . readFully ( arg ) ;
if ( blockManager != null ) blockManager . close ( arg ) ;
cluster . stop ( arg ) ;
cluster . stop ( arg ) ;
cluster . stop ( arg ) ;
cluster . stop ( arg ) ;
cluster . stop ( arg ) ;
storage . <unk> ( arg ) ;
dn . storage . <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
storage . setMostRecentCheckpointInfo ( arg ) ;
storage . setMostRecentCheckpointInfo ( arg ) ;
storage . setMostRecentCheckpointInfo ( arg ) ;
storageDir = cluster . getInstanceStorageDir ( arg ) ;
storageDir = cluster . getInstanceStorageDir ( arg ) ;
storageDir = cluster . getInstanceStorageDir ( arg ) ;
storageDir = cluster . getInstanceStorageDir ( arg ) ;
<unk> = <unk> + DFSUtil . getRandom ( arg ) . nextInt ( arg ) ;
storageInfoBuilder_ . clear ( arg ) ;
storageInfo_ = org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . <unk> . getDefaultInstance ( arg ) ;
LOG . debug ( arg ) ;
<unk> ( arg ) ;
streams . <unk> ( arg ) . write ( arg ) ;
<unk> = LogAggregationUtils . <unk> ( arg ) ;
summary . <unk> ( <unk> . getValue ( arg )
<unk> ( arg ) ;
super . handleEvent ( arg ) ;
super . handleEvent ( arg ) ;
this . schedulingOpportunities . setCount ( arg ) ;
<unk> = <unk> ( arg ) ;
t . <unk> ( arg ) ;
<unk> = new com . google . protobuf . <unk> < org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . DatanodeInfosProto , org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . DatanodeInfosProto . Builder , org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . <unk> > ( arg ) ;
<unk> = new java . util . ArrayList < org . apache . hadoop . hdfs . protocol . proto . HdfsProtos . DatanodeInfosProto > ( arg ) ;
task . inProgressAttempts . clear ( arg ) ;
taskAttempt . <unk> . <unk> ( arg ) ;
<unk> . counters = <unk> ;
taskHeartbeatHandler . progressing ( arg ) ;
taskHeartbeatHandler . progressing ( arg ) ;
taskHeartbeatHandler . progressing ( arg ) ;
taskHeartbeatHandler . progressing ( arg ) ;
taskHeartbeatHandler . progressing ( arg ) ;
taskHeartbeatHandler . progressing ( arg ) ;
taskInfo . error = StringInterner . weakIntern ( arg ) ;
taskAttempt . add ( arg ) ;
tbody . tr ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . a ( arg ) . _ ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . td ( arg ) . _ ( arg ) ;
<unk> . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) . append ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> = new ArrayList < CLICommand > ( arg ) ;
<unk> ( new YarnConfiguration ( arg ) , YarnConfiguration . <unk>
doTestRenameDirectoryAsNonExistentDirectory ( arg ) ;
doTestRenameDirectoryAsNonExistentDirectory ( arg ) ;
<unk> = <unk> . makeQualified ( arg ) ;
testType = TestType . <unk> ;
testType = TestType . <unk> ;
testType = TestType . <unk> ;
this . <unk> = absCapacity ;
this . absoluteMaxCapacity = CSQueueUtils . <unk> ( arg ) ;
this . absoluteMaxCapacity = ( Math . <unk> ( arg ) == <unk> . UNDEFINED ) ? <unk> . MAX_VALUE : ( parent . getAbsoluteCapacity ( arg ) * maximumCapacity ) ;
this . absoluteMaxCapacity = absMaxCapacity ;
this . absoluteMaxCapacity = absMaxCapacity ;
jobsInProgress . add ( arg ) ;
aggregator . <unk> ( arg ) ;
aggregator . <unk> ( arg ) ;
appSchedulingInfo . stop ( arg ) ;
this . <unk> = Arrays . copyOf ( arg ) ;
this . attemptID = TaskAttemptID . forName ( arg ) ;
this ( arg ) ;
this . bindAddress = NetUtils . getConnectAddress ( arg ) ;
this . bindAddress = NetUtils . getConnectAddress ( arg ) ;
this . blockReplQueueThreshold = ( int ) ( blockTotal * replQueueThreshold ) ;
this . blockReplQueueThreshold = ( int ) ( blockTotal * replQueueThreshold ) ;
this . blockReplQueueThreshold = ( int ) ( ( ( double ) blockTotal ) * replQueueThreshold ) ;
setBlocks ( arg ) ;
clientRpcServer . join ( arg ) ;
completedContainer ( arg ) ;
this . compressedValSerializer = serializationFactory . getSerializer ( arg ) ;
this . compressedValSerializer = getSerializer ( arg ) ;
this . conf = DFSHAAdmin . addSecurityConfiguration ( arg ) ;
this . keyString = in . <unk> ( arg ) ;
containerTokenSecretManager = new NMContainerTokenSecretManager ( arg ) ;
this . containerTokenSecretManager = <unk> ( arg ) ;
<unk> context = new <unk> ( arg ) ;
this . currentState = STATE . EOF ;
this . currentState = STATE . EOF ;
this . currentState = STATE . <unk> ;
this . currentState = STATE . <unk> ;
this . currentState = STATE . <unk> ;
this . currentState = STATE . RAND_PART_A_STATE ;
this . currentState = STATE . RAND_PART_A_STATE ;
this . currentState = STATE . RAND_PART_A_STATE ;
this . currentState = STATE . <unk> ;
this . currentState = STATE . <unk> ;
this . currentState = STATE . <unk> ;
AsyncDispatcher dispatcher = new AsyncDispatcher ( arg ) ;
this . doOutputAndRedirect = doOutputAndRedirect ;
this . doOutputAndRedirect = doOutputAndRedirect ;
this . doOutput = doOutput ;
this . startCheckpoint ( arg ) ;
this . environment . put ( arg ) ;
this . versionRequest ( arg ) ;
this . failtime = Time . now ( arg ) + ( ( timeout <= 0 ) ? Long . MAX_VALUE : timeout ) ;
this . <unk> = FSImageSerialization . readLong ( arg ) ;
genstamp . set ( arg ) ;
this . getBlockManager ( arg ) . processIncrementalBlockReport ( arg ) ;
this . hostName = hostName == null ? null : new NodeName ( arg ) ;
this . <unk> = in . <unk> ( arg ) ;
<unk> . add ( arg ) ;
this . jobID = <unk> . forName ( arg ) ;
this . jobName = new JobName ( arg ) ;
this . <unk> = new <unk> ( arg ) ;
this . keySerializer = serializationFactory . getSerializer ( arg ) ;
this . keySerializer = getSerializer ( arg ) ;
this . <unk> = Time . now ( arg ) ;
this . layoutVersion = HdfsConstants . LAYOUT_VERSION ;
this . layoutVersion = HdfsConstants . LAYOUT_VERSION ;
this . layoutVersion = HdfsConstants . LAYOUT_VERSION ;
this . layoutVersion = HdfsConstants . LAYOUT_VERSION ;
this . mapOutputFile = ReflectionUtils . newInstance ( arg ) ;
this . <unk> = Math . max ( arg ) ;
this . maximumCapacity = maximumCapacity ;
setLocalName ( arg ) ;
this . name = new NodeName ( arg ) ;
this . namenode = RPC . <unk> ( arg ) ;
this . namenode = NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
this . namenode = NameNodeProxies . createNonHAProxy ( arg ) . getProxy ( arg ) ;
this . namesystem = FSNamesystem . loadFromDisk ( arg ) ;
this . nnAddr = NetUtils . createSocketAddrForHost ( arg ) ;
this . nnAddr = NetUtils . createSocketAddrForHost ( arg ) ;
this . nnAddr = NetUtils . createSocketAddr ( arg ) ;
this . nnAddr = NetUtils . createSocketAddr ( arg ) ;
nodes . put ( arg ) ;
nodes . remove ( arg ) ;
this . <unk> = FSImageSerialization . readLong ( arg ) ;
this . <unk> = ( int ) bsR ( arg ) ;
this . versionRequest ( arg ) ;
this . queue = new <unk> ( arg ) ;
reReservations . add ( arg ) ;
this . reReservations . setCount ( arg ) ;
reReservations . setCount ( arg ) ;
this . errorReport ( arg ) ;
this . processUpgrade ( arg ) ;
resetSchedulingOpportunities ( arg ) ;
resetSchedulingOpportunities ( arg ) ;
this . <unk> = response ;
this . <unk> = RetryUtils . getDefaultRetryPolicy ( arg ) ;
this . rmAddress = conf . getSocketAddr ( arg ) ;
rmContext . <unk> ( arg ) . getEventHandler ( arg ) . handle ( arg ) ;
this . rmDispatcher = new AsyncDispatcher ( arg ) ;
this . rmDispatcher = createDispatcher ( arg ) ;
this . rmDispatcher = createDispatcher ( arg ) ;
<unk> = <unk> . <unk> ( arg ) ;
this . rpc = <unk> ( arg ) ;
rpcServer . join ( arg ) ;
this . schedulingInfo = StringInterner . weakIntern ( arg ) ;
this . schedulingOpportunities . setCount ( arg ) ;
schedulingOpportunities . setCount ( arg ) ;
this . server . stop ( arg ) ;
this . server . stop ( arg ) ;
this . server . stop ( arg ) ;
this . server . stop ( arg ) ;
this . clientRpcServer . join ( arg ) ;
this . clientRpcServer . <unk> ( arg ) ;
this . register ( arg ) ;
this . state = StringInterner . weakIntern ( arg ) ;
this . <unk> = <unk> . forName ( arg ) ;
this . <unk> = <unk> ( arg ) ;
this . uncompressedValSerializer = serializationFactory . getSerializer ( arg ) ;
this . uncompressedValSerializer = getSerializer ( arg ) ;
unreserve ( arg ) ;
unreserve ( arg ) ;
this . user = StringInterner . weakIntern ( arg ) ;
this . user = new <unk> ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
this . readLock . <unk> ( arg ) ;
this . readLock . <unk> ( arg ) ;
LOG . error ( arg ) ;
throw new IOException ( arg ) ;
return recordFactory . newRecordInstance ( arg ) ;
return RetryAction . FAIL ;
return RetryAction . FAIL ;
throw ( arg ) ( new <unk> ( arg ) . <unk> ( arg ) ) ;
throw new PathNotFoundException ( arg ) ;
throw new PathNotFoundException ( arg ) ;
throw new PathNotFoundException ( arg ) ;
throw new PathNotFoundException ( arg ) ;
throw new PathNotFoundException ( arg ) ;
throw new PathNotFoundException ( arg ) ;
return <unk> ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new HadoopIllegalArgumentException ( arg ) ;
throw new <unk> ( arg ) ;
return path + : <unk> <unk> file <unk> <unk> ;
throw new <unk> ( arg ) ;
return attemptInfo . <unk> ( arg ) ;
throw <unk> . <unk> ( arg ) ;
time = Time . now ( arg ) ;
<unk> Time . now ( arg ) - start ;
commandTimer . schedule ( arg ) ;
commandTimer . schedule ( arg ) ;
timestamp = Time . now ( arg ) ;
timestamp = Time . now ( arg ) ;
timestamp = Time . now ( arg ) ;
timestamp2 = Time . now ( arg ) ;
timestamp2 = Time . now ( arg ) ;
timestamp2 = Time . now ( arg ) ;
updateMap . put ( arg ) ;
updateMap . clear ( arg ) ;
FSImageSerialization . writeLong ( arg ) ;
FSImageSerialization . writeLong ( arg ) ;
HAServiceProtocolHelper . monitorHealth ( arg ) ;
HAServiceProtocolHelper . transitionToActive ( arg ) ;
toSvcStatus = <unk> . getServiceStatus ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
SecurityUtil . setTokenService ( arg ) ;
container . <unk> ( arg ) ;
tool . printMap ( arg ) ;
tool . printMap ( arg ) ;
tool . printMap ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
<unk> . output ( arg ) ;
total += DataNodeTestUtils . getFSDataset ( arg ) . <unk> ( arg ) ;
total = new Counters ( arg ) ;
total = Time . now ( arg ) - start ;
TestTrash . <unk> ( arg ) ;
TestTrash . <unk> ( arg ) ;
harness . <unk> ( arg ) ;
txid = cluster . getNameNodeRpc ( arg ) . getTransactionID ( arg ) ;
txid = cluster . getNameNodeRpc ( arg ) . getTransactionID ( arg ) ;
<unk> . setBlockCollection ( arg ) ;
ugi . <unk> ( arg ) ;
out . <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
<unk> = <unk> ( arg ) + colTxt ( arg ) + <unk> of <unk> <unk> + colTxt ( arg ) + : + colTxt ( arg ) + fsn . getBlockManager ( arg ) . <unk> ( arg ) ;
Thread . sleep ( arg ) ;
Thread . sleep ( arg ) ;
CSQueueUtils . updateQueueStatistics ( arg ) ;
CSQueueUtils . updateQueueStatistics ( arg ) ;
CSQueueUtils . updateQueueStatistics ( arg ) ;
CSQueueUtils . updateQueueStatistics ( arg ) ;
<unk> [ i ] = DataNodeTestUtils . getFSDataset ( arg ) . getStoredBlock ( arg ) ;
user = StringInterner . weakIntern ( arg ) ;
user = <unk> ( arg ) ;
<unk> = LogAggregationUtils . <unk> ( arg ) ;
Resource userLimit = <unk> ( arg ) ;
<unk> . <unk> ( arg ) ;
util = new DFSTestUtil . Builder ( arg ) . setName ( arg ) . setNumFiles ( arg ) . build ( arg ) ;
v = ( FSVolume ) <unk> . getVolume ( arg ) ;
<unk> = className . toStringChecked ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
HttpFSUtils . validateResponse ( arg ) ;
validation = EditLogFileInputStream . validateEditLog ( arg ) ;
validation = EditLogFileInputStream . validateEditLog ( arg ) ;
validation = EditLogFileInputStream . validateEditLog ( arg ) ;
validation = EditLogFileInputStream . validateEditLog ( arg ) ;
validation = EditLogFileInputStream . validateEditLog ( arg ) ;
value = this . getClass ( arg ) . <unk> ( arg ) . get ( arg ) . toString ( arg ) ;
values [ call . index ] = call . getRpcResult ( arg ) ;
<unk> . logs . <unk> ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
Assert . assertEquals ( arg ) ;
<unk> ( arg ) ;
verify ( arg ) . addDelegationTokens ( arg ) ;
verify ( arg ) . getNewApplication ( arg ) ;
verify ( arg ) . isDirectory ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
assertEquals ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
verifyStateInvalidException ( arg ) ;
verifyStateInvalidException ( arg ) ;
verifyStateInvalidException ( arg ) ;
verifyLayoutVersion ( arg ) ;
verifyLayoutVersion ( arg ) ;
verifyLayoutVersion ( arg ) ;
<unk> = ( FSVolume ) volumeMap . get ( arg ) . getVolume ( arg ) ;
( ( FSVolume ) volume ) . shutdown ( arg ) ;
i . remove ( arg ) ;
<unk> . <unk> ( arg ) ;
cluster . waitForActiveLockHolder ( arg ) ;
cluster . waitForActiveLockHolder ( arg ) ;
HATestUtil . waitForDNDeletions ( arg ) ;
HATestUtil . waitForDNDeletions ( arg ) ;
HATestUtil . waitForDNDeletions ( arg ) ;
HATestUtil . waitForNNToIssueDeletions ( arg ) ;
HATestUtil . waitForNNToIssueDeletions ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
HATestUtil . waitForStandbyToCatchUp ( arg ) ;
<unk> = new <unk> ( arg ) ;
mockJob . tasks = tasks ;
mockJob . tasks = tasks ;
when ( arg ) . thenThrow ( arg ) . thenThrow ( arg ) . <unk> ( arg ) ;
workDir = new Path ( arg ) ;
workDir = getTestRootPath ( arg ) ;
int <unk> = this . <unk> ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
DFSTestUtil . createFile ( arg ) ;
<unk> ( arg ) ;
readLock ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> ( arg ) ;
<unk> < Hamlet > pre = html . pre ( arg ) ;
bufCurrent . <unk> ( arg ) ;
<unk> . set ( arg ) ;
zkc = connectZooKeeper ( arg ) ;
zkc = BKJMUtil . connectZooKeeper ( arg ) ;
zkc = BKJMUtil . connectZooKeeper ( arg ) ;
zvec = ( ( zvec << 1 ) | ( ( bsBuffShadow >> <unk> ) & 1 ) ) ;
